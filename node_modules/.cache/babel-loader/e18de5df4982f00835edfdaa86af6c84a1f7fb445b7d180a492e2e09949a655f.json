{"ast":null,"code":"import { __rest } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport clsx from 'clsx';\nimport { useUniqueId } from '@cloudscape-design/component-toolkit/internal';\nimport { getAnalyticsMetadataAttribute } from '@cloudscape-design/component-toolkit/internal/analytics-metadata';\nimport { getBaseProps } from '../internal/base-component';\nimport { useFormFieldContext } from '../internal/context/form-field-context';\nimport useRadioGroupForwardFocus from '../internal/hooks/forward-focus/radio-group';\nimport RadioButton from './radio-button';\nimport styles from './styles.css.js';\nconst InternalRadioGroup = React.forwardRef((_a, ref) => {\n  var {\n      name,\n      value,\n      items,\n      ariaLabel,\n      ariaRequired,\n      ariaControls,\n      onChange,\n      readOnly,\n      __internalRootRef = null\n    } = _a,\n    props = __rest(_a, [\"name\", \"value\", \"items\", \"ariaLabel\", \"ariaRequired\", \"ariaControls\", \"onChange\", \"readOnly\", \"__internalRootRef\"]);\n  const {\n    ariaDescribedby,\n    ariaLabelledby\n  } = useFormFieldContext(props);\n  const baseProps = getBaseProps(props);\n  const generatedName = useUniqueId('awsui-radio-');\n  const [radioButtonRef, radioButtonRefIndex] = useRadioGroupForwardFocus(ref, items, value);\n  return React.createElement(\"div\", Object.assign({\n    role: \"radiogroup\",\n    \"aria-labelledby\": ariaLabelledby,\n    \"aria-label\": ariaLabel,\n    \"aria-describedby\": ariaDescribedby,\n    \"aria-required\": ariaRequired,\n    \"aria-controls\": ariaControls,\n    \"aria-readonly\": readOnly ? 'true' : undefined\n  }, baseProps, {\n    className: clsx(baseProps.className, styles.root),\n    ref: __internalRootRef\n  }), items && items.map((item, index) => React.createElement(RadioButton, Object.assign({\n    key: item.value,\n    ref: index === radioButtonRefIndex ? radioButtonRef : undefined,\n    checked: item.value === value,\n    name: name || generatedName,\n    value: item.value,\n    label: item.label,\n    description: item.description,\n    disabled: item.disabled,\n    onChange: onChange,\n    controlId: item.controlId,\n    readOnly: readOnly\n  }, getAnalyticsMetadataAttribute(!item.disabled && !readOnly ? {\n    detail: {\n      position: `${index + 1}`,\n      value: item.value\n    }\n  } : {})))));\n});\nexport default InternalRadioGroup;","map":{"version":3,"names":["React","clsx","useUniqueId","getAnalyticsMetadataAttribute","getBaseProps","useFormFieldContext","useRadioGroupForwardFocus","RadioButton","styles","InternalRadioGroup","forwardRef","_a","ref","name","value","items","ariaLabel","ariaRequired","ariaControls","onChange","readOnly","__internalRootRef","props","__rest","ariaDescribedby","ariaLabelledby","baseProps","generatedName","radioButtonRef","radioButtonRefIndex","createElement","Object","assign","role","undefined","className","root","map","item","index","key","checked","label","description","disabled","controlId","detail","position"],"sources":["/Users/naman/Desktop/Portfolio/react-portfolio/node_modules/src/radio-group/internal.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport clsx from 'clsx';\n\nimport { useUniqueId } from '@cloudscape-design/component-toolkit/internal';\nimport { getAnalyticsMetadataAttribute } from '@cloudscape-design/component-toolkit/internal/analytics-metadata';\n\nimport { getBaseProps } from '../internal/base-component';\nimport { useFormFieldContext } from '../internal/context/form-field-context';\nimport useRadioGroupForwardFocus from '../internal/hooks/forward-focus/radio-group';\nimport { InternalBaseComponentProps } from '../internal/hooks/use-base-component';\nimport { GeneratedAnalyticsMetadataRadioGroupSelect } from './analytics-metadata/interfaces';\nimport { RadioGroupProps } from './interfaces';\nimport RadioButton from './radio-button';\n\nimport styles from './styles.css.js';\n\ntype InternalRadioGroupProps = RadioGroupProps & InternalBaseComponentProps;\n\nconst InternalRadioGroup = React.forwardRef(\n  (\n    {\n      name,\n      value,\n      items,\n      ariaLabel,\n      ariaRequired,\n      ariaControls,\n      onChange,\n      readOnly,\n      __internalRootRef = null,\n      ...props\n    }: InternalRadioGroupProps,\n    ref: React.Ref<RadioGroupProps.Ref>\n  ) => {\n    const { ariaDescribedby, ariaLabelledby } = useFormFieldContext(props);\n    const baseProps = getBaseProps(props);\n    const generatedName = useUniqueId('awsui-radio-');\n\n    const [radioButtonRef, radioButtonRefIndex] = useRadioGroupForwardFocus(ref, items, value);\n\n    return (\n      <div\n        role=\"radiogroup\"\n        aria-labelledby={ariaLabelledby}\n        aria-label={ariaLabel}\n        aria-describedby={ariaDescribedby}\n        aria-required={ariaRequired}\n        aria-controls={ariaControls}\n        aria-readonly={readOnly ? 'true' : undefined}\n        {...baseProps}\n        className={clsx(baseProps.className, styles.root)}\n        ref={__internalRootRef}\n      >\n        {items &&\n          items.map((item, index) => (\n            <RadioButton\n              key={item.value}\n              ref={index === radioButtonRefIndex ? radioButtonRef : undefined}\n              checked={item.value === value}\n              name={name || generatedName}\n              value={item.value}\n              label={item.label}\n              description={item.description}\n              disabled={item.disabled}\n              onChange={onChange}\n              controlId={item.controlId}\n              readOnly={readOnly}\n              {...getAnalyticsMetadataAttribute(\n                !item.disabled && !readOnly\n                  ? {\n                      detail: {\n                        position: `${index + 1}`,\n                        value: item.value,\n                      } as Partial<GeneratedAnalyticsMetadataRadioGroupSelect['detail']>,\n                    }\n                  : {}\n              )}\n            />\n          ))}\n      </div>\n    );\n  }\n);\n\nexport default InternalRadioGroup;\n"],"mappings":";AAAA;AACA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,MAAM;AAEvB,SAASC,WAAW,QAAQ,+CAA+C;AAC3E,SAASC,6BAA6B,QAAQ,kEAAkE;AAEhH,SAASC,YAAY,QAAQ,4BAA4B;AACzD,SAASC,mBAAmB,QAAQ,wCAAwC;AAC5E,OAAOC,yBAAyB,MAAM,6CAA6C;AAInF,OAAOC,WAAW,MAAM,gBAAgB;AAExC,OAAOC,MAAM,MAAM,iBAAiB;AAIpC,MAAMC,kBAAkB,GAAGT,KAAK,CAACU,UAAU,CACzC,CACEC,EAW0B,EAC1BC,GAAmC,KACjC;MAbF;MACEC,IAAI;MACJC,KAAK;MACLC,KAAK;MACLC,SAAS;MACTC,YAAY;MACZC,YAAY;MACZC,QAAQ;MACRC,QAAQ;MACRC,iBAAiB,GAAG;IAAI,IAAAV,EAEA;IADrBW,KAAK,GAAAC,MAAA,CAAAZ,EAAA,EAVV,oHAWC,CADS;EAIV,MAAM;IAAEa,eAAe;IAAEC;EAAc,CAAE,GAAGpB,mBAAmB,CAACiB,KAAK,CAAC;EACtE,MAAMI,SAAS,GAAGtB,YAAY,CAACkB,KAAK,CAAC;EACrC,MAAMK,aAAa,GAAGzB,WAAW,CAAC,cAAc,CAAC;EAEjD,MAAM,CAAC0B,cAAc,EAAEC,mBAAmB,CAAC,GAAGvB,yBAAyB,CAACM,GAAG,EAAEG,KAAK,EAAED,KAAK,CAAC;EAE1F,OACEd,KAAA,CAAA8B,aAAA,QAAAC,MAAA,CAAAC,MAAA;IACEC,IAAI,EAAC,YAAY;IAAA,mBACAR,cAAc;IAAA,cACnBT,SAAS;IAAA,oBACHQ,eAAe;IAAA,iBAClBP,YAAY;IAAA,iBACZC,YAAY;IAAA,iBACZE,QAAQ,GAAG,MAAM,GAAGc;EAAS,GACxCR,SAAS;IACbS,SAAS,EAAElC,IAAI,CAACyB,SAAS,CAACS,SAAS,EAAE3B,MAAM,CAAC4B,IAAI,CAAC;IACjDxB,GAAG,EAAES;EAAiB,IAErBN,KAAK,IACJA,KAAK,CAACsB,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KACpBvC,KAAA,CAAA8B,aAAA,CAACvB,WAAW,EAAAwB,MAAA,CAAAC,MAAA;IACVQ,GAAG,EAAEF,IAAI,CAACxB,KAAK;IACfF,GAAG,EAAE2B,KAAK,KAAKV,mBAAmB,GAAGD,cAAc,GAAGM,SAAS;IAC/DO,OAAO,EAAEH,IAAI,CAACxB,KAAK,KAAKA,KAAK;IAC7BD,IAAI,EAAEA,IAAI,IAAIc,aAAa;IAC3Bb,KAAK,EAAEwB,IAAI,CAACxB,KAAK;IACjB4B,KAAK,EAAEJ,IAAI,CAACI,KAAK;IACjBC,WAAW,EAAEL,IAAI,CAACK,WAAW;IAC7BC,QAAQ,EAAEN,IAAI,CAACM,QAAQ;IACvBzB,QAAQ,EAAEA,QAAQ;IAClB0B,SAAS,EAAEP,IAAI,CAACO,SAAS;IACzBzB,QAAQ,EAAEA;EAAQ,GACdjB,6BAA6B,CAC/B,CAACmC,IAAI,CAACM,QAAQ,IAAI,CAACxB,QAAQ,GACvB;IACE0B,MAAM,EAAE;MACNC,QAAQ,EAAE,GAAGR,KAAK,GAAG,CAAC,EAAE;MACxBzB,KAAK,EAAEwB,IAAI,CAACxB;;GAEf,GACD,EAAE,CACP,EAEJ,CAAC,CACA;AAEV,CAAC,CACF;AAED,eAAeL,kBAAkB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}