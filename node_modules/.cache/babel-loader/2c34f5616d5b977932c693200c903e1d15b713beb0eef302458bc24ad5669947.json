{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useEffect, useRef } from 'react';\nimport clsx from 'clsx';\nimport { getAnalyticsMetadataAttribute } from '@cloudscape-design/component-toolkit/internal/analytics-metadata';\nimport InternalIcon from '../../icon/internal';\nimport { useDropdownContext } from '../../internal/components/dropdown/context';\nimport useHiddenDescription from '../../internal/hooks/use-hidden-description';\nimport { useVisualRefresh } from '../../internal/hooks/use-visual-mode';\nimport Tooltip from '../tooltip';\nimport { getMenuItemCheckboxProps, getMenuItemProps } from '../utils/menu-item';\nimport { isCheckboxItem, isLinkItem } from '../utils/utils';\nimport { getItemTarget } from '../utils/utils';\nimport analyticsLabels from '../analytics-metadata/styles.css.js';\nimport styles from './styles.css.js';\nconst ItemElement = _ref => {\n  let {\n    position = '1',\n    item,\n    disabled,\n    onItemActivate,\n    highlighted,\n    highlightItem,\n    showDivider,\n    hasCategoryHeader,\n    isKeyboardHighlighted = false,\n    analyticsMetadataTransformer = metadata => metadata,\n    variant = 'normal',\n    linkStyle\n  } = _ref;\n  const isLink = isLinkItem(item);\n  const isCheckbox = isCheckboxItem(item);\n  const onClick = event => {\n    // Stop propagation to parent node and handle event exclusively in here. This ensures\n    // that no group will interfere with the default behavior of links\n    event.stopPropagation();\n    if (!isLink) {\n      event.preventDefault();\n    }\n    if (!disabled) {\n      onItemActivate(item, event);\n    }\n  };\n  const onHover = () => {\n    highlightItem(item);\n  };\n  const isVisualRefresh = useVisualRefresh();\n  return React.createElement(\"li\", Object.assign({\n    className: clsx(styles['item-element'], styles[`variant-${variant}`], {\n      [styles.highlighted]: highlighted,\n      [styles.disabled]: disabled,\n      [styles['has-category-header']]: hasCategoryHeader,\n      [styles['has-checkmark']]: isCheckbox,\n      [styles['show-divider']]: showDivider,\n      [styles['is-focused']]: isKeyboardHighlighted,\n      [styles['visual-refresh']]: isVisualRefresh\n    }),\n    role: \"presentation\",\n    \"data-testid\": item.id,\n    \"data-description\": item.description,\n    onClick: onClick,\n    onMouseEnter: onHover,\n    onTouchStart: onHover\n  }, getAnalyticsMetadataAttribute(disabled ? {} : analyticsMetadataTransformer({\n    action: 'click',\n    detail: {\n      position,\n      id: item.id,\n      label: `.${analyticsLabels['menu-item']}`,\n      href: item.href || ''\n    }\n  }))), React.createElement(MenuItem, {\n    item: item,\n    disabled: disabled,\n    highlighted: highlighted,\n    linkStyle: linkStyle\n  }));\n};\nfunction MenuItem(_ref2) {\n  let {\n    item,\n    disabled,\n    highlighted,\n    linkStyle\n  } = _ref2;\n  const menuItemRef = useRef(null);\n  const isCheckbox = isCheckboxItem(item);\n  const isCurrentBreadcrumb = !isCheckbox && item.isCurrentBreadcrumb;\n  useEffect(() => {\n    if (highlighted && menuItemRef.current) {\n      menuItemRef.current.focus();\n    }\n  }, [highlighted]);\n  const isDisabledWithReason = disabled && item.disabledReason;\n  const {\n    targetProps,\n    descriptionEl\n  } = useHiddenDescription(item.disabledReason);\n  const menuItemProps = Object.assign(Object.assign({\n    'aria-label': item.ariaLabel,\n    className: clsx(styles['menu-item'], analyticsLabels['menu-item'], linkStyle && styles['link-style'], linkStyle && highlighted && styles['link-style-highlighted'], isCurrentBreadcrumb && styles['current-breadcrumb']),\n    'aria-current': isCurrentBreadcrumb,\n    lang: item.lang,\n    ref: menuItemRef,\n    // We are using the roving tabindex technique to manage the focus state of the dropdown.\n    // The current element will always have tabindex=0 which means that it can be tabbed to,\n    // while all other items have tabindex=-1 so we can focus them when necessary.\n    tabIndex: highlighted ? 0 : -1\n  }, isCheckbox ? getMenuItemCheckboxProps({\n    disabled,\n    checked: item.checked\n  }) : getMenuItemProps({\n    disabled\n  })), isDisabledWithReason ? targetProps : {});\n  const menuItem = isLinkItem(item) ? React.createElement(\"a\", Object.assign({}, menuItemProps, {\n    href: !disabled ? item.href : undefined,\n    target: getItemTarget(item),\n    rel: item.external ? 'noopener noreferrer' : undefined\n  }), React.createElement(MenuItemContent, {\n    item: item,\n    disabled: disabled\n  })) : React.createElement(\"span\", Object.assign({}, menuItemProps), React.createElement(MenuItemContent, {\n    item: item,\n    disabled: disabled\n  }));\n  const {\n    position\n  } = useDropdownContext();\n  const tooltipPosition = position === 'bottom-left' || position === 'top-left' ? 'left' : 'right';\n  return isDisabledWithReason ? React.createElement(Tooltip, {\n    content: item.disabledReason,\n    position: tooltipPosition,\n    className: styles['item-tooltip-wrapper']\n  }, menuItem, descriptionEl) : menuItem;\n}\nconst MenuItemContent = _ref3 => {\n  let {\n    item,\n    disabled\n  } = _ref3;\n  const hasIcon = !!(item.iconName || item.iconUrl || item.iconSvg);\n  const hasExternal = isLinkItem(item) && item.external;\n  const isCheckbox = isCheckboxItem(item);\n  return React.createElement(React.Fragment, null, isCheckbox && React.createElement(MenuItemCheckmark, {\n    checked: item.checked,\n    disabled: disabled\n  }), hasIcon && React.createElement(MenuItemIcon, {\n    name: item.iconName,\n    url: item.iconUrl,\n    svg: item.iconSvg,\n    alt: item.iconAlt,\n    badge: item.badge\n  }), item.text, hasExternal && React.createElement(ExternalIcon, {\n    disabled: disabled,\n    ariaLabel: item.externalIconAriaLabel\n  }));\n};\nconst MenuItemIcon = props => React.createElement(\"span\", {\n  className: styles.icon\n}, React.createElement(InternalIcon, Object.assign({}, props)));\n// Toggle has aria-hidden set because it's just used as a graphical element,\n// a11y attributes for the checkmark are communicated through the role and aria-checked state\n// of the menu element item.\nconst MenuItemCheckmark = _ref4 => {\n  let {\n    disabled,\n    checked\n  } = _ref4;\n  const checkmark = React.createElement(InternalIcon, {\n    variant: disabled ? 'disabled' : 'normal',\n    name: \"check\"\n  });\n  return React.createElement(\"span\", {\n    className: clsx(styles.icon, styles.checkmark, {\n      [styles.disabled]: disabled\n    }),\n    \"aria-hidden\": \"true\",\n    style: {\n      visibility: checked ? 'visible' : 'hidden'\n    }\n  }, checkmark);\n};\nconst ExternalIcon = _ref5 => {\n  let {\n    disabled,\n    ariaLabel\n  } = _ref5;\n  const icon = React.createElement(InternalIcon, {\n    variant: disabled ? 'disabled' : 'normal',\n    name: \"external\"\n  });\n  return React.createElement(\"span\", {\n    className: styles['external-icon'],\n    role: ariaLabel ? 'img' : undefined,\n    \"aria-label\": ariaLabel\n  }, icon);\n};\nexport default ItemElement;","map":{"version":3,"names":["React","useEffect","useRef","clsx","getAnalyticsMetadataAttribute","InternalIcon","useDropdownContext","useHiddenDescription","useVisualRefresh","Tooltip","getMenuItemCheckboxProps","getMenuItemProps","isCheckboxItem","isLinkItem","getItemTarget","analyticsLabels","styles","ItemElement","_ref","position","item","disabled","onItemActivate","highlighted","highlightItem","showDivider","hasCategoryHeader","isKeyboardHighlighted","analyticsMetadataTransformer","metadata","variant","linkStyle","isLink","isCheckbox","onClick","event","stopPropagation","preventDefault","onHover","isVisualRefresh","createElement","Object","assign","className","role","id","description","onMouseEnter","onTouchStart","action","detail","label","href","MenuItem","_ref2","menuItemRef","isCurrentBreadcrumb","current","focus","isDisabledWithReason","disabledReason","targetProps","descriptionEl","menuItemProps","ariaLabel","lang","ref","tabIndex","checked","menuItem","undefined","target","rel","external","MenuItemContent","tooltipPosition","content","_ref3","hasIcon","iconName","iconUrl","iconSvg","hasExternal","Fragment","MenuItemCheckmark","MenuItemIcon","name","url","svg","alt","iconAlt","badge","text","ExternalIcon","externalIconAriaLabel","props","icon","_ref4","checkmark","style","visibility","_ref5"],"sources":["/Users/naman/Desktop/Portfolio/react-portfolio/node_modules/src/button-dropdown/item-element/index.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useEffect, useRef } from 'react';\nimport clsx from 'clsx';\n\nimport {\n  GeneratedAnalyticsMetadataFragment,\n  getAnalyticsMetadataAttribute,\n} from '@cloudscape-design/component-toolkit/internal/analytics-metadata';\n\nimport InternalIcon, { InternalIconProps } from '../../icon/internal';\nimport { useDropdownContext } from '../../internal/components/dropdown/context';\nimport useHiddenDescription from '../../internal/hooks/use-hidden-description';\nimport { useVisualRefresh } from '../../internal/hooks/use-visual-mode';\nimport { GeneratedAnalyticsMetadataButtonDropdownClick } from '../analytics-metadata/interfaces';\nimport { InternalCheckboxItem, InternalItem, ItemProps, LinkItem } from '../interfaces';\nimport Tooltip from '../tooltip';\nimport { getMenuItemCheckboxProps, getMenuItemProps } from '../utils/menu-item';\nimport { isCheckboxItem, isLinkItem } from '../utils/utils';\nimport { getItemTarget } from '../utils/utils';\n\nimport analyticsLabels from '../analytics-metadata/styles.css.js';\nimport styles from './styles.css.js';\n\nconst ItemElement = ({\n  position = '1',\n  item,\n  disabled,\n  onItemActivate,\n  highlighted,\n  highlightItem,\n  showDivider,\n  hasCategoryHeader,\n  isKeyboardHighlighted = false,\n  analyticsMetadataTransformer = (metadata: GeneratedAnalyticsMetadataFragment) => metadata,\n  variant = 'normal',\n  linkStyle,\n}: ItemProps) => {\n  const isLink = isLinkItem(item);\n  const isCheckbox = isCheckboxItem(item);\n  const onClick = (event: React.MouseEvent) => {\n    // Stop propagation to parent node and handle event exclusively in here. This ensures\n    // that no group will interfere with the default behavior of links\n    event.stopPropagation();\n    if (!isLink) {\n      event.preventDefault();\n    }\n    if (!disabled) {\n      onItemActivate(item, event);\n    }\n  };\n\n  const onHover = () => {\n    highlightItem(item);\n  };\n\n  const isVisualRefresh = useVisualRefresh();\n\n  return (\n    <li\n      className={clsx(styles['item-element'], styles[`variant-${variant}`], {\n        [styles.highlighted]: highlighted,\n        [styles.disabled]: disabled,\n        [styles['has-category-header']]: hasCategoryHeader,\n        [styles['has-checkmark']]: isCheckbox,\n        [styles['show-divider']]: showDivider,\n        [styles['is-focused']]: isKeyboardHighlighted,\n        [styles['visual-refresh']]: isVisualRefresh,\n      })}\n      role=\"presentation\"\n      data-testid={item.id}\n      data-description={item.description}\n      onClick={onClick}\n      onMouseEnter={onHover}\n      onTouchStart={onHover}\n      {...getAnalyticsMetadataAttribute(\n        disabled\n          ? {}\n          : (analyticsMetadataTransformer!({\n              action: 'click',\n              detail: {\n                position,\n                id: item.id,\n                label: `.${analyticsLabels['menu-item']}`,\n                href: (item as LinkItem).href || '',\n              },\n            }) as GeneratedAnalyticsMetadataButtonDropdownClick)\n      )}\n    >\n      <MenuItem item={item} disabled={disabled} highlighted={highlighted} linkStyle={linkStyle} />\n    </li>\n  );\n};\n\ninterface MenuItemProps {\n  item: InternalItem | InternalCheckboxItem;\n  disabled: boolean;\n  highlighted: boolean;\n  linkStyle?: boolean;\n}\n\nfunction MenuItem({ item, disabled, highlighted, linkStyle }: MenuItemProps) {\n  const menuItemRef = useRef<(HTMLSpanElement & HTMLAnchorElement) | null>(null);\n  const isCheckbox = isCheckboxItem(item);\n  const isCurrentBreadcrumb = !isCheckbox && item.isCurrentBreadcrumb;\n\n  useEffect(() => {\n    if (highlighted && menuItemRef.current) {\n      menuItemRef.current.focus();\n    }\n  }, [highlighted]);\n\n  const isDisabledWithReason = disabled && item.disabledReason;\n  const { targetProps, descriptionEl } = useHiddenDescription(item.disabledReason);\n  const menuItemProps: React.HTMLAttributes<HTMLSpanElement & HTMLAnchorElement> = {\n    'aria-label': item.ariaLabel,\n    className: clsx(\n      styles['menu-item'],\n      analyticsLabels['menu-item'],\n      linkStyle && styles['link-style'],\n      linkStyle && highlighted && styles['link-style-highlighted'],\n      isCurrentBreadcrumb && styles['current-breadcrumb']\n    ),\n    'aria-current': isCurrentBreadcrumb,\n    lang: item.lang,\n    ref: menuItemRef,\n    // We are using the roving tabindex technique to manage the focus state of the dropdown.\n    // The current element will always have tabindex=0 which means that it can be tabbed to,\n    // while all other items have tabindex=-1 so we can focus them when necessary.\n    tabIndex: highlighted ? 0 : -1,\n    ...(isCheckbox ? getMenuItemCheckboxProps({ disabled, checked: item.checked }) : getMenuItemProps({ disabled })),\n    ...(isDisabledWithReason ? targetProps : {}),\n  };\n\n  const menuItem = isLinkItem(item) ? (\n    <a\n      {...menuItemProps}\n      href={!disabled ? item.href : undefined}\n      target={getItemTarget(item)}\n      rel={item.external ? 'noopener noreferrer' : undefined}\n    >\n      <MenuItemContent item={item} disabled={disabled} />\n    </a>\n  ) : (\n    <span {...menuItemProps}>\n      <MenuItemContent item={item} disabled={disabled} />\n    </span>\n  );\n\n  const { position } = useDropdownContext();\n  const tooltipPosition = position === 'bottom-left' || position === 'top-left' ? 'left' : 'right';\n  return isDisabledWithReason ? (\n    <Tooltip content={item.disabledReason} position={tooltipPosition} className={styles['item-tooltip-wrapper']}>\n      {menuItem}\n      {descriptionEl}\n    </Tooltip>\n  ) : (\n    menuItem\n  );\n}\n\nconst MenuItemContent = ({ item, disabled }: { item: InternalItem | InternalCheckboxItem; disabled: boolean }) => {\n  const hasIcon = !!(item.iconName || item.iconUrl || item.iconSvg);\n  const hasExternal = isLinkItem(item) && item.external;\n  const isCheckbox = isCheckboxItem(item);\n  return (\n    <>\n      {isCheckbox && <MenuItemCheckmark checked={item.checked} disabled={disabled} />}\n      {hasIcon && (\n        <MenuItemIcon\n          name={item.iconName}\n          url={item.iconUrl}\n          svg={item.iconSvg}\n          alt={item.iconAlt}\n          badge={item.badge}\n        />\n      )}\n      {item.text}\n      {hasExternal && <ExternalIcon disabled={disabled} ariaLabel={item.externalIconAriaLabel} />}\n    </>\n  );\n};\n\nconst MenuItemIcon = (props: InternalIconProps) => (\n  <span className={styles.icon}>\n    <InternalIcon {...props} />\n  </span>\n);\n\n// Toggle has aria-hidden set because it's just used as a graphical element,\n// a11y attributes for the checkmark are communicated through the role and aria-checked state\n// of the menu element item.\nconst MenuItemCheckmark = ({ disabled, checked }: { disabled: boolean; checked: boolean }) => {\n  const checkmark = <InternalIcon variant={disabled ? 'disabled' : 'normal'} name=\"check\" />;\n  return (\n    <span\n      className={clsx(styles.icon, styles.checkmark, { [styles.disabled]: disabled })}\n      aria-hidden=\"true\"\n      style={{ visibility: checked ? 'visible' : 'hidden' }}\n    >\n      {checkmark}\n    </span>\n  );\n};\n\nconst ExternalIcon = ({ disabled, ariaLabel }: { disabled: boolean; ariaLabel?: string }) => {\n  const icon = <InternalIcon variant={disabled ? 'disabled' : 'normal'} name=\"external\" />;\n  return (\n    <span className={styles['external-icon']} role={ariaLabel ? 'img' : undefined} aria-label={ariaLabel}>\n      {icon}\n    </span>\n  );\n};\n\nexport default ItemElement;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}