{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { forwardRef } from 'react';\nimport { useUniqueId } from '@cloudscape-design/component-toolkit/internal';\nimport InternalToggle from '../../toggle/internal';\nimport styles from '../styles.css.js';\nconst componentPrefix = 'content-display-option';\nexport const getClassName = suffix => styles[[componentPrefix, suffix].filter(Boolean).join('-')];\nconst ContentDisplayOption = forwardRef((_ref, ref) => {\n  let {\n    onToggle,\n    option\n  } = _ref;\n  const idPrefix = useUniqueId(componentPrefix);\n  const controlId = `${idPrefix}-control-${option.id}`;\n  return React.createElement(\"div\", {\n    ref: ref,\n    className: getClassName('content')\n  }, React.createElement(\"label\", {\n    className: getClassName('label'),\n    htmlFor: controlId\n  }, option.label), React.createElement(\"div\", {\n    className: getClassName('toggle')\n  }, React.createElement(InternalToggle, {\n    checked: !!option.visible,\n    onChange: () => onToggle && onToggle(option),\n    disabled: option.alwaysVisible === true,\n    controlId: controlId\n  })));\n});\nexport default ContentDisplayOption;","map":{"version":3,"names":["React","forwardRef","useUniqueId","InternalToggle","styles","componentPrefix","getClassName","suffix","filter","Boolean","join","ContentDisplayOption","_ref","ref","onToggle","option","idPrefix","controlId","id","createElement","className","htmlFor","label","checked","visible","onChange","disabled","alwaysVisible"],"sources":["/Users/naman/Desktop/Portfolio/react-portfolio/node_modules/src/collection-preferences/content-display/content-display-option.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { ForwardedRef, forwardRef } from 'react';\n\nimport { useUniqueId } from '@cloudscape-design/component-toolkit/internal';\n\nimport InternalToggle from '../../toggle/internal';\nimport { OptionWithVisibility } from './utils';\n\nimport styles from '../styles.css.js';\n\nconst componentPrefix = 'content-display-option';\nexport const getClassName = (suffix?: string) => styles[[componentPrefix, suffix].filter(Boolean).join('-')];\n\ninterface ContentDisplayOptionProps {\n  onToggle?: (option: OptionWithVisibility) => void;\n  option: OptionWithVisibility;\n}\n\nconst ContentDisplayOption = forwardRef(\n  ({ onToggle, option }: ContentDisplayOptionProps, ref: ForwardedRef<HTMLDivElement>) => {\n    const idPrefix = useUniqueId(componentPrefix);\n    const controlId = `${idPrefix}-control-${option.id}`;\n    return (\n      <div ref={ref} className={getClassName('content')}>\n        <label className={getClassName('label')} htmlFor={controlId}>\n          {option.label}\n        </label>\n        <div className={getClassName('toggle')}>\n          <InternalToggle\n            checked={!!option.visible}\n            onChange={() => onToggle && onToggle(option)}\n            disabled={option.alwaysVisible === true}\n            controlId={controlId}\n          />\n        </div>\n      </div>\n    );\n  }\n);\n\nexport default ContentDisplayOption;\n"],"mappings":"AAAA;AACA;AACA,OAAOA,KAAK,IAAkBC,UAAU,QAAQ,OAAO;AAEvD,SAASC,WAAW,QAAQ,+CAA+C;AAE3E,OAAOC,cAAc,MAAM,uBAAuB;AAGlD,OAAOC,MAAM,MAAM,kBAAkB;AAErC,MAAMC,eAAe,GAAG,wBAAwB;AAChD,OAAO,MAAMC,YAAY,GAAIC,MAAe,IAAKH,MAAM,CAAC,CAACC,eAAe,EAAEE,MAAM,CAAC,CAACC,MAAM,CAACC,OAAO,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC,CAAC;AAO5G,MAAMC,oBAAoB,GAAGV,UAAU,CACrC,CAAAW,IAAA,EAAkDC,GAAiC,KAAI;EAAA,IAAtF;IAAEC,QAAQ;IAAEC;EAAM,CAA6B,GAAAH,IAAA;EAC9C,MAAMI,QAAQ,GAAGd,WAAW,CAACG,eAAe,CAAC;EAC7C,MAAMY,SAAS,GAAG,GAAGD,QAAQ,YAAYD,MAAM,CAACG,EAAE,EAAE;EACpD,OACElB,KAAA,CAAAmB,aAAA;IAAKN,GAAG,EAAEA,GAAG;IAAEO,SAAS,EAAEd,YAAY,CAAC,SAAS;EAAC,GAC/CN,KAAA,CAAAmB,aAAA;IAAOC,SAAS,EAAEd,YAAY,CAAC,OAAO,CAAC;IAAEe,OAAO,EAAEJ;EAAS,GACxDF,MAAM,CAACO,KAAK,CACP,EACRtB,KAAA,CAAAmB,aAAA;IAAKC,SAAS,EAAEd,YAAY,CAAC,QAAQ;EAAC,GACpCN,KAAA,CAAAmB,aAAA,CAAChB,cAAc;IACboB,OAAO,EAAE,CAAC,CAACR,MAAM,CAACS,OAAO;IACzBC,QAAQ,EAAEA,CAAA,KAAMX,QAAQ,IAAIA,QAAQ,CAACC,MAAM,CAAC;IAC5CW,QAAQ,EAAEX,MAAM,CAACY,aAAa,KAAK,IAAI;IACvCV,SAAS,EAAEA;EAAS,EACpB,CACE,CACF;AAEV,CAAC,CACF;AAED,eAAeN,oBAAoB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}