{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { useCallback, useState } from 'react';\nexport class HighlightType {\n  constructor(type) {\n    let moveFocus = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : type === 'keyboard';\n    this.type = type;\n    this.moveFocus = moveFocus;\n  }\n}\nexport function useHighlightedOption(_ref) {\n  let {\n    options,\n    isHighlightable\n  } = _ref;\n  const [highlightedIndex, setHighlightedIndexState] = useState(-1);\n  const [highlightType, setHighlightType] = useState(new HighlightType('keyboard'));\n  const setHighlightedIndex = useCallback((index, newHighlightType) => {\n    setHighlightedIndexState(index);\n    setHighlightType(oldHighlight => oldHighlight.type !== newHighlightType.type ? newHighlightType : oldHighlight);\n  }, []);\n  const highlightedOption = options[highlightedIndex] && isHighlightable(options[highlightedIndex]) ? options[highlightedIndex] : undefined;\n  const moveHighlightFrom = function (direction) {\n    let startIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : highlightedIndex;\n    let highlightType = arguments.length > 2 ? arguments[2] : undefined;\n    const fromBottomEnd = startIndex === -1 && direction === -1;\n    let newIndex = fromBottomEnd ? options.length : startIndex;\n    do {\n      newIndex += direction;\n    } while (options[newIndex] && !isHighlightable(options[newIndex]));\n    if (options[newIndex]) {\n      setHighlightedIndex(newIndex, highlightType);\n    }\n  };\n  const moveHighlight = (direction, highlightType) => moveHighlightFrom(direction, highlightedIndex, highlightType);\n  const highlightOption = useCallback((option, highlightType) => {\n    const index = options.indexOf(option);\n    setHighlightedIndex(index, highlightType);\n  }, [options, setHighlightedIndex]);\n  return [{\n    highlightType,\n    highlightedIndex,\n    highlightedOption\n  }, {\n    setHighlightedIndexWithMouse: function (index) {\n      let moveFocus = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      return setHighlightedIndex(index, new HighlightType('mouse', moveFocus));\n    },\n    highlightFirstOptionWithMouse: () => moveHighlightFrom(1, -1, new HighlightType('mouse', true)),\n    moveHighlightWithKeyboard: direction => moveHighlight(direction, new HighlightType('keyboard')),\n    highlightOptionWithKeyboard: option => highlightOption(option, new HighlightType('keyboard')),\n    resetHighlightWithKeyboard: () => setHighlightedIndex(-1, new HighlightType('keyboard')),\n    goHomeWithKeyboard: () => moveHighlightFrom(1, -1, new HighlightType('keyboard')),\n    goEndWithKeyboard: () => moveHighlightFrom(-1, options.length, new HighlightType('keyboard'))\n  }];\n}","map":{"version":3,"names":["useCallback","useState","HighlightType","constructor","type","moveFocus","arguments","length","undefined","useHighlightedOption","_ref","options","isHighlightable","highlightedIndex","setHighlightedIndexState","highlightType","setHighlightType","setHighlightedIndex","index","newHighlightType","oldHighlight","highlightedOption","moveHighlightFrom","direction","startIndex","fromBottomEnd","newIndex","moveHighlight","highlightOption","option","indexOf","setHighlightedIndexWithMouse","highlightFirstOptionWithMouse","moveHighlightWithKeyboard","highlightOptionWithKeyboard","resetHighlightWithKeyboard","goHomeWithKeyboard","goEndWithKeyboard"],"sources":["/Users/naman/Desktop/Portfolio/react-portfolio/node_modules/src/internal/components/options-list/utils/use-highlight-option.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { useCallback, useState } from 'react';\n\nexport class HighlightType {\n  constructor(\n    public type: 'keyboard' | 'mouse',\n    public moveFocus: boolean = type === 'keyboard'\n  ) {}\n}\n\ninterface HighlightedOptionProps<OptionType> {\n  options: readonly OptionType[];\n  isHighlightable: (option: OptionType) => boolean;\n}\n\nexport interface HighlightedOptionState<OptionType> {\n  highlightType: HighlightType;\n  highlightedIndex: number;\n  highlightedOption?: OptionType;\n}\n\nexport interface HighlightedOptionHandlers<OptionType> {\n  // Mouse handlers\n  setHighlightedIndexWithMouse(index: number, moveFocus?: boolean): void;\n  highlightFirstOptionWithMouse(): void;\n  // Keyboard handlers\n  moveHighlightWithKeyboard(direction: -1 | 1): void;\n  highlightOptionWithKeyboard(option: OptionType): void;\n  resetHighlightWithKeyboard(): void;\n  goHomeWithKeyboard(): void;\n  goEndWithKeyboard(): void;\n}\n\nexport function useHighlightedOption<OptionType>({\n  options,\n  isHighlightable,\n}: HighlightedOptionProps<OptionType>): [HighlightedOptionState<OptionType>, HighlightedOptionHandlers<OptionType>] {\n  const [highlightedIndex, setHighlightedIndexState] = useState(-1);\n  const [highlightType, setHighlightType] = useState<HighlightType>(new HighlightType('keyboard'));\n  const setHighlightedIndex = useCallback((index: number, newHighlightType: HighlightType) => {\n    setHighlightedIndexState(index);\n    setHighlightType(oldHighlight => (oldHighlight.type !== newHighlightType.type ? newHighlightType : oldHighlight));\n  }, []);\n\n  const highlightedOption =\n    options[highlightedIndex] && isHighlightable(options[highlightedIndex]) ? options[highlightedIndex] : undefined;\n\n  const moveHighlightFrom = (direction: -1 | 1, startIndex = highlightedIndex, highlightType: HighlightType) => {\n    const fromBottomEnd = startIndex === -1 && direction === -1;\n    let newIndex = fromBottomEnd ? options.length : startIndex;\n    do {\n      newIndex += direction;\n    } while (options[newIndex] && !isHighlightable(options[newIndex]));\n\n    if (options[newIndex]) {\n      setHighlightedIndex(newIndex, highlightType);\n    }\n  };\n\n  const moveHighlight = (direction: -1 | 1, highlightType: HighlightType) =>\n    moveHighlightFrom(direction, highlightedIndex, highlightType);\n\n  const highlightOption = useCallback(\n    (option: OptionType, highlightType: HighlightType) => {\n      const index = options.indexOf(option);\n      setHighlightedIndex(index, highlightType);\n    },\n    [options, setHighlightedIndex]\n  );\n\n  return [\n    { highlightType, highlightedIndex, highlightedOption },\n    {\n      setHighlightedIndexWithMouse: (index: number, moveFocus = false) =>\n        setHighlightedIndex(index, new HighlightType('mouse', moveFocus)),\n      highlightFirstOptionWithMouse: () => moveHighlightFrom(1, -1, new HighlightType('mouse', true)),\n      moveHighlightWithKeyboard: (direction: -1 | 1) => moveHighlight(direction, new HighlightType('keyboard')),\n      highlightOptionWithKeyboard: (option: OptionType) => highlightOption(option, new HighlightType('keyboard')),\n      resetHighlightWithKeyboard: () => setHighlightedIndex(-1, new HighlightType('keyboard')),\n      goHomeWithKeyboard: () => moveHighlightFrom(1, -1, new HighlightType('keyboard')),\n      goEndWithKeyboard: () => moveHighlightFrom(-1, options.length, new HighlightType('keyboard')),\n    },\n  ];\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}