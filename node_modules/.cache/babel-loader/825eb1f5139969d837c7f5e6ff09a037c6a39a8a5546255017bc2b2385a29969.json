{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/* istanbul ignore file - Tested with integration tests */\nimport { useEffect } from 'react';\nimport { useStableCallback } from '@cloudscape-design/component-toolkit/internal';\nexport default function usePositionObserver(triggerRef, trackKey, callback) {\n  const stableCallback = useStableCallback(callback);\n  useEffect(() => {\n    if (!(triggerRef === null || triggerRef === void 0 ? void 0 : triggerRef.current)) {\n      return;\n    }\n    let lastTrackKey = trackKey;\n    let lastPosition = {\n      x: triggerRef.current.getBoundingClientRect().x,\n      y: triggerRef.current.getBoundingClientRect().y\n    };\n    const observer = new MutationObserver(() => {\n      if (!triggerRef.current) {\n        return;\n      }\n      const {\n        x,\n        y\n      } = triggerRef.current.getBoundingClientRect();\n      // Only trigger the callback when the position changes or the track key changes\n      if (x !== lastPosition.x || y !== lastPosition.y || trackKey !== lastTrackKey) {\n        lastTrackKey = trackKey;\n        lastPosition = {\n          x,\n          y\n        };\n        stableCallback();\n      }\n    });\n    // Observe the entire ownerDocument for DOM changes\n    observer.observe(triggerRef.current.ownerDocument, {\n      attributes: true,\n      subtree: true,\n      childList: true\n    });\n    return () => observer.disconnect();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [triggerRef, stableCallback]); // trackKey excluded to avoid the observer being recreated everytime the value changes, causing rendering issues for Tooltip\n}","map":{"version":3,"names":["useEffect","useStableCallback","usePositionObserver","triggerRef","trackKey","callback","stableCallback","current","lastTrackKey","lastPosition","x","getBoundingClientRect","y","observer","MutationObserver","observe","ownerDocument","attributes","subtree","childList","disconnect"],"sources":["/Users/naman/Desktop/Portfolio/react-portfolio/node_modules/src/popover/use-position-observer.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/* istanbul ignore file - Tested with integration tests */\n\nimport React, { useEffect } from 'react';\n\nimport { useStableCallback } from '@cloudscape-design/component-toolkit/internal';\n\ninterface Coords {\n  x?: number;\n  y?: number;\n}\n\nexport default function usePositionObserver(\n  triggerRef: React.RefObject<Element> | undefined,\n  trackKey: string | number | undefined,\n  callback: () => void\n) {\n  const stableCallback = useStableCallback(callback);\n\n  useEffect(() => {\n    if (!triggerRef?.current) {\n      return;\n    }\n\n    let lastTrackKey = trackKey;\n\n    let lastPosition: Coords = {\n      x: triggerRef.current.getBoundingClientRect().x,\n      y: triggerRef.current.getBoundingClientRect().y,\n    };\n\n    const observer = new MutationObserver(() => {\n      if (!triggerRef.current) {\n        return;\n      }\n\n      const { x, y } = triggerRef.current.getBoundingClientRect();\n\n      // Only trigger the callback when the position changes or the track key changes\n      if (x !== lastPosition.x || y !== lastPosition.y || trackKey !== lastTrackKey) {\n        lastTrackKey = trackKey;\n        lastPosition = { x, y };\n        stableCallback();\n      }\n    });\n\n    // Observe the entire ownerDocument for DOM changes\n    observer.observe(triggerRef.current.ownerDocument, {\n      attributes: true,\n      subtree: true,\n      childList: true,\n    });\n\n    return () => observer.disconnect();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [triggerRef, stableCallback]); // trackKey excluded to avoid the observer being recreated everytime the value changes, causing rendering issues for Tooltip\n}\n"],"mappings":"AAAA;AACA;AACA;AAEA,SAAgBA,SAAS,QAAQ,OAAO;AAExC,SAASC,iBAAiB,QAAQ,+CAA+C;AAOjF,eAAc,SAAUC,mBAAmBA,CACzCC,UAAgD,EAChDC,QAAqC,EACrCC,QAAoB;EAEpB,MAAMC,cAAc,GAAGL,iBAAiB,CAACI,QAAQ,CAAC;EAElDL,SAAS,CAAC,MAAK;IACb,IAAI,EAACG,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAEI,OAAO,GAAE;MACxB;;IAGF,IAAIC,YAAY,GAAGJ,QAAQ;IAE3B,IAAIK,YAAY,GAAW;MACzBC,CAAC,EAAEP,UAAU,CAACI,OAAO,CAACI,qBAAqB,EAAE,CAACD,CAAC;MAC/CE,CAAC,EAAET,UAAU,CAACI,OAAO,CAACI,qBAAqB,EAAE,CAACC;KAC/C;IAED,MAAMC,QAAQ,GAAG,IAAIC,gBAAgB,CAAC,MAAK;MACzC,IAAI,CAACX,UAAU,CAACI,OAAO,EAAE;QACvB;;MAGF,MAAM;QAAEG,CAAC;QAAEE;MAAC,CAAE,GAAGT,UAAU,CAACI,OAAO,CAACI,qBAAqB,EAAE;MAE3D;MACA,IAAID,CAAC,KAAKD,YAAY,CAACC,CAAC,IAAIE,CAAC,KAAKH,YAAY,CAACG,CAAC,IAAIR,QAAQ,KAAKI,YAAY,EAAE;QAC7EA,YAAY,GAAGJ,QAAQ;QACvBK,YAAY,GAAG;UAAEC,CAAC;UAAEE;QAAC,CAAE;QACvBN,cAAc,EAAE;;IAEpB,CAAC,CAAC;IAEF;IACAO,QAAQ,CAACE,OAAO,CAACZ,UAAU,CAACI,OAAO,CAACS,aAAa,EAAE;MACjDC,UAAU,EAAE,IAAI;MAChBC,OAAO,EAAE,IAAI;MACbC,SAAS,EAAE;KACZ,CAAC;IAEF,OAAO,MAAMN,QAAQ,CAACO,UAAU,EAAE;IAClC;EACF,CAAC,EAAE,CAACjB,UAAU,EAAEG,cAAc,CAAC,CAAC,CAAC,CAAC;AACpC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}