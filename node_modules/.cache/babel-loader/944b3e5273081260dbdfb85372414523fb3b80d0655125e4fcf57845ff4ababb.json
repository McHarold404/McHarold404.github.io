{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { useRef } from 'react';\nexport const formatDndStarted = format => (position, total) => format({\n  position,\n  total\n});\nexport const formatDndItemReordered = format => (initialPosition, currentPosition, total) => format({\n  currentPosition,\n  total,\n  isInitialPosition: `${initialPosition === currentPosition}`\n});\nexport const formatDndItemCommitted = format => (initialPosition, finalPosition, total) => format({\n  initialPosition,\n  finalPosition,\n  total,\n  isInitialPosition: `${initialPosition === finalPosition}`\n});\nexport default function useLiveAnnouncements(_ref) {\n  let {\n    items,\n    itemDefinition,\n    isDragging,\n    liveAnnouncementDndStarted,\n    liveAnnouncementDndItemReordered,\n    liveAnnouncementDndItemCommitted,\n    liveAnnouncementDndDiscarded\n  } = _ref;\n  const isFirstAnnouncement = useRef(true);\n  if (!isDragging) {\n    isFirstAnnouncement.current = true;\n  }\n  return {\n    onDragStart(_ref2) {\n      let {\n        active\n      } = _ref2;\n      if (active && liveAnnouncementDndStarted) {\n        const index = items.findIndex(item => itemDefinition.id(item) === active.id);\n        return liveAnnouncementDndStarted(index + 1, items.length);\n      }\n    },\n    onDragOver(_ref3) {\n      let {\n        active,\n        over\n      } = _ref3;\n      if (liveAnnouncementDndItemReordered) {\n        // Don't announce on the first dragOver because it's redundant with onDragStart.\n        if (isFirstAnnouncement.current) {\n          isFirstAnnouncement.current = false;\n          if (!over || over.id === active.id) {\n            return;\n          }\n        }\n        const initialIndex = items.findIndex(item => itemDefinition.id(item) === active.id);\n        const currentIdex = over ? items.findIndex(item => itemDefinition.id(item) === over.id) : initialIndex;\n        return liveAnnouncementDndItemReordered(initialIndex + 1, currentIdex + 1, items.length);\n      }\n    },\n    onDragEnd(_ref4) {\n      let {\n        active,\n        over\n      } = _ref4;\n      if (liveAnnouncementDndItemCommitted) {\n        const initialIndex = items.findIndex(item => itemDefinition.id(item) === active.id);\n        const finalIndex = over ? items.findIndex(item => itemDefinition.id(item) === over.id) : initialIndex;\n        return liveAnnouncementDndItemCommitted(initialIndex + 1, finalIndex + 1, items.length);\n      }\n    },\n    onDragCancel() {\n      return liveAnnouncementDndDiscarded;\n    }\n  };\n}","map":{"version":3,"names":["useRef","formatDndStarted","format","position","total","formatDndItemReordered","initialPosition","currentPosition","isInitialPosition","formatDndItemCommitted","finalPosition","useLiveAnnouncements","_ref","items","itemDefinition","isDragging","liveAnnouncementDndStarted","liveAnnouncementDndItemReordered","liveAnnouncementDndItemCommitted","liveAnnouncementDndDiscarded","isFirstAnnouncement","current","onDragStart","_ref2","active","index","findIndex","item","id","length","onDragOver","_ref3","over","initialIndex","currentIdex","onDragEnd","_ref4","finalIndex","onDragCancel"],"sources":["/Users/naman/Desktop/Portfolio/react-portfolio/node_modules/src/internal/components/sortable-area/use-live-announcements.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { useRef } from 'react';\nimport { DragEndEvent, DragOverEvent, DragStartEvent } from '@dnd-kit/core';\n\nimport { CustomHandler } from '../../../i18n/context';\nimport { I18nFormatArgTypes } from '../../../i18n/messages-types';\nimport { SortableAreaProps } from './interfaces';\n\nexport const formatDndStarted: CustomHandler<\n  SortableAreaProps.DndAreaI18nStrings['liveAnnouncementDndStarted'],\n  I18nFormatArgTypes['list']['liveAnnouncementDndStarted']\n> = format => (position, total) => format({ position, total });\nexport const formatDndItemReordered: CustomHandler<\n  SortableAreaProps.DndAreaI18nStrings['liveAnnouncementDndItemReordered'],\n  I18nFormatArgTypes['list']['liveAnnouncementDndItemReordered']\n> = format => (initialPosition, currentPosition, total) =>\n  format({ currentPosition, total, isInitialPosition: `${initialPosition === currentPosition}` });\nexport const formatDndItemCommitted: CustomHandler<\n  SortableAreaProps.DndAreaI18nStrings['liveAnnouncementDndItemCommitted'],\n  I18nFormatArgTypes['list']['liveAnnouncementDndItemCommitted']\n> = format => (initialPosition, finalPosition, total) =>\n  format({\n    initialPosition,\n    finalPosition,\n    total,\n    isInitialPosition: `${initialPosition === finalPosition}`,\n  });\n\nexport default function useLiveAnnouncements<Item>({\n  items,\n  itemDefinition,\n  isDragging,\n  liveAnnouncementDndStarted,\n  liveAnnouncementDndItemReordered,\n  liveAnnouncementDndItemCommitted,\n  liveAnnouncementDndDiscarded,\n}: {\n  items: readonly Item[];\n  itemDefinition: SortableAreaProps.ItemDefinition<Item>;\n  isDragging: boolean;\n} & SortableAreaProps.DndAreaI18nStrings) {\n  const isFirstAnnouncement = useRef(true);\n  if (!isDragging) {\n    isFirstAnnouncement.current = true;\n  }\n\n  return {\n    onDragStart({ active }: DragStartEvent) {\n      if (active && liveAnnouncementDndStarted) {\n        const index = items.findIndex(item => itemDefinition.id(item) === active.id);\n        return liveAnnouncementDndStarted(index + 1, items.length);\n      }\n    },\n    onDragOver({ active, over }: DragOverEvent) {\n      if (liveAnnouncementDndItemReordered) {\n        // Don't announce on the first dragOver because it's redundant with onDragStart.\n        if (isFirstAnnouncement.current) {\n          isFirstAnnouncement.current = false;\n          if (!over || over.id === active.id) {\n            return;\n          }\n        }\n        const initialIndex = items.findIndex(item => itemDefinition.id(item) === active.id);\n        const currentIdex = over ? items.findIndex(item => itemDefinition.id(item) === over.id) : initialIndex;\n        return liveAnnouncementDndItemReordered(initialIndex + 1, currentIdex + 1, items.length);\n      }\n    },\n    onDragEnd({ active, over }: DragEndEvent) {\n      if (liveAnnouncementDndItemCommitted) {\n        const initialIndex = items.findIndex(item => itemDefinition.id(item) === active.id);\n        const finalIndex = over ? items.findIndex(item => itemDefinition.id(item) === over.id) : initialIndex;\n        return liveAnnouncementDndItemCommitted(initialIndex + 1, finalIndex + 1, items.length);\n      }\n    },\n    onDragCancel() {\n      return liveAnnouncementDndDiscarded;\n    },\n  };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}