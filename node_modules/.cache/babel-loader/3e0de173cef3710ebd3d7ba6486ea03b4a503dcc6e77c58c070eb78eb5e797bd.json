{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { forwardRef } from 'react';\nimport clsx from 'clsx';\nimport { warnOnce } from '@cloudscape-design/component-toolkit/internal';\nimport { InternalButton } from '../button/internal.js';\nimport Tooltip from '../internal/components/tooltip/index.js';\nimport { fireCancelableEvent } from '../internal/events/index.js';\nimport InternalLiveRegion from '../live-region/internal.js';\nimport testUtilStyles from './test-classes/styles.css.js';\nconst IconButtonItem = forwardRef((_ref, ref) => {\n  let {\n    item,\n    showTooltip,\n    showFeedback,\n    onTooltipDismiss,\n    onItemClick\n  } = _ref;\n  const containerRef = React.useRef(null);\n  const hasIcon = item.iconName || item.iconUrl || item.iconSvg;\n  if (!hasIcon) {\n    warnOnce('ButtonGroup', `Missing icon for item with id: ${item.id}`);\n  }\n  const canShowTooltip = Boolean(showTooltip && !item.disabled && !item.loading);\n  const canShowFeedback = Boolean(showTooltip && showFeedback && item.popoverFeedback);\n  return React.createElement(\"div\", {\n    ref: containerRef\n  }, React.createElement(InternalButton, {\n    variant: \"icon\",\n    loading: item.loading,\n    loadingText: item.loadingText,\n    disabled: item.disabled,\n    disabledReason: showFeedback ? undefined : item.disabledReason,\n    __focusable: canShowFeedback,\n    iconName: hasIcon ? item.iconName : 'close',\n    iconUrl: item.iconUrl,\n    iconSvg: item.iconSvg,\n    iconAlt: item.text,\n    ariaLabel: item.text,\n    onClick: event => fireCancelableEvent(onItemClick, {\n      id: item.id\n    }, event),\n    ref: ref,\n    \"data-testid\": item.id,\n    \"data-itemid\": item.id,\n    className: clsx(testUtilStyles.item, testUtilStyles['button-group-item']),\n    __title: \"\"\n  }, item.text), (canShowTooltip || canShowFeedback) && React.createElement(Tooltip, {\n    trackRef: containerRef,\n    trackKey: item.id,\n    value: showFeedback && React.createElement(InternalLiveRegion, {\n      tagName: \"span\"\n    }, item.popoverFeedback) || item.text,\n    className: clsx(testUtilStyles.tooltip, testUtilStyles['button-group-tooltip']),\n    onDismiss: onTooltipDismiss\n  }));\n});\nexport default IconButtonItem;","map":{"version":3,"names":["React","forwardRef","clsx","warnOnce","InternalButton","Tooltip","fireCancelableEvent","InternalLiveRegion","testUtilStyles","IconButtonItem","_ref","ref","item","showTooltip","showFeedback","onTooltipDismiss","onItemClick","containerRef","useRef","hasIcon","iconName","iconUrl","iconSvg","id","canShowTooltip","Boolean","disabled","loading","canShowFeedback","popoverFeedback","createElement","variant","loadingText","disabledReason","undefined","__focusable","iconAlt","text","ariaLabel","onClick","event","className","__title","trackRef","trackKey","value","tagName","tooltip","onDismiss"],"sources":["/Users/naman/Desktop/Portfolio/react-portfolio/node_modules/src/button-group/icon-button-item.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { forwardRef } from 'react';\nimport clsx from 'clsx';\n\nimport { warnOnce } from '@cloudscape-design/component-toolkit/internal';\n\nimport { ButtonProps } from '../button/interfaces.js';\nimport { InternalButton } from '../button/internal.js';\nimport Tooltip from '../internal/components/tooltip/index.js';\nimport { CancelableEventHandler, fireCancelableEvent } from '../internal/events/index.js';\nimport InternalLiveRegion from '../live-region/internal.js';\nimport { ButtonGroupProps } from './interfaces.js';\n\nimport testUtilStyles from './test-classes/styles.css.js';\n\ninterface IconButtonItemProps {\n  item: ButtonGroupProps.IconButton;\n  showTooltip: boolean;\n  showFeedback: boolean;\n  onTooltipDismiss: () => void;\n  onItemClick?: CancelableEventHandler<ButtonGroupProps.ItemClickDetails>;\n}\n\nconst IconButtonItem = forwardRef(\n  (\n    { item, showTooltip, showFeedback, onTooltipDismiss, onItemClick }: IconButtonItemProps,\n    ref: React.Ref<ButtonProps.Ref>\n  ) => {\n    const containerRef = React.useRef<HTMLDivElement>(null);\n    const hasIcon = item.iconName || item.iconUrl || item.iconSvg;\n\n    if (!hasIcon) {\n      warnOnce('ButtonGroup', `Missing icon for item with id: ${item.id}`);\n    }\n\n    const canShowTooltip = Boolean(showTooltip && !item.disabled && !item.loading);\n    const canShowFeedback = Boolean(showTooltip && showFeedback && item.popoverFeedback);\n    return (\n      <div ref={containerRef}>\n        <InternalButton\n          variant=\"icon\"\n          loading={item.loading}\n          loadingText={item.loadingText}\n          disabled={item.disabled}\n          disabledReason={showFeedback ? undefined : item.disabledReason} // don't show disabled reason when popover feedback is shown\n          __focusable={canShowFeedback}\n          iconName={hasIcon ? item.iconName : 'close'}\n          iconUrl={item.iconUrl}\n          iconSvg={item.iconSvg}\n          iconAlt={item.text}\n          ariaLabel={item.text}\n          onClick={event => fireCancelableEvent(onItemClick, { id: item.id }, event)}\n          ref={ref}\n          data-testid={item.id}\n          data-itemid={item.id}\n          className={clsx(testUtilStyles.item, testUtilStyles['button-group-item'])}\n          __title=\"\"\n        >\n          {item.text}\n        </InternalButton>\n        {(canShowTooltip || canShowFeedback) && (\n          <Tooltip\n            trackRef={containerRef}\n            trackKey={item.id}\n            value={\n              (showFeedback && <InternalLiveRegion tagName=\"span\">{item.popoverFeedback}</InternalLiveRegion>) ||\n              item.text\n            }\n            className={clsx(testUtilStyles.tooltip, testUtilStyles['button-group-tooltip'])}\n            onDismiss={onTooltipDismiss}\n          />\n        )}\n      </div>\n    );\n  }\n);\n\nexport default IconButtonItem;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}