{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n'use client';\n\nimport { __rest } from \"tslib\";\nimport React from 'react';\nimport { getBaseProps } from '../internal/base-component';\nimport useBaseComponent from '../internal/hooks/use-base-component';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport { InternalButton } from './internal';\nconst Button = React.forwardRef((_a, ref) => {\n  var {\n      children,\n      iconName,\n      iconAlign = 'left',\n      iconUrl,\n      iconSvg,\n      iconAlt,\n      variant = 'normal',\n      loading = false,\n      loadingText,\n      disabled = false,\n      disabledReason,\n      wrapText = true,\n      href,\n      target,\n      rel,\n      external = false,\n      download,\n      formAction = 'submit',\n      ariaLabel,\n      ariaDescribedby,\n      onClick,\n      onFollow,\n      ariaExpanded,\n      ariaControls,\n      fullWidth,\n      form,\n      i18nStrings,\n      style\n    } = _a,\n    props = __rest(_a, [\"children\", \"iconName\", \"iconAlign\", \"iconUrl\", \"iconSvg\", \"iconAlt\", \"variant\", \"loading\", \"loadingText\", \"disabled\", \"disabledReason\", \"wrapText\", \"href\", \"target\", \"rel\", \"external\", \"download\", \"formAction\", \"ariaLabel\", \"ariaDescribedby\", \"onClick\", \"onFollow\", \"ariaExpanded\", \"ariaControls\", \"fullWidth\", \"form\", \"i18nStrings\", \"style\"]);\n  const baseComponentProps = useBaseComponent('Button', {\n    props: {\n      formAction,\n      fullWidth,\n      iconAlign,\n      iconName,\n      rel,\n      target,\n      external,\n      variant,\n      wrapText\n    },\n    metadata: {\n      hasDisabledReason: Boolean(disabledReason)\n    }\n  });\n  const baseProps = getBaseProps(props);\n  return React.createElement(InternalButton, Object.assign({}, baseProps, baseComponentProps, {\n    ref: ref,\n    iconName: iconName,\n    iconAlign: iconAlign,\n    iconUrl: iconUrl,\n    iconSvg: iconSvg,\n    iconAlt: iconAlt,\n    variant: variant,\n    loading: loading,\n    loadingText: loadingText,\n    disabled: disabled,\n    disabledReason: disabledReason,\n    wrapText: wrapText,\n    href: href,\n    target: target,\n    rel: rel,\n    external: external,\n    download: download,\n    formAction: formAction,\n    ariaLabel: ariaLabel,\n    ariaDescribedby: ariaDescribedby,\n    onClick: onClick,\n    onFollow: onFollow,\n    ariaExpanded: ariaExpanded,\n    ariaControls: ariaControls,\n    fullWidth: fullWidth,\n    form: form,\n    i18nStrings: i18nStrings,\n    style: style,\n    __injectAnalyticsComponentMetadata: true\n  }), children);\n});\napplyDisplayName(Button, 'Button');\nexport default Button;","map":{"version":3,"names":["React","getBaseProps","useBaseComponent","applyDisplayName","InternalButton","Button","forwardRef","_a","ref","children","iconName","iconAlign","iconUrl","iconSvg","iconAlt","variant","loading","loadingText","disabled","disabledReason","wrapText","href","target","rel","external","download","formAction","ariaLabel","ariaDescribedby","onClick","onFollow","ariaExpanded","ariaControls","fullWidth","form","i18nStrings","style","props","__rest","baseComponentProps","metadata","hasDisabledReason","Boolean","baseProps","createElement","Object","assign","__injectAnalyticsComponentMetadata"],"sources":["/Users/naman/Desktop/Portfolio/react-portfolio/node_modules/src/button/index.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n'use client';\nimport React from 'react';\n\nimport { getBaseProps } from '../internal/base-component';\nimport useBaseComponent from '../internal/hooks/use-base-component';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport { ButtonProps } from './interfaces';\nimport { InternalButton } from './internal';\n\nexport { ButtonProps };\n\nconst Button = React.forwardRef(\n  (\n    {\n      children,\n      iconName,\n      iconAlign = 'left',\n      iconUrl,\n      iconSvg,\n      iconAlt,\n      variant = 'normal',\n      loading = false,\n      loadingText,\n      disabled = false,\n      disabledReason,\n      wrapText = true,\n      href,\n      target,\n      rel,\n      external = false,\n      download,\n      formAction = 'submit',\n      ariaLabel,\n      ariaDescribedby,\n      onClick,\n      onFollow,\n      ariaExpanded,\n      ariaControls,\n      fullWidth,\n      form,\n      i18nStrings,\n      style,\n      ...props\n    }: ButtonProps,\n    ref: React.Ref<ButtonProps.Ref>\n  ) => {\n    const baseComponentProps = useBaseComponent('Button', {\n      props: { formAction, fullWidth, iconAlign, iconName, rel, target, external, variant, wrapText },\n      metadata: { hasDisabledReason: Boolean(disabledReason) },\n    });\n    const baseProps = getBaseProps(props);\n    return (\n      <InternalButton\n        {...baseProps}\n        {...baseComponentProps}\n        ref={ref}\n        iconName={iconName}\n        iconAlign={iconAlign}\n        iconUrl={iconUrl}\n        iconSvg={iconSvg}\n        iconAlt={iconAlt}\n        variant={variant}\n        loading={loading}\n        loadingText={loadingText}\n        disabled={disabled}\n        disabledReason={disabledReason}\n        wrapText={wrapText}\n        href={href}\n        target={target}\n        rel={rel}\n        external={external}\n        download={download}\n        formAction={formAction}\n        ariaLabel={ariaLabel}\n        ariaDescribedby={ariaDescribedby}\n        onClick={onClick}\n        onFollow={onFollow}\n        ariaExpanded={ariaExpanded}\n        ariaControls={ariaControls}\n        fullWidth={fullWidth}\n        form={form}\n        i18nStrings={i18nStrings}\n        style={style}\n        __injectAnalyticsComponentMetadata={true}\n      >\n        {children}\n      </InternalButton>\n    );\n  }\n);\n\napplyDisplayName(Button, 'Button');\nexport default Button;\n"],"mappings":"AAAA;AACA;AACA,YAAY;;;AACZ,OAAOA,KAAK,MAAM,OAAO;AAEzB,SAASC,YAAY,QAAQ,4BAA4B;AACzD,OAAOC,gBAAgB,MAAM,sCAAsC;AACnE,SAASC,gBAAgB,QAAQ,sCAAsC;AAEvE,SAASC,cAAc,QAAQ,YAAY;AAI3C,MAAMC,MAAM,GAAGL,KAAK,CAACM,UAAU,CAC7B,CACEC,EA8Bc,EACdC,GAA+B,KAC7B;MAhCF;MACEC,QAAQ;MACRC,QAAQ;MACRC,SAAS,GAAG,MAAM;MAClBC,OAAO;MACPC,OAAO;MACPC,OAAO;MACPC,OAAO,GAAG,QAAQ;MAClBC,OAAO,GAAG,KAAK;MACfC,WAAW;MACXC,QAAQ,GAAG,KAAK;MAChBC,cAAc;MACdC,QAAQ,GAAG,IAAI;MACfC,IAAI;MACJC,MAAM;MACNC,GAAG;MACHC,QAAQ,GAAG,KAAK;MAChBC,QAAQ;MACRC,UAAU,GAAG,QAAQ;MACrBC,SAAS;MACTC,eAAe;MACfC,OAAO;MACPC,QAAQ;MACRC,YAAY;MACZC,YAAY;MACZC,SAAS;MACTC,IAAI;MACJC,WAAW;MACXC;IAAK,IAAA7B,EAEO;IADT8B,KAAK,GAAAC,MAAA,CAAA/B,EAAA,EA7BV,wVA8BC,CADS;EAIV,MAAMgC,kBAAkB,GAAGrC,gBAAgB,CAAC,QAAQ,EAAE;IACpDmC,KAAK,EAAE;MAAEX,UAAU;MAAEO,SAAS;MAAEtB,SAAS;MAAED,QAAQ;MAAEa,GAAG;MAAED,MAAM;MAAEE,QAAQ;MAAET,OAAO;MAAEK;IAAQ,CAAE;IAC/FoB,QAAQ,EAAE;MAAEC,iBAAiB,EAAEC,OAAO,CAACvB,cAAc;IAAC;GACvD,CAAC;EACF,MAAMwB,SAAS,GAAG1C,YAAY,CAACoC,KAAK,CAAC;EACrC,OACErC,KAAA,CAAA4C,aAAA,CAACxC,cAAc,EAAAyC,MAAA,CAAAC,MAAA,KACTH,SAAS,EACTJ,kBAAkB;IACtB/B,GAAG,EAAEA,GAAG;IACRE,QAAQ,EAAEA,QAAQ;IAClBC,SAAS,EAAEA,SAAS;IACpBC,OAAO,EAAEA,OAAO;IAChBC,OAAO,EAAEA,OAAO;IAChBC,OAAO,EAAEA,OAAO;IAChBC,OAAO,EAAEA,OAAO;IAChBC,OAAO,EAAEA,OAAO;IAChBC,WAAW,EAAEA,WAAW;IACxBC,QAAQ,EAAEA,QAAQ;IAClBC,cAAc,EAAEA,cAAc;IAC9BC,QAAQ,EAAEA,QAAQ;IAClBC,IAAI,EAAEA,IAAI;IACVC,MAAM,EAAEA,MAAM;IACdC,GAAG,EAAEA,GAAG;IACRC,QAAQ,EAAEA,QAAQ;IAClBC,QAAQ,EAAEA,QAAQ;IAClBC,UAAU,EAAEA,UAAU;IACtBC,SAAS,EAAEA,SAAS;IACpBC,eAAe,EAAEA,eAAe;IAChCC,OAAO,EAAEA,OAAO;IAChBC,QAAQ,EAAEA,QAAQ;IAClBC,YAAY,EAAEA,YAAY;IAC1BC,YAAY,EAAEA,YAAY;IAC1BC,SAAS,EAAEA,SAAS;IACpBC,IAAI,EAAEA,IAAI;IACVC,WAAW,EAAEA,WAAW;IACxBC,KAAK,EAAEA,KAAK;IACZW,kCAAkC,EAAE;EAAI,IAEvCtC,QAAQ,CACM;AAErB,CAAC,CACF;AAEDN,gBAAgB,CAACE,MAAM,EAAE,QAAQ,CAAC;AAClC,eAAeA,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}