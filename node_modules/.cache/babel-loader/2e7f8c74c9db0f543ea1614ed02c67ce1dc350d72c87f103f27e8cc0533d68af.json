{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { forwardRef } from 'react';\nimport clsx from 'clsx';\nimport { warnOnce } from '@cloudscape-design/component-toolkit/internal';\nimport Tooltip from '../internal/components/tooltip/index.js';\nimport { fireCancelableEvent } from '../internal/events/index.js';\nimport InternalLiveRegion from '../live-region/internal.js';\nimport { InternalToggleButton } from '../toggle-button/internal.js';\nimport testUtilStyles from './test-classes/styles.css.js';\nconst IconToggleButtonItem = forwardRef((_ref, ref) => {\n  let {\n    item,\n    showTooltip,\n    showFeedback,\n    onTooltipDismiss,\n    onItemClick\n  } = _ref;\n  var _a;\n  const containerRef = React.useRef(null);\n  const hasIcon = item.iconName || item.iconUrl || item.iconSvg;\n  const hasPressedIcon = item.pressedIconName || item.pressedIconUrl || item.pressedIconSvg;\n  if (!hasIcon) {\n    warnOnce('ButtonGroup', `Missing icon for item with id: ${item.id}`);\n  }\n  if (!hasPressedIcon) {\n    warnOnce('ButtonGroup', `Missing pressed icon for item with id: ${item.id}`);\n  }\n  const feedbackContent = item.pressed ? (_a = item.pressedPopoverFeedback) !== null && _a !== void 0 ? _a : item.popoverFeedback : item.popoverFeedback;\n  const canShowTooltip = showTooltip && !item.disabled && !item.loading;\n  const canShowFeedback = showTooltip && showFeedback && feedbackContent;\n  return React.createElement(\"div\", {\n    ref: containerRef\n  }, React.createElement(InternalToggleButton, {\n    variant: \"icon\",\n    pressed: item.pressed,\n    loading: item.loading,\n    loadingText: item.loadingText,\n    disabled: item.disabled,\n    disabledReason: showFeedback ? undefined : item.disabledReason,\n    iconName: hasIcon ? item.iconName : 'close',\n    iconUrl: item.iconUrl,\n    iconSvg: item.iconSvg,\n    pressedIconName: hasIcon ? item.pressedIconName : 'close',\n    pressedIconUrl: item.pressedIconUrl,\n    pressedIconSvg: item.pressedIconUrl,\n    ariaLabel: item.text,\n    onChange: event => fireCancelableEvent(onItemClick, {\n      id: item.id,\n      pressed: event.detail.pressed\n    }),\n    ref: ref,\n    \"data-testid\": item.id,\n    \"data-itemid\": item.id,\n    className: clsx(testUtilStyles.item, testUtilStyles['button-group-item']),\n    __title: \"\"\n  }, item.text), (canShowTooltip || canShowFeedback) && React.createElement(Tooltip, {\n    trackRef: containerRef,\n    trackKey: item.id,\n    value: showFeedback && React.createElement(InternalLiveRegion, {\n      tagName: \"span\"\n    }, feedbackContent) || item.text,\n    className: clsx(testUtilStyles.tooltip, testUtilStyles['button-group-tooltip']),\n    onDismiss: onTooltipDismiss\n  }));\n});\nexport default IconToggleButtonItem;","map":{"version":3,"names":["React","forwardRef","clsx","warnOnce","Tooltip","fireCancelableEvent","InternalLiveRegion","InternalToggleButton","testUtilStyles","IconToggleButtonItem","_ref","ref","item","showTooltip","showFeedback","onTooltipDismiss","onItemClick","containerRef","useRef","hasIcon","iconName","iconUrl","iconSvg","hasPressedIcon","pressedIconName","pressedIconUrl","pressedIconSvg","id","feedbackContent","pressed","_a","pressedPopoverFeedback","popoverFeedback","canShowTooltip","disabled","loading","canShowFeedback","createElement","variant","loadingText","disabledReason","undefined","ariaLabel","text","onChange","event","detail","className","__title","trackRef","trackKey","value","tagName","tooltip","onDismiss"],"sources":["/Users/naman/Desktop/Portfolio/react-portfolio/node_modules/src/button-group/icon-toggle-button-item.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { forwardRef } from 'react';\nimport clsx from 'clsx';\n\nimport { warnOnce } from '@cloudscape-design/component-toolkit/internal';\n\nimport { ButtonProps } from '../button/interfaces.js';\nimport Tooltip from '../internal/components/tooltip/index.js';\nimport { CancelableEventHandler, fireCancelableEvent } from '../internal/events/index.js';\nimport InternalLiveRegion from '../live-region/internal.js';\nimport { InternalToggleButton } from '../toggle-button/internal.js';\nimport { ButtonGroupProps } from './interfaces.js';\n\nimport testUtilStyles from './test-classes/styles.css.js';\n\ninterface IconToggleButtonItemProps {\n  item: ButtonGroupProps.IconToggleButton;\n  showTooltip: boolean;\n  showFeedback: boolean;\n  onTooltipDismiss: () => void;\n  onItemClick?: CancelableEventHandler<ButtonGroupProps.ItemClickDetails>;\n}\n\nconst IconToggleButtonItem = forwardRef(\n  (\n    { item, showTooltip, showFeedback, onTooltipDismiss, onItemClick }: IconToggleButtonItemProps,\n    ref: React.Ref<ButtonProps.Ref>\n  ) => {\n    const containerRef = React.useRef<HTMLDivElement>(null);\n    const hasIcon = item.iconName || item.iconUrl || item.iconSvg;\n    const hasPressedIcon = item.pressedIconName || item.pressedIconUrl || item.pressedIconSvg;\n\n    if (!hasIcon) {\n      warnOnce('ButtonGroup', `Missing icon for item with id: ${item.id}`);\n    }\n    if (!hasPressedIcon) {\n      warnOnce('ButtonGroup', `Missing pressed icon for item with id: ${item.id}`);\n    }\n\n    const feedbackContent = item.pressed ? (item.pressedPopoverFeedback ?? item.popoverFeedback) : item.popoverFeedback;\n    const canShowTooltip = showTooltip && !item.disabled && !item.loading;\n    const canShowFeedback = showTooltip && showFeedback && feedbackContent;\n    return (\n      <div ref={containerRef}>\n        <InternalToggleButton\n          variant=\"icon\"\n          pressed={item.pressed}\n          loading={item.loading}\n          loadingText={item.loadingText}\n          disabled={item.disabled}\n          disabledReason={showFeedback ? undefined : item.disabledReason} // don't show disabled reason when popover feedback is shown\n          iconName={hasIcon ? item.iconName : 'close'}\n          iconUrl={item.iconUrl}\n          iconSvg={item.iconSvg}\n          pressedIconName={hasIcon ? item.pressedIconName : 'close'}\n          pressedIconUrl={item.pressedIconUrl}\n          pressedIconSvg={item.pressedIconUrl}\n          ariaLabel={item.text}\n          onChange={event => fireCancelableEvent(onItemClick, { id: item.id, pressed: event.detail.pressed })}\n          ref={ref}\n          data-testid={item.id}\n          data-itemid={item.id}\n          className={clsx(testUtilStyles.item, testUtilStyles['button-group-item'])}\n          __title=\"\"\n        >\n          {item.text}\n        </InternalToggleButton>\n        {(canShowTooltip || canShowFeedback) && (\n          <Tooltip\n            trackRef={containerRef}\n            trackKey={item.id}\n            value={\n              (showFeedback && <InternalLiveRegion tagName=\"span\">{feedbackContent}</InternalLiveRegion>) || item.text\n            }\n            className={clsx(testUtilStyles.tooltip, testUtilStyles['button-group-tooltip'])}\n            onDismiss={onTooltipDismiss}\n          />\n        )}\n      </div>\n    );\n  }\n);\n\nexport default IconToggleButtonItem;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}