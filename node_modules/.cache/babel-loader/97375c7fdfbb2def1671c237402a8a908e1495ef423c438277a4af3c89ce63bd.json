{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n'use client';\n\nimport { __rest } from \"tslib\";\nimport React, { useCallback, useImperativeHandle, useRef } from 'react';\nimport clsx from 'clsx';\nimport { useContainerQuery } from '@cloudscape-design/component-toolkit';\nimport { useMergeRefs } from '@cloudscape-design/component-toolkit/internal';\nimport { InternalContainerAsSubstep } from '../container/internal';\nimport { useInternalI18n } from '../i18n/context';\nimport { AnalyticsFunnelSubStep } from '../internal/analytics/components/analytics-funnel';\nimport { getBaseProps } from '../internal/base-component';\nimport { CollectionLabelContext } from '../internal/context/collection-label-context';\nimport { LinkDefaultVariantContext } from '../internal/context/link-default-variant-context';\nimport useBaseComponent from '../internal/hooks/use-base-component';\nimport { useMobile } from '../internal/hooks/use-mobile';\nimport useMouseDownTarget from '../internal/hooks/use-mouse-down-target';\nimport { useVisualRefresh } from '../internal/hooks/use-visual-mode';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport InternalLiveRegion from '../live-region/internal';\nimport InternalStatusIndicator from '../status-indicator/internal';\nimport { focusMarkers, SelectionControl, useSelection, useSelectionFocusMove } from '../table/selection';\nimport stickyScrolling from '../table/sticky-scrolling';\nimport ToolsHeader from '../table/tools-header';\nimport { getItemKey } from '../table/utils';\nimport { getCardsPerRow } from './cards-layout-helper';\nimport styles from './styles.css.js';\nconst Cards = React.forwardRef(function (_a, ref) {\n  var {\n      items = [],\n      cardDefinition,\n      cardsPerRow = [],\n      header,\n      filter,\n      pagination,\n      preferences,\n      empty,\n      loading,\n      loadingText,\n      trackBy,\n      selectedItems,\n      selectionType,\n      isItemDisabled,\n      onSelectionChange,\n      ariaLabels,\n      visibleSections,\n      stickyHeader,\n      stickyHeaderVerticalOffset,\n      variant = 'container',\n      renderAriaLive,\n      firstIndex = 1,\n      totalItemsCount,\n      entireCardClickable\n    } = _a,\n    rest = __rest(_a, [\"items\", \"cardDefinition\", \"cardsPerRow\", \"header\", \"filter\", \"pagination\", \"preferences\", \"empty\", \"loading\", \"loadingText\", \"trackBy\", \"selectedItems\", \"selectionType\", \"isItemDisabled\", \"onSelectionChange\", \"ariaLabels\", \"visibleSections\", \"stickyHeader\", \"stickyHeaderVerticalOffset\", \"variant\", \"renderAriaLive\", \"firstIndex\", \"totalItemsCount\", \"entireCardClickable\"]);\n  const {\n    __internalRootRef\n  } = useBaseComponent('Cards', {\n    props: {\n      entireCardClickable,\n      selectionType,\n      stickyHeader,\n      variant\n    },\n    metadata: {\n      usesVisibleSections: !!visibleSections\n    }\n  });\n  const baseProps = getBaseProps(rest);\n  const isRefresh = useVisualRefresh();\n  const isMobile = useMobile();\n  const computedVariant = isRefresh ? variant : 'container';\n  const headerIdRef = useRef(undefined);\n  const setHeaderRef = useCallback(id => {\n    headerIdRef.current = id;\n  }, []);\n  const isLabelledByHeader = !(ariaLabels === null || ariaLabels === void 0 ? void 0 : ariaLabels.cardsLabel) && !!header;\n  const [columns, measureRef] = useContainerQuery(_ref => {\n    let {\n      contentBoxWidth\n    } = _ref;\n    return getCardsPerRow(contentBoxWidth, cardsPerRow);\n  }, [cardsPerRow]);\n  const refObject = useRef(null);\n  const mergedRef = useMergeRefs(measureRef, refObject, __internalRootRef);\n  const getMouseDownTarget = useMouseDownTarget();\n  const i18n = useInternalI18n('cards');\n  const {\n    isItemSelected,\n    getItemSelectionProps\n  } = useSelection({\n    items,\n    trackBy,\n    selectedItems,\n    selectionType,\n    isItemDisabled,\n    onSelectionChange,\n    ariaLabels: {\n      itemSelectionLabel: ariaLabels === null || ariaLabels === void 0 ? void 0 : ariaLabels.itemSelectionLabel,\n      selectionGroupLabel: i18n('ariaLabels.selectionGroupLabel', ariaLabels === null || ariaLabels === void 0 ? void 0 : ariaLabels.selectionGroupLabel)\n    }\n  });\n  const hasToolsHeader = header || filter || pagination || preferences;\n  const hasFooterPagination = isMobile && variant === 'full-page' && !!pagination;\n  const headerRef = useRef(null);\n  const {\n    scrollToTop,\n    scrollToItem\n  } = stickyScrolling(refObject, headerRef);\n  stickyHeader = !isMobile && stickyHeader;\n  const onCardFocus = event => {\n    // When an element inside card receives focus we want to adjust the scroll.\n    // However, that behavior is unwanted when the focus is received as result of a click\n    // as it causes the click to never reach the target element.\n    if (stickyHeader && !event.currentTarget.contains(getMouseDownTarget())) {\n      scrollToItem(event.currentTarget);\n    }\n  };\n  useImperativeHandle(ref, () => ({\n    scrollToTop: () => {\n      if (stickyHeader) {\n        scrollToTop();\n      }\n    }\n  }), [stickyHeader, scrollToTop]);\n  let status;\n  if (loading) {\n    status = React.createElement(\"div\", {\n      className: styles.loading\n    }, React.createElement(InternalStatusIndicator, {\n      type: \"loading\"\n    }, React.createElement(InternalLiveRegion, {\n      tagName: \"span\"\n    }, loadingText)));\n  } else if (empty && !items.length) {\n    status = React.createElement(\"div\", {\n      className: styles.empty\n    }, empty);\n  }\n  return React.createElement(LinkDefaultVariantContext.Provider, {\n    value: {\n      defaultVariant: 'primary'\n    }\n  }, React.createElement(AnalyticsFunnelSubStep, null, React.createElement(\"div\", Object.assign({}, baseProps, {\n    className: clsx(baseProps.className, styles.root),\n    ref: mergedRef\n  }), React.createElement(InternalContainerAsSubstep, {\n    header: hasToolsHeader && React.createElement(\"div\", {\n      className: clsx(styles.header, isRefresh && styles['header-refresh'], styles[`header-variant-${computedVariant}`])\n    }, React.createElement(CollectionLabelContext.Provider, {\n      value: {\n        assignId: setHeaderRef\n      }\n    }, React.createElement(ToolsHeader, {\n      header: header,\n      filter: filter,\n      pagination: pagination,\n      preferences: preferences\n    }))),\n    footer: hasFooterPagination && React.createElement(\"div\", {\n      className: styles['footer-pagination']\n    }, pagination),\n    disableContentPaddings: true,\n    disableHeaderPaddings: computedVariant === 'full-page',\n    variant: computedVariant === 'container' ? 'cards' : computedVariant,\n    __stickyHeader: stickyHeader,\n    __stickyOffset: stickyHeaderVerticalOffset,\n    __headerRef: headerRef,\n    __fullPage: computedVariant === 'full-page',\n    __disableFooterDivider: true\n  }, React.createElement(\"div\", {\n    className: clsx(hasToolsHeader && styles['has-header'], isRefresh && styles.refresh, styles[`header-variant-${computedVariant}`])\n  }, !!renderAriaLive && !!firstIndex && React.createElement(InternalLiveRegion, {\n    hidden: true,\n    tagName: \"span\"\n  }, React.createElement(\"span\", null, renderAriaLive({\n    totalItemsCount,\n    firstIndex,\n    lastIndex: firstIndex + items.length - 1\n  }))), status !== null && status !== void 0 ? status : React.createElement(CardsList, {\n    items: items,\n    cardDefinition: cardDefinition,\n    trackBy: trackBy,\n    selectionType: selectionType,\n    columns: columns,\n    isItemSelected: isItemSelected,\n    getItemSelectionProps: getItemSelectionProps,\n    visibleSections: visibleSections,\n    onFocus: onCardFocus,\n    ariaLabel: ariaLabels === null || ariaLabels === void 0 ? void 0 : ariaLabels.cardsLabel,\n    ariaLabelledby: isLabelledByHeader && headerIdRef.current ? headerIdRef.current : undefined,\n    entireCardClickable: entireCardClickable\n  }))))));\n});\nexport default Cards;\nconst CardsList = _ref2 => {\n  let {\n    items,\n    cardDefinition,\n    trackBy,\n    selectionType,\n    columns,\n    isItemSelected,\n    getItemSelectionProps,\n    visibleSections,\n    onFocus,\n    ariaLabelledby,\n    ariaLabel,\n    entireCardClickable\n  } = _ref2;\n  const selectable = !!selectionType;\n  const canClickEntireCard = selectable && entireCardClickable;\n  const isRefresh = useVisualRefresh();\n  const {\n    moveFocusDown,\n    moveFocusUp\n  } = useSelectionFocusMove(selectionType, items.length);\n  let visibleSectionsDefinition = cardDefinition.sections || [];\n  visibleSectionsDefinition = visibleSections ? visibleSectionsDefinition.filter(section => section.id && visibleSections.indexOf(section.id) !== -1) : visibleSectionsDefinition;\n  let listRole = undefined;\n  let listItemRole = undefined;\n  if (selectable) {\n    listRole = 'group';\n    listItemRole = 'presentation';\n  }\n  return React.createElement(\"ol\", Object.assign({\n    className: clsx(styles.list, styles[`list-grid-${columns || 1}`]),\n    role: listRole,\n    \"aria-labelledby\": ariaLabelledby,\n    \"aria-label\": ariaLabel\n  }, focusMarkers && focusMarkers.root), items.map((item, index) => React.createElement(\"li\", Object.assign({\n    className: clsx(styles.card, {\n      [styles['card-selectable']]: selectable,\n      [styles['card-selected']]: selectable && isItemSelected(item)\n    }),\n    key: getItemKey(trackBy, item, index),\n    onFocus: onFocus\n  }, focusMarkers && focusMarkers.item, {\n    role: listItemRole\n  }), React.createElement(\"div\", {\n    className: clsx(styles['card-inner'], isRefresh && styles.refresh),\n    onClick: canClickEntireCard ? event => {\n      var _a;\n      getItemSelectionProps === null || getItemSelectionProps === void 0 ? void 0 : getItemSelectionProps(item).onChange();\n      // Manually move focus to the native input (checkbox or radio button)\n      (_a = event.currentTarget.querySelector('input')) === null || _a === void 0 ? void 0 : _a.focus();\n    } : undefined\n  }, React.createElement(\"div\", {\n    className: styles['card-header']\n  }, React.createElement(\"div\", {\n    className: styles['card-header-inner']\n  }, cardDefinition.header ? cardDefinition.header(item) : ''), getItemSelectionProps && React.createElement(\"div\", {\n    className: styles['selection-control']\n  }, React.createElement(SelectionControl, Object.assign({\n    onFocusDown: moveFocusDown,\n    onFocusUp: moveFocusUp\n  }, getItemSelectionProps(item))))), visibleSectionsDefinition.map((_ref3, index) => {\n    let {\n      width = 100,\n      header,\n      content,\n      id\n    } = _ref3;\n    return React.createElement(\"div\", {\n      key: id || index,\n      className: styles.section,\n      style: {\n        width: `${width}%`\n      }\n    }, header ? React.createElement(\"div\", {\n      className: styles['section-header']\n    }, header) : '', content ? React.createElement(\"div\", {\n      className: styles['section-content']\n    }, content(item)) : '');\n  })))));\n};\napplyDisplayName(Cards, 'Cards');","map":{"version":3,"names":["React","useCallback","useImperativeHandle","useRef","clsx","useContainerQuery","useMergeRefs","InternalContainerAsSubstep","useInternalI18n","AnalyticsFunnelSubStep","getBaseProps","CollectionLabelContext","LinkDefaultVariantContext","useBaseComponent","useMobile","useMouseDownTarget","useVisualRefresh","applyDisplayName","InternalLiveRegion","InternalStatusIndicator","focusMarkers","SelectionControl","useSelection","useSelectionFocusMove","stickyScrolling","ToolsHeader","getItemKey","getCardsPerRow","styles","Cards","forwardRef","_a","ref","items","cardDefinition","cardsPerRow","header","filter","pagination","preferences","empty","loading","loadingText","trackBy","selectedItems","selectionType","isItemDisabled","onSelectionChange","ariaLabels","visibleSections","stickyHeader","stickyHeaderVerticalOffset","variant","renderAriaLive","firstIndex","totalItemsCount","entireCardClickable","rest","__rest","__internalRootRef","props","metadata","usesVisibleSections","baseProps","isRefresh","isMobile","computedVariant","headerIdRef","undefined","setHeaderRef","id","current","isLabelledByHeader","cardsLabel","columns","measureRef","_ref","contentBoxWidth","refObject","mergedRef","getMouseDownTarget","i18n","isItemSelected","getItemSelectionProps","itemSelectionLabel","selectionGroupLabel","hasToolsHeader","hasFooterPagination","headerRef","scrollToTop","scrollToItem","onCardFocus","event","currentTarget","contains","status","createElement","className","type","tagName","length","Provider","value","defaultVariant","Object","assign","root","assignId","footer","disableContentPaddings","disableHeaderPaddings","__stickyHeader","__stickyOffset","__headerRef","__fullPage","__disableFooterDivider","refresh","hidden","lastIndex","CardsList","onFocus","ariaLabel","ariaLabelledby","_ref2","selectable","canClickEntireCard","moveFocusDown","moveFocusUp","visibleSectionsDefinition","sections","section","indexOf","listRole","listItemRole","list","role","map","item","index","card","key","onClick","onChange","querySelector","focus","onFocusDown","onFocusUp","_ref3","width","content","style"],"sources":["/Users/naman/Desktop/Portfolio/react-portfolio/node_modules/src/cards/index.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n'use client';\nimport React, { FocusEventHandler, useCallback, useImperativeHandle, useRef } from 'react';\nimport clsx from 'clsx';\n\nimport { useContainerQuery } from '@cloudscape-design/component-toolkit';\nimport { useMergeRefs } from '@cloudscape-design/component-toolkit/internal';\n\nimport { InternalContainerAsSubstep } from '../container/internal';\nimport { useInternalI18n } from '../i18n/context';\nimport { AnalyticsFunnelSubStep } from '../internal/analytics/components/analytics-funnel';\nimport { getBaseProps } from '../internal/base-component';\nimport { CollectionLabelContext } from '../internal/context/collection-label-context';\nimport { LinkDefaultVariantContext } from '../internal/context/link-default-variant-context';\nimport useBaseComponent from '../internal/hooks/use-base-component';\nimport { useMobile } from '../internal/hooks/use-mobile';\nimport useMouseDownTarget from '../internal/hooks/use-mouse-down-target';\nimport { useVisualRefresh } from '../internal/hooks/use-visual-mode';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport InternalLiveRegion from '../live-region/internal';\nimport InternalStatusIndicator from '../status-indicator/internal';\nimport {\n  focusMarkers,\n  SelectionControl,\n  SelectionControlProps,\n  useSelection,\n  useSelectionFocusMove,\n} from '../table/selection';\nimport stickyScrolling from '../table/sticky-scrolling';\nimport ToolsHeader from '../table/tools-header';\nimport { getItemKey } from '../table/utils';\nimport { getCardsPerRow } from './cards-layout-helper';\nimport { CardsForwardRefType, CardsProps } from './interfaces';\n\nimport styles from './styles.css.js';\n\nexport { CardsProps };\n\nconst Cards = React.forwardRef(function <T = any>(\n  {\n    items = [],\n    cardDefinition,\n    cardsPerRow = [],\n    header,\n    filter,\n    pagination,\n    preferences,\n    empty,\n    loading,\n    loadingText,\n    trackBy,\n    selectedItems,\n    selectionType,\n    isItemDisabled,\n    onSelectionChange,\n    ariaLabels,\n    visibleSections,\n    stickyHeader,\n    stickyHeaderVerticalOffset,\n    variant = 'container',\n    renderAriaLive,\n    firstIndex = 1,\n    totalItemsCount,\n    entireCardClickable,\n    ...rest\n  }: CardsProps<T>,\n  ref: React.Ref<CardsProps.Ref>\n) {\n  const { __internalRootRef } = useBaseComponent('Cards', {\n    props: { entireCardClickable, selectionType, stickyHeader, variant },\n    metadata: { usesVisibleSections: !!visibleSections },\n  });\n  const baseProps = getBaseProps(rest);\n  const isRefresh = useVisualRefresh();\n  const isMobile = useMobile();\n\n  const computedVariant = isRefresh ? variant : 'container';\n\n  const headerIdRef = useRef<string | undefined>(undefined);\n  const setHeaderRef = useCallback((id: string) => {\n    headerIdRef.current = id;\n  }, []);\n  const isLabelledByHeader = !ariaLabels?.cardsLabel && !!header;\n\n  const [columns, measureRef] = useContainerQuery<number>(\n    ({ contentBoxWidth }) => getCardsPerRow(contentBoxWidth, cardsPerRow),\n    [cardsPerRow]\n  );\n  const refObject = useRef(null);\n  const mergedRef = useMergeRefs(measureRef, refObject, __internalRootRef);\n  const getMouseDownTarget = useMouseDownTarget();\n\n  const i18n = useInternalI18n('cards');\n  const { isItemSelected, getItemSelectionProps } = useSelection({\n    items,\n    trackBy,\n    selectedItems,\n    selectionType,\n    isItemDisabled,\n    onSelectionChange,\n    ariaLabels: {\n      itemSelectionLabel: ariaLabels?.itemSelectionLabel,\n      selectionGroupLabel: i18n('ariaLabels.selectionGroupLabel', ariaLabels?.selectionGroupLabel),\n    },\n  });\n  const hasToolsHeader = header || filter || pagination || preferences;\n  const hasFooterPagination = isMobile && variant === 'full-page' && !!pagination;\n  const headerRef = useRef<HTMLDivElement>(null);\n\n  const { scrollToTop, scrollToItem } = stickyScrolling(refObject, headerRef);\n  stickyHeader = !isMobile && stickyHeader;\n  const onCardFocus: FocusEventHandler<HTMLElement> = event => {\n    // When an element inside card receives focus we want to adjust the scroll.\n    // However, that behavior is unwanted when the focus is received as result of a click\n    // as it causes the click to never reach the target element.\n    if (stickyHeader && !event.currentTarget.contains(getMouseDownTarget())) {\n      scrollToItem(event.currentTarget);\n    }\n  };\n  useImperativeHandle(\n    ref,\n    () => ({\n      scrollToTop: () => {\n        if (stickyHeader) {\n          scrollToTop();\n        }\n      },\n    }),\n    [stickyHeader, scrollToTop]\n  );\n  let status;\n  if (loading) {\n    status = (\n      <div className={styles.loading}>\n        <InternalStatusIndicator type=\"loading\">\n          <InternalLiveRegion tagName=\"span\">{loadingText}</InternalLiveRegion>\n        </InternalStatusIndicator>\n      </div>\n    );\n  } else if (empty && !items.length) {\n    status = <div className={styles.empty}>{empty}</div>;\n  }\n\n  return (\n    <LinkDefaultVariantContext.Provider value={{ defaultVariant: 'primary' }}>\n      <AnalyticsFunnelSubStep>\n        <div {...baseProps} className={clsx(baseProps.className, styles.root)} ref={mergedRef}>\n          <InternalContainerAsSubstep\n            header={\n              hasToolsHeader && (\n                <div\n                  className={clsx(\n                    styles.header,\n                    isRefresh && styles['header-refresh'],\n                    styles[`header-variant-${computedVariant}`]\n                  )}\n                >\n                  <CollectionLabelContext.Provider value={{ assignId: setHeaderRef }}>\n                    <ToolsHeader header={header} filter={filter} pagination={pagination} preferences={preferences} />\n                  </CollectionLabelContext.Provider>\n                </div>\n              )\n            }\n            footer={hasFooterPagination && <div className={styles['footer-pagination']}>{pagination}</div>}\n            disableContentPaddings={true}\n            disableHeaderPaddings={computedVariant === 'full-page'}\n            variant={computedVariant === 'container' ? 'cards' : computedVariant}\n            __stickyHeader={stickyHeader}\n            __stickyOffset={stickyHeaderVerticalOffset}\n            __headerRef={headerRef}\n            __fullPage={computedVariant === 'full-page'}\n            __disableFooterDivider={true}\n          >\n            <div\n              className={clsx(\n                hasToolsHeader && styles['has-header'],\n                isRefresh && styles.refresh,\n                styles[`header-variant-${computedVariant}`]\n              )}\n            >\n              {!!renderAriaLive && !!firstIndex && (\n                <InternalLiveRegion hidden={true} tagName=\"span\">\n                  <span>\n                    {renderAriaLive({ totalItemsCount, firstIndex, lastIndex: firstIndex + items.length - 1 })}\n                  </span>\n                </InternalLiveRegion>\n              )}\n              {status ?? (\n                <CardsList\n                  items={items}\n                  cardDefinition={cardDefinition}\n                  trackBy={trackBy}\n                  selectionType={selectionType}\n                  columns={columns}\n                  isItemSelected={isItemSelected}\n                  getItemSelectionProps={getItemSelectionProps}\n                  visibleSections={visibleSections}\n                  onFocus={onCardFocus}\n                  ariaLabel={ariaLabels?.cardsLabel}\n                  ariaLabelledby={isLabelledByHeader && headerIdRef.current ? headerIdRef.current : undefined}\n                  entireCardClickable={entireCardClickable}\n                />\n              )}\n            </div>\n          </InternalContainerAsSubstep>\n        </div>\n      </AnalyticsFunnelSubStep>\n    </LinkDefaultVariantContext.Provider>\n  );\n}) as CardsForwardRefType;\n\nexport default Cards;\n\nconst CardsList = <T,>({\n  items,\n  cardDefinition,\n  trackBy,\n  selectionType,\n  columns,\n  isItemSelected,\n  getItemSelectionProps,\n  visibleSections,\n  onFocus,\n  ariaLabelledby,\n  ariaLabel,\n  entireCardClickable,\n}: Pick<\n  CardsProps<T>,\n  'items' | 'cardDefinition' | 'trackBy' | 'selectionType' | 'visibleSections' | 'entireCardClickable'\n> & {\n  columns: number | null;\n  isItemSelected: (item: T) => boolean;\n  getItemSelectionProps?: (item: T) => SelectionControlProps;\n  onFocus: FocusEventHandler<HTMLElement>;\n  ariaLabel?: string;\n  ariaLabelledby?: string;\n  ariaDescribedby?: string;\n}) => {\n  const selectable = !!selectionType;\n  const canClickEntireCard = selectable && entireCardClickable;\n  const isRefresh = useVisualRefresh();\n\n  const { moveFocusDown, moveFocusUp } = useSelectionFocusMove(selectionType, items.length);\n\n  let visibleSectionsDefinition = cardDefinition.sections || [];\n  visibleSectionsDefinition = visibleSections\n    ? visibleSectionsDefinition.filter(\n        (section: CardsProps.SectionDefinition<T>) => section.id && visibleSections.indexOf(section.id) !== -1\n      )\n    : visibleSectionsDefinition;\n\n  let listRole: 'group' | undefined = undefined;\n  let listItemRole: 'presentation' | undefined = undefined;\n\n  if (selectable) {\n    listRole = 'group';\n    listItemRole = 'presentation';\n  }\n\n  return (\n    <ol\n      className={clsx(styles.list, styles[`list-grid-${columns || 1}`])}\n      role={listRole}\n      aria-labelledby={ariaLabelledby}\n      aria-label={ariaLabel}\n      {...(focusMarkers && focusMarkers.root)}\n    >\n      {items.map((item, index) => (\n        <li\n          className={clsx(styles.card, {\n            [styles['card-selectable']]: selectable,\n            [styles['card-selected']]: selectable && isItemSelected(item),\n          })}\n          key={getItemKey(trackBy, item, index)}\n          onFocus={onFocus}\n          {...(focusMarkers && focusMarkers.item)}\n          role={listItemRole}\n        >\n          <div\n            className={clsx(styles['card-inner'], isRefresh && styles.refresh)}\n            onClick={\n              canClickEntireCard\n                ? event => {\n                    getItemSelectionProps?.(item).onChange();\n                    // Manually move focus to the native input (checkbox or radio button)\n                    event.currentTarget.querySelector('input')?.focus();\n                  }\n                : undefined\n            }\n          >\n            <div className={styles['card-header']}>\n              <div className={styles['card-header-inner']}>\n                {cardDefinition.header ? cardDefinition.header(item) : ''}\n              </div>\n              {getItemSelectionProps && (\n                <div className={styles['selection-control']}>\n                  <SelectionControl\n                    onFocusDown={moveFocusDown}\n                    onFocusUp={moveFocusUp}\n                    {...getItemSelectionProps(item)}\n                  />\n                </div>\n              )}\n            </div>\n            {visibleSectionsDefinition.map(({ width = 100, header, content, id }, index) => (\n              <div key={id || index} className={styles.section} style={{ width: `${width}%` }}>\n                {header ? <div className={styles['section-header']}>{header}</div> : ''}\n                {content ? <div className={styles['section-content']}>{content(item)}</div> : ''}\n              </div>\n            ))}\n          </div>\n        </li>\n      ))}\n    </ol>\n  );\n};\n\napplyDisplayName(Cards, 'Cards');\n"],"mappings":"AAAA;AACA;AACA,YAAY;;;AACZ,OAAOA,KAAK,IAAuBC,WAAW,EAAEC,mBAAmB,EAAEC,MAAM,QAAQ,OAAO;AAC1F,OAAOC,IAAI,MAAM,MAAM;AAEvB,SAASC,iBAAiB,QAAQ,sCAAsC;AACxE,SAASC,YAAY,QAAQ,+CAA+C;AAE5E,SAASC,0BAA0B,QAAQ,uBAAuB;AAClE,SAASC,eAAe,QAAQ,iBAAiB;AACjD,SAASC,sBAAsB,QAAQ,mDAAmD;AAC1F,SAASC,YAAY,QAAQ,4BAA4B;AACzD,SAASC,sBAAsB,QAAQ,8CAA8C;AACrF,SAASC,yBAAyB,QAAQ,kDAAkD;AAC5F,OAAOC,gBAAgB,MAAM,sCAAsC;AACnE,SAASC,SAAS,QAAQ,8BAA8B;AACxD,OAAOC,kBAAkB,MAAM,yCAAyC;AACxE,SAASC,gBAAgB,QAAQ,mCAAmC;AACpE,SAASC,gBAAgB,QAAQ,sCAAsC;AACvE,OAAOC,kBAAkB,MAAM,yBAAyB;AACxD,OAAOC,uBAAuB,MAAM,8BAA8B;AAClE,SACEC,YAAY,EACZC,gBAAgB,EAEhBC,YAAY,EACZC,qBAAqB,QAChB,oBAAoB;AAC3B,OAAOC,eAAe,MAAM,2BAA2B;AACvD,OAAOC,WAAW,MAAM,uBAAuB;AAC/C,SAASC,UAAU,QAAQ,gBAAgB;AAC3C,SAASC,cAAc,QAAQ,uBAAuB;AAGtD,OAAOC,MAAM,MAAM,iBAAiB;AAIpC,MAAMC,KAAK,GAAG7B,KAAK,CAAC8B,UAAU,CAAC,UAC7BC,EA0BgB,EAChBC,GAA8B;MA3B9B;MACEC,KAAK,GAAG,EAAE;MACVC,cAAc;MACdC,WAAW,GAAG,EAAE;MAChBC,MAAM;MACNC,MAAM;MACNC,UAAU;MACVC,WAAW;MACXC,KAAK;MACLC,OAAO;MACPC,WAAW;MACXC,OAAO;MACPC,aAAa;MACbC,aAAa;MACbC,cAAc;MACdC,iBAAiB;MACjBC,UAAU;MACVC,eAAe;MACfC,YAAY;MACZC,0BAA0B;MAC1BC,OAAO,GAAG,WAAW;MACrBC,cAAc;MACdC,UAAU,GAAG,CAAC;MACdC,eAAe;MACfC;IAAmB,IAAAzB,EAEL;IADX0B,IAAI,GAAAC,MAAA,CAAA3B,EAAA,EAzBT,sXA0BC,CADQ;EAIT,MAAM;IAAE4B;EAAiB,CAAE,GAAG9C,gBAAgB,CAAC,OAAO,EAAE;IACtD+C,KAAK,EAAE;MAAEJ,mBAAmB;MAAEX,aAAa;MAAEK,YAAY;MAAEE;IAAO,CAAE;IACpES,QAAQ,EAAE;MAAEC,mBAAmB,EAAE,CAAC,CAACb;IAAe;GACnD,CAAC;EACF,MAAMc,SAAS,GAAGrD,YAAY,CAAC+C,IAAI,CAAC;EACpC,MAAMO,SAAS,GAAGhD,gBAAgB,EAAE;EACpC,MAAMiD,QAAQ,GAAGnD,SAAS,EAAE;EAE5B,MAAMoD,eAAe,GAAGF,SAAS,GAAGZ,OAAO,GAAG,WAAW;EAEzD,MAAMe,WAAW,GAAGhE,MAAM,CAAqBiE,SAAS,CAAC;EACzD,MAAMC,YAAY,GAAGpE,WAAW,CAAEqE,EAAU,IAAI;IAC9CH,WAAW,CAACI,OAAO,GAAGD,EAAE;EAC1B,CAAC,EAAE,EAAE,CAAC;EACN,MAAME,kBAAkB,GAAG,EAACxB,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAEyB,UAAU,KAAI,CAAC,CAACrC,MAAM;EAE9D,MAAM,CAACsC,OAAO,EAAEC,UAAU,CAAC,GAAGtE,iBAAiB,CAC7CuE,IAAA;IAAA,IAAC;MAAEC;IAAe,CAAE,GAAAD,IAAA;IAAA,OAAKjD,cAAc,CAACkD,eAAe,EAAE1C,WAAW,CAAC;EAAA,GACrE,CAACA,WAAW,CAAC,CACd;EACD,MAAM2C,SAAS,GAAG3E,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAM4E,SAAS,GAAGzE,YAAY,CAACqE,UAAU,EAAEG,SAAS,EAAEnB,iBAAiB,CAAC;EACxE,MAAMqB,kBAAkB,GAAGjE,kBAAkB,EAAE;EAE/C,MAAMkE,IAAI,GAAGzE,eAAe,CAAC,OAAO,CAAC;EACrC,MAAM;IAAE0E,cAAc;IAAEC;EAAqB,CAAE,GAAG7D,YAAY,CAAC;IAC7DW,KAAK;IACLU,OAAO;IACPC,aAAa;IACbC,aAAa;IACbC,cAAc;IACdC,iBAAiB;IACjBC,UAAU,EAAE;MACVoC,kBAAkB,EAAEpC,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAEoC,kBAAkB;MAClDC,mBAAmB,EAAEJ,IAAI,CAAC,gCAAgC,EAAEjC,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAEqC,mBAAmB;;GAE9F,CAAC;EACF,MAAMC,cAAc,GAAGlD,MAAM,IAAIC,MAAM,IAAIC,UAAU,IAAIC,WAAW;EACpE,MAAMgD,mBAAmB,GAAGtB,QAAQ,IAAIb,OAAO,KAAK,WAAW,IAAI,CAAC,CAACd,UAAU;EAC/E,MAAMkD,SAAS,GAAGrF,MAAM,CAAiB,IAAI,CAAC;EAE9C,MAAM;IAAEsF,WAAW;IAAEC;EAAY,CAAE,GAAGlE,eAAe,CAACsD,SAAS,EAAEU,SAAS,CAAC;EAC3EtC,YAAY,GAAG,CAACe,QAAQ,IAAIf,YAAY;EACxC,MAAMyC,WAAW,GAAmCC,KAAK,IAAG;IAC1D;IACA;IACA;IACA,IAAI1C,YAAY,IAAI,CAAC0C,KAAK,CAACC,aAAa,CAACC,QAAQ,CAACd,kBAAkB,EAAE,CAAC,EAAE;MACvEU,YAAY,CAACE,KAAK,CAACC,aAAa,CAAC;;EAErC,CAAC;EACD3F,mBAAmB,CACjB8B,GAAG,EACH,OAAO;IACLyD,WAAW,EAAEA,CAAA,KAAK;MAChB,IAAIvC,YAAY,EAAE;QAChBuC,WAAW,EAAE;;IAEjB;GACD,CAAC,EACF,CAACvC,YAAY,EAAEuC,WAAW,CAAC,CAC5B;EACD,IAAIM,MAAM;EACV,IAAItD,OAAO,EAAE;IACXsD,MAAM,GACJ/F,KAAA,CAAAgG,aAAA;MAAKC,SAAS,EAAErE,MAAM,CAACa;IAAO,GAC5BzC,KAAA,CAAAgG,aAAA,CAAC7E,uBAAuB;MAAC+E,IAAI,EAAC;IAAS,GACrClG,KAAA,CAAAgG,aAAA,CAAC9E,kBAAkB;MAACiF,OAAO,EAAC;IAAM,GAAEzD,WAAW,CAAsB,CAC7C,CAE7B;GACF,MAAM,IAAIF,KAAK,IAAI,CAACP,KAAK,CAACmE,MAAM,EAAE;IACjCL,MAAM,GAAG/F,KAAA,CAAAgG,aAAA;MAAKC,SAAS,EAAErE,MAAM,CAACY;IAAK,GAAGA,KAAK,CAAO;;EAGtD,OACExC,KAAA,CAAAgG,aAAA,CAACpF,yBAAyB,CAACyF,QAAQ;IAACC,KAAK,EAAE;MAAEC,cAAc,EAAE;IAAS;EAAE,GACtEvG,KAAA,CAAAgG,aAAA,CAACvF,sBAAsB,QACrBT,KAAA,CAAAgG,aAAA,QAAAQ,MAAA,CAAAC,MAAA,KAAS1C,SAAS;IAAEkC,SAAS,EAAE7F,IAAI,CAAC2D,SAAS,CAACkC,SAAS,EAAErE,MAAM,CAAC8E,IAAI,CAAC;IAAE1E,GAAG,EAAE+C;EAAS,IACnF/E,KAAA,CAAAgG,aAAA,CAACzF,0BAA0B;IACzB6B,MAAM,EACJkD,cAAc,IACZtF,KAAA,CAAAgG,aAAA;MACEC,SAAS,EAAE7F,IAAI,CACbwB,MAAM,CAACQ,MAAM,EACb4B,SAAS,IAAIpC,MAAM,CAAC,gBAAgB,CAAC,EACrCA,MAAM,CAAC,kBAAkBsC,eAAe,EAAE,CAAC;IAC5C,GAEDlE,KAAA,CAAAgG,aAAA,CAACrF,sBAAsB,CAAC0F,QAAQ;MAACC,KAAK,EAAE;QAAEK,QAAQ,EAAEtC;MAAY;IAAE,GAChErE,KAAA,CAAAgG,aAAA,CAACvE,WAAW;MAACW,MAAM,EAAEA,MAAM;MAAEC,MAAM,EAAEA,MAAM;MAAEC,UAAU,EAAEA,UAAU;MAAEC,WAAW,EAAEA;IAAW,EAAI,CACjE,CAErC;IAEHqE,MAAM,EAAErB,mBAAmB,IAAIvF,KAAA,CAAAgG,aAAA;MAAKC,SAAS,EAAErE,MAAM,CAAC,mBAAmB;IAAC,GAAGU,UAAU,CAAO;IAC9FuE,sBAAsB,EAAE,IAAI;IAC5BC,qBAAqB,EAAE5C,eAAe,KAAK,WAAW;IACtDd,OAAO,EAAEc,eAAe,KAAK,WAAW,GAAG,OAAO,GAAGA,eAAe;IACpE6C,cAAc,EAAE7D,YAAY;IAC5B8D,cAAc,EAAE7D,0BAA0B;IAC1C8D,WAAW,EAAEzB,SAAS;IACtB0B,UAAU,EAAEhD,eAAe,KAAK,WAAW;IAC3CiD,sBAAsB,EAAE;EAAI,GAE5BnH,KAAA,CAAAgG,aAAA;IACEC,SAAS,EAAE7F,IAAI,CACbkF,cAAc,IAAI1D,MAAM,CAAC,YAAY,CAAC,EACtCoC,SAAS,IAAIpC,MAAM,CAACwF,OAAO,EAC3BxF,MAAM,CAAC,kBAAkBsC,eAAe,EAAE,CAAC;EAC5C,GAEA,CAAC,CAACb,cAAc,IAAI,CAAC,CAACC,UAAU,IAC/BtD,KAAA,CAAAgG,aAAA,CAAC9E,kBAAkB;IAACmG,MAAM,EAAE,IAAI;IAAElB,OAAO,EAAC;EAAM,GAC9CnG,KAAA,CAAAgG,aAAA,eACG3C,cAAc,CAAC;IAAEE,eAAe;IAAED,UAAU;IAAEgE,SAAS,EAAEhE,UAAU,GAAGrB,KAAK,CAACmE,MAAM,GAAG;EAAC,CAAE,CAAC,CACrF,CAEV,EACAL,MAAM,aAANA,MAAM,cAANA,MAAM,GACL/F,KAAA,CAAAgG,aAAA,CAACuB,SAAS;IACRtF,KAAK,EAAEA,KAAK;IACZC,cAAc,EAAEA,cAAc;IAC9BS,OAAO,EAAEA,OAAO;IAChBE,aAAa,EAAEA,aAAa;IAC5B6B,OAAO,EAAEA,OAAO;IAChBQ,cAAc,EAAEA,cAAc;IAC9BC,qBAAqB,EAAEA,qBAAqB;IAC5ClC,eAAe,EAAEA,eAAe;IAChCuE,OAAO,EAAE7B,WAAW;IACpB8B,SAAS,EAAEzE,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAEyB,UAAU;IACjCiD,cAAc,EAAElD,kBAAkB,IAAIL,WAAW,CAACI,OAAO,GAAGJ,WAAW,CAACI,OAAO,GAAGH,SAAS;IAC3FZ,mBAAmB,EAAEA;EAAmB,EAE3C,CACG,CACqB,CACzB,CACiB,CACU;AAEzC,CAAC,CAAwB;AAEzB,eAAe3B,KAAK;AAEpB,MAAM0F,SAAS,GAAGI,KAAA,IAwBb;EAAA,IAxBkB;IACrB1F,KAAK;IACLC,cAAc;IACdS,OAAO;IACPE,aAAa;IACb6B,OAAO;IACPQ,cAAc;IACdC,qBAAqB;IACrBlC,eAAe;IACfuE,OAAO;IACPE,cAAc;IACdD,SAAS;IACTjE;EAAmB,CAYpB,GAAAmE,KAAA;EACC,MAAMC,UAAU,GAAG,CAAC,CAAC/E,aAAa;EAClC,MAAMgF,kBAAkB,GAAGD,UAAU,IAAIpE,mBAAmB;EAC5D,MAAMQ,SAAS,GAAGhD,gBAAgB,EAAE;EAEpC,MAAM;IAAE8G,aAAa;IAAEC;EAAW,CAAE,GAAGxG,qBAAqB,CAACsB,aAAa,EAAEZ,KAAK,CAACmE,MAAM,CAAC;EAEzF,IAAI4B,yBAAyB,GAAG9F,cAAc,CAAC+F,QAAQ,IAAI,EAAE;EAC7DD,yBAAyB,GAAG/E,eAAe,GACvC+E,yBAAyB,CAAC3F,MAAM,CAC7B6F,OAAwC,IAAKA,OAAO,CAAC5D,EAAE,IAAIrB,eAAe,CAACkF,OAAO,CAACD,OAAO,CAAC5D,EAAE,CAAC,KAAK,CAAC,CAAC,CACvG,GACD0D,yBAAyB;EAE7B,IAAII,QAAQ,GAAwBhE,SAAS;EAC7C,IAAIiE,YAAY,GAA+BjE,SAAS;EAExD,IAAIwD,UAAU,EAAE;IACdQ,QAAQ,GAAG,OAAO;IAClBC,YAAY,GAAG,cAAc;;EAG/B,OACErI,KAAA,CAAAgG,aAAA,OAAAQ,MAAA,CAAAC,MAAA;IACER,SAAS,EAAE7F,IAAI,CAACwB,MAAM,CAAC0G,IAAI,EAAE1G,MAAM,CAAC,aAAa8C,OAAO,IAAI,CAAC,EAAE,CAAC,CAAC;IACjE6D,IAAI,EAAEH,QAAQ;IAAA,mBACGV,cAAc;IAAA,cACnBD;EAAS,GAChBrG,YAAY,IAAIA,YAAY,CAACsF,IAAK,GAEtCzE,KAAK,CAACuG,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KACrB1I,KAAA,CAAAgG,aAAA,OAAAQ,MAAA,CAAAC,MAAA;IACER,SAAS,EAAE7F,IAAI,CAACwB,MAAM,CAAC+G,IAAI,EAAE;MAC3B,CAAC/G,MAAM,CAAC,iBAAiB,CAAC,GAAGgG,UAAU;MACvC,CAAChG,MAAM,CAAC,eAAe,CAAC,GAAGgG,UAAU,IAAI1C,cAAc,CAACuD,IAAI;KAC7D,CAAC;IACFG,GAAG,EAAElH,UAAU,CAACiB,OAAO,EAAE8F,IAAI,EAAEC,KAAK,CAAC;IACrClB,OAAO,EAAEA;EAAO,GACXpG,YAAY,IAAIA,YAAY,CAACqH,IAAI,EAAC;IACvCF,IAAI,EAAEF;EAAY,IAElBrI,KAAA,CAAAgG,aAAA;IACEC,SAAS,EAAE7F,IAAI,CAACwB,MAAM,CAAC,YAAY,CAAC,EAAEoC,SAAS,IAAIpC,MAAM,CAACwF,OAAO,CAAC;IAClEyB,OAAO,EACLhB,kBAAkB,GACdjC,KAAK,IAAG;;MACNT,qBAAqB,aAArBA,qBAAqB,uBAArBA,qBAAqB,CAAGsD,IAAI,EAAEK,QAAQ,EAAE;MACxC;MACA,CAAA/G,EAAA,GAAA6D,KAAK,CAACC,aAAa,CAACkD,aAAa,CAAC,OAAO,CAAC,cAAAhH,EAAA,uBAAAA,EAAA,CAAEiH,KAAK,EAAE;IACrD,CAAC,GACD5E;EAAS,GAGfpE,KAAA,CAAAgG,aAAA;IAAKC,SAAS,EAAErE,MAAM,CAAC,aAAa;EAAC,GACnC5B,KAAA,CAAAgG,aAAA;IAAKC,SAAS,EAAErE,MAAM,CAAC,mBAAmB;EAAC,GACxCM,cAAc,CAACE,MAAM,GAAGF,cAAc,CAACE,MAAM,CAACqG,IAAI,CAAC,GAAG,EAAE,CACrD,EACLtD,qBAAqB,IACpBnF,KAAA,CAAAgG,aAAA;IAAKC,SAAS,EAAErE,MAAM,CAAC,mBAAmB;EAAC,GACzC5B,KAAA,CAAAgG,aAAA,CAAC3E,gBAAgB,EAAAmF,MAAA,CAAAC,MAAA;IACfwC,WAAW,EAAEnB,aAAa;IAC1BoB,SAAS,EAAEnB;EAAW,GAClB5C,qBAAqB,CAACsD,IAAI,CAAC,EAC/B,CAEL,CACG,EACLT,yBAAyB,CAACQ,GAAG,CAAC,CAAAW,KAAA,EAAuCT,KAAK;IAAA,IAA3C;MAAEU,KAAK,GAAG,GAAG;MAAEhH,MAAM;MAAEiH,OAAO;MAAE/E;IAAE,CAAE,GAAA6E,KAAA;IAAA,OAClEnJ,KAAA,CAAAgG,aAAA;MAAK4C,GAAG,EAAEtE,EAAE,IAAIoE,KAAK;MAAEzC,SAAS,EAAErE,MAAM,CAACsG,OAAO;MAAEoB,KAAK,EAAE;QAAEF,KAAK,EAAE,GAAGA,KAAK;MAAG;IAAE,GAC5EhH,MAAM,GAAGpC,KAAA,CAAAgG,aAAA;MAAKC,SAAS,EAAErE,MAAM,CAAC,gBAAgB;IAAC,GAAGQ,MAAM,CAAO,GAAG,EAAE,EACtEiH,OAAO,GAAGrJ,KAAA,CAAAgG,aAAA;MAAKC,SAAS,EAAErE,MAAM,CAAC,iBAAiB;IAAC,GAAGyH,OAAO,CAACZ,IAAI,CAAC,CAAO,GAAG,EAAE,CAC5E;EAAA,CACP,CAAC,CACE,CAET,CAAC,CACC;AAET,CAAC;AAEDxH,gBAAgB,CAACY,KAAK,EAAE,OAAO,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}