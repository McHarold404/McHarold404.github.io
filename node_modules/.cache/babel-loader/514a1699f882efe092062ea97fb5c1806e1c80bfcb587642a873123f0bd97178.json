{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport clsx from 'clsx';\nimport { getAnalyticsMetadataAttribute } from '@cloudscape-design/component-toolkit/internal/analytics-metadata';\nimport VisualContext from '../../../internal/components/visual-context';\nimport customCssProps from '../../../internal/generated/custom-css-properties';\nimport { useMobile } from '../../../internal/hooks/use-mobile';\nimport { highContrastHeaderClassName } from '../../../internal/utils/content-header-utils';\nimport sharedStyles from '../../resize/styles.css.js';\nimport testutilStyles from '../../test-classes/styles.css.js';\nimport styles from './styles.css.js';\nconst contentTypeCustomWidths = ['dashboard', 'cards', 'table'];\nconst componentAnalyticsMetadata = {\n  name: 'awsui.AppLayoutToolbar',\n  label: {\n    selector: 'h1',\n    root: 'body'\n  }\n};\nexport const SkeletonLayout = React.forwardRef((_ref, ref) => {\n  let {\n    style,\n    notifications,\n    headerVariant,\n    contentHeader,\n    content,\n    navigation,\n    navigationOpen,\n    navigationWidth,\n    tools,\n    globalTools,\n    toolsOpen,\n    toolsWidth,\n    toolbar,\n    sideSplitPanel,\n    bottomSplitPanel,\n    splitPanelOpen,\n    placement,\n    contentType,\n    maxContentWidth,\n    disableContentPaddings,\n    globalToolsOpen,\n    navigationAnimationDisabled,\n    isNested,\n    drawerExpandedMode,\n    drawerExpandedModeInChildLayout\n  } = _ref;\n  const isMobile = useMobile();\n  const isMaxWidth = maxContentWidth === Number.MAX_VALUE || maxContentWidth === Number.MAX_SAFE_INTEGER;\n  const anyPanelOpen = navigationOpen || toolsOpen;\n  return React.createElement(VisualContext, {\n    contextName: \"app-layout-toolbar\"\n  }, React.createElement(\"div\", Object.assign({\n    ref: ref,\n    className: clsx(styles.root, testutilStyles.root, {\n      [styles['has-adaptive-widths-default']]: !contentTypeCustomWidths.includes(contentType),\n      [styles['has-adaptive-widths-dashboard']]: contentType === 'dashboard',\n      [styles['drawer-expanded-mode']]: drawerExpandedMode\n    }),\n    style: {\n      minBlockSize: isNested ? '100%' : `calc(100vh - ${placement.insetBlockStart + placement.insetBlockEnd}px)`,\n      [customCssProps.maxContentWidth]: isMaxWidth ? '100%' : maxContentWidth ? `${maxContentWidth}px` : '',\n      [customCssProps.navigationWidth]: `${navigationWidth}px`,\n      [customCssProps.toolsWidth]: `${toolsWidth}px`\n    }\n  }, getAnalyticsMetadataAttribute({\n    component: componentAnalyticsMetadata\n  })), toolbar, navigation && React.createElement(\"div\", {\n    className: clsx(styles.navigation, !navigationOpen && styles['panel-hidden'], toolsOpen && styles['unfocusable-mobile'], !navigationAnimationDisabled && sharedStyles['with-motion-horizontal'], (drawerExpandedMode || drawerExpandedModeInChildLayout) && styles.hidden)\n  }, navigation), React.createElement(\"main\", {\n    className: clsx(styles['main-landmark'], isMobile && anyPanelOpen && styles['unfocusable-mobile'], drawerExpandedMode && styles.hidden)\n  }, notifications && React.createElement(\"div\", {\n    className: clsx(styles['notifications-background'], headerVariant === 'high-contrast' && highContrastHeaderClassName)\n  }), notifications, React.createElement(\"div\", {\n    className: clsx(styles.main, {\n      [styles['main-disable-paddings']]: disableContentPaddings\n    }),\n    style: style\n  }, contentHeader && React.createElement(\"div\", {\n    className: styles['content-header']\n  }, contentHeader), React.createElement(\"div\", {\n    className: clsx(styles.content, testutilStyles.content)\n  }, content)), bottomSplitPanel && React.createElement(\"div\", {\n    className: clsx(styles['split-panel-bottom']),\n    style: {\n      insetBlockEnd: placement.insetBlockEnd\n    }\n  }, bottomSplitPanel)), sideSplitPanel && React.createElement(\"div\", {\n    className: clsx(styles['split-panel-side'], !splitPanelOpen && styles['panel-hidden'], drawerExpandedMode && styles.hidden)\n  }, sideSplitPanel), React.createElement(\"div\", {\n    className: clsx(styles.tools, !toolsOpen && styles['panel-hidden'], sharedStyles['with-motion-horizontal'], navigationOpen && !toolsOpen && styles['unfocusable-mobile'], toolsOpen && styles['tools-open'], drawerExpandedMode && styles.hidden)\n  }, tools), React.createElement(\"div\", {\n    className: clsx(styles['global-tools'], !globalToolsOpen && styles['panel-hidden'])\n  }, globalTools)));\n});","map":{"version":3,"names":["React","clsx","getAnalyticsMetadataAttribute","VisualContext","customCssProps","useMobile","highContrastHeaderClassName","sharedStyles","testutilStyles","styles","contentTypeCustomWidths","componentAnalyticsMetadata","name","label","selector","root","SkeletonLayout","forwardRef","_ref","ref","style","notifications","headerVariant","contentHeader","content","navigation","navigationOpen","navigationWidth","tools","globalTools","toolsOpen","toolsWidth","toolbar","sideSplitPanel","bottomSplitPanel","splitPanelOpen","placement","contentType","maxContentWidth","disableContentPaddings","globalToolsOpen","navigationAnimationDisabled","isNested","drawerExpandedMode","drawerExpandedModeInChildLayout","isMobile","isMaxWidth","Number","MAX_VALUE","MAX_SAFE_INTEGER","anyPanelOpen","createElement","contextName","Object","assign","className","includes","minBlockSize","insetBlockStart","insetBlockEnd","component","hidden","main"],"sources":["/Users/naman/Desktop/Portfolio/react-portfolio/node_modules/src/app-layout/visual-refresh-toolbar/skeleton/index.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport clsx from 'clsx';\n\nimport { getAnalyticsMetadataAttribute } from '@cloudscape-design/component-toolkit/internal/analytics-metadata';\n\nimport { GeneratedAnalyticsMetadataAppLayoutToolbarComponent } from '../../../app-layout-toolbar/analytics-metadata/interfaces';\nimport VisualContext from '../../../internal/components/visual-context';\nimport customCssProps from '../../../internal/generated/custom-css-properties';\nimport { useMobile } from '../../../internal/hooks/use-mobile';\nimport { highContrastHeaderClassName } from '../../../internal/utils/content-header-utils';\nimport { AppLayoutPropsWithDefaults } from '../../interfaces';\n\nimport sharedStyles from '../../resize/styles.css.js';\nimport testutilStyles from '../../test-classes/styles.css.js';\nimport styles from './styles.css.js';\n\nconst contentTypeCustomWidths: Array<string | undefined> = ['dashboard', 'cards', 'table'];\n\ninterface SkeletonLayoutProps\n  extends Pick<\n    AppLayoutPropsWithDefaults,\n    | 'notifications'\n    | 'headerVariant'\n    | 'contentHeader'\n    | 'content'\n    | 'contentType'\n    | 'maxContentWidth'\n    | 'disableContentPaddings'\n    | 'navigation'\n    | 'navigationOpen'\n    | 'navigationWidth'\n    | 'tools'\n    | 'toolsOpen'\n    | 'toolsWidth'\n    | 'placement'\n  > {\n  style?: React.CSSProperties;\n  toolbar?: React.ReactNode;\n  splitPanelOpen?: boolean;\n  sideSplitPanel?: React.ReactNode;\n  bottomSplitPanel?: React.ReactNode;\n  globalTools?: React.ReactNode;\n  globalToolsOpen?: boolean;\n  navigationAnimationDisabled?: boolean;\n  isNested?: boolean;\n  drawerExpandedMode: boolean;\n  drawerExpandedModeInChildLayout: boolean;\n}\n\nconst componentAnalyticsMetadata: GeneratedAnalyticsMetadataAppLayoutToolbarComponent = {\n  name: 'awsui.AppLayoutToolbar',\n  label: {\n    selector: 'h1',\n    root: 'body',\n  },\n};\n\nexport const SkeletonLayout = React.forwardRef<HTMLDivElement, SkeletonLayoutProps>(\n  (\n    {\n      style,\n      notifications,\n      headerVariant,\n      contentHeader,\n      content,\n      navigation,\n      navigationOpen,\n      navigationWidth,\n      tools,\n      globalTools,\n      toolsOpen,\n      toolsWidth,\n      toolbar,\n      sideSplitPanel,\n      bottomSplitPanel,\n      splitPanelOpen,\n      placement,\n      contentType,\n      maxContentWidth,\n      disableContentPaddings,\n      globalToolsOpen,\n      navigationAnimationDisabled,\n      isNested,\n      drawerExpandedMode,\n      drawerExpandedModeInChildLayout,\n    },\n    ref\n  ) => {\n    const isMobile = useMobile();\n    const isMaxWidth = maxContentWidth === Number.MAX_VALUE || maxContentWidth === Number.MAX_SAFE_INTEGER;\n    const anyPanelOpen = navigationOpen || toolsOpen;\n    return (\n      <VisualContext contextName=\"app-layout-toolbar\">\n        <div\n          ref={ref}\n          className={clsx(styles.root, testutilStyles.root, {\n            [styles['has-adaptive-widths-default']]: !contentTypeCustomWidths.includes(contentType),\n            [styles['has-adaptive-widths-dashboard']]: contentType === 'dashboard',\n            [styles['drawer-expanded-mode']]: drawerExpandedMode,\n          })}\n          style={{\n            minBlockSize: isNested ? '100%' : `calc(100vh - ${placement.insetBlockStart + placement.insetBlockEnd}px)`,\n            [customCssProps.maxContentWidth]: isMaxWidth ? '100%' : maxContentWidth ? `${maxContentWidth}px` : '',\n            [customCssProps.navigationWidth]: `${navigationWidth}px`,\n            [customCssProps.toolsWidth]: `${toolsWidth}px`,\n          }}\n          {...getAnalyticsMetadataAttribute({ component: componentAnalyticsMetadata })}\n        >\n          {toolbar}\n          {navigation && (\n            <div\n              className={clsx(\n                styles.navigation,\n                !navigationOpen && styles['panel-hidden'],\n                toolsOpen && styles['unfocusable-mobile'],\n                !navigationAnimationDisabled && sharedStyles['with-motion-horizontal'],\n                (drawerExpandedMode || drawerExpandedModeInChildLayout) && styles.hidden\n              )}\n            >\n              {navigation}\n            </div>\n          )}\n          <main\n            className={clsx(\n              styles['main-landmark'],\n              isMobile && anyPanelOpen && styles['unfocusable-mobile'],\n              drawerExpandedMode && styles.hidden\n            )}\n          >\n            {notifications && (\n              <div\n                className={clsx(\n                  styles['notifications-background'],\n                  headerVariant === 'high-contrast' && highContrastHeaderClassName\n                )}\n              ></div>\n            )}\n            {notifications}\n            <div\n              className={clsx(styles.main, { [styles['main-disable-paddings']]: disableContentPaddings })}\n              style={style}\n            >\n              {contentHeader && <div className={styles['content-header']}>{contentHeader}</div>}\n              <div className={clsx(styles.content, testutilStyles.content)}>{content}</div>\n            </div>\n            {bottomSplitPanel && (\n              <div className={clsx(styles['split-panel-bottom'])} style={{ insetBlockEnd: placement.insetBlockEnd }}>\n                {bottomSplitPanel}\n              </div>\n            )}\n          </main>\n          {sideSplitPanel && (\n            <div\n              className={clsx(\n                styles['split-panel-side'],\n                !splitPanelOpen && styles['panel-hidden'],\n                drawerExpandedMode && styles.hidden\n              )}\n            >\n              {sideSplitPanel}\n            </div>\n          )}\n          <div\n            className={clsx(\n              styles.tools,\n              !toolsOpen && styles['panel-hidden'],\n              sharedStyles['with-motion-horizontal'],\n              navigationOpen && !toolsOpen && styles['unfocusable-mobile'],\n              toolsOpen && styles['tools-open'],\n              drawerExpandedMode && styles.hidden\n            )}\n          >\n            {tools}\n          </div>\n          <div className={clsx(styles['global-tools'], !globalToolsOpen && styles['panel-hidden'])}>{globalTools}</div>\n        </div>\n      </VisualContext>\n    );\n  }\n);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}