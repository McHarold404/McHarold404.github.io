{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { forwardRef, useState } from 'react';\nimport clsx from 'clsx';\nimport InternalFileInput from '../file-input/internal.js';\nimport Tooltip from '../internal/components/tooltip/index.js';\nimport { fireCancelableEvent } from '../internal/events/index.js';\nimport testUtilStyles from './test-classes/styles.css.js';\nconst FileInputItem = forwardRef((_ref, ref) => {\n  let {\n    item,\n    showTooltip,\n    onTooltipDismiss,\n    onFilesChange\n  } = _ref;\n  const [files, setFiles] = useState([]);\n  const containerRef = React.useRef(null);\n  const canShowTooltip = Boolean(showTooltip);\n  return React.createElement(\"div\", {\n    ref: containerRef\n  }, React.createElement(InternalFileInput, {\n    className: clsx(testUtilStyles['button-group-item']),\n    ref: ref,\n    variant: \"icon\",\n    ariaLabel: item.text,\n    accept: item.accept,\n    multiple: item.multiple,\n    value: files,\n    onChange: event => {\n      fireCancelableEvent(onFilesChange, {\n        id: item.id,\n        files: event.detail.value\n      });\n      setFiles(event.detail.value);\n    },\n    \"data-testid\": item.id,\n    __inputNativeAttributes: {\n      'data-itemid': item.id\n    },\n    __inputClassName: testUtilStyles.item\n  }), canShowTooltip && React.createElement(Tooltip, {\n    trackRef: containerRef,\n    trackKey: item.id,\n    value: item.text,\n    className: clsx(testUtilStyles.tooltip, testUtilStyles['button-group-tooltip']),\n    onDismiss: onTooltipDismiss\n  }));\n});\nexport default FileInputItem;","map":{"version":3,"names":["React","forwardRef","useState","clsx","InternalFileInput","Tooltip","fireCancelableEvent","testUtilStyles","FileInputItem","_ref","ref","item","showTooltip","onTooltipDismiss","onFilesChange","files","setFiles","containerRef","useRef","canShowTooltip","Boolean","createElement","className","variant","ariaLabel","text","accept","multiple","value","onChange","event","id","detail","__inputNativeAttributes","__inputClassName","trackRef","trackKey","tooltip","onDismiss"],"sources":["/Users/naman/Desktop/Portfolio/react-portfolio/node_modules/src/button-group/file-input-item.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { forwardRef, useState } from 'react';\nimport clsx from 'clsx';\n\nimport { FileInputProps } from '../file-input/interfaces.js';\nimport InternalFileInput from '../file-input/internal.js';\nimport Tooltip from '../internal/components/tooltip/index.js';\nimport { CancelableEventHandler, fireCancelableEvent } from '../internal/events/index.js';\nimport { ButtonGroupProps } from './interfaces.js';\n\nimport testUtilStyles from './test-classes/styles.css.js';\n\ninterface FileInputItemProps {\n  item: ButtonGroupProps.IconFileInput;\n  showTooltip: boolean;\n  onTooltipDismiss: () => void;\n  onFilesChange?: CancelableEventHandler<ButtonGroupProps.FilesChangeDetails>;\n}\n\nconst FileInputItem = forwardRef(\n  ({ item, showTooltip, onTooltipDismiss, onFilesChange }: FileInputItemProps, ref: React.Ref<FileInputProps.Ref>) => {\n    const [files, setFiles] = useState<File[]>([]);\n    const containerRef = React.useRef<HTMLDivElement>(null);\n\n    const canShowTooltip = Boolean(showTooltip);\n\n    return (\n      <div ref={containerRef}>\n        <InternalFileInput\n          className={clsx(testUtilStyles['button-group-item'])}\n          ref={ref}\n          variant=\"icon\"\n          ariaLabel={item.text}\n          accept={item.accept}\n          multiple={item.multiple}\n          value={files}\n          onChange={event => {\n            fireCancelableEvent(onFilesChange, { id: item.id, files: event.detail.value });\n            setFiles(event.detail.value);\n          }}\n          data-testid={item.id}\n          __inputNativeAttributes={{\n            'data-itemid': item.id,\n          }}\n          __inputClassName={testUtilStyles.item}\n        />\n        {canShowTooltip && (\n          <Tooltip\n            trackRef={containerRef}\n            trackKey={item.id}\n            value={item.text}\n            className={clsx(testUtilStyles.tooltip, testUtilStyles['button-group-tooltip'])}\n            onDismiss={onTooltipDismiss}\n          />\n        )}\n      </div>\n    );\n  }\n);\n\nexport default FileInputItem;\n"],"mappings":"AAAA;AACA;AACA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AACnD,OAAOC,IAAI,MAAM,MAAM;AAGvB,OAAOC,iBAAiB,MAAM,2BAA2B;AACzD,OAAOC,OAAO,MAAM,yCAAyC;AAC7D,SAAiCC,mBAAmB,QAAQ,6BAA6B;AAGzF,OAAOC,cAAc,MAAM,8BAA8B;AASzD,MAAMC,aAAa,GAAGP,UAAU,CAC9B,CAAAQ,IAAA,EAA6EC,GAAkC,KAAI;EAAA,IAAlH;IAAEC,IAAI;IAAEC,WAAW;IAAEC,gBAAgB;IAAEC;EAAa,CAAsB,GAAAL,IAAA;EACzE,MAAM,CAACM,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAS,EAAE,CAAC;EAC9C,MAAMe,YAAY,GAAGjB,KAAK,CAACkB,MAAM,CAAiB,IAAI,CAAC;EAEvD,MAAMC,cAAc,GAAGC,OAAO,CAACR,WAAW,CAAC;EAE3C,OACEZ,KAAA,CAAAqB,aAAA;IAAKX,GAAG,EAAEO;EAAY,GACpBjB,KAAA,CAAAqB,aAAA,CAACjB,iBAAiB;IAChBkB,SAAS,EAAEnB,IAAI,CAACI,cAAc,CAAC,mBAAmB,CAAC,CAAC;IACpDG,GAAG,EAAEA,GAAG;IACRa,OAAO,EAAC,MAAM;IACdC,SAAS,EAAEb,IAAI,CAACc,IAAI;IACpBC,MAAM,EAAEf,IAAI,CAACe,MAAM;IACnBC,QAAQ,EAAEhB,IAAI,CAACgB,QAAQ;IACvBC,KAAK,EAAEb,KAAK;IACZc,QAAQ,EAAEC,KAAK,IAAG;MAChBxB,mBAAmB,CAACQ,aAAa,EAAE;QAAEiB,EAAE,EAAEpB,IAAI,CAACoB,EAAE;QAAEhB,KAAK,EAAEe,KAAK,CAACE,MAAM,CAACJ;MAAK,CAAE,CAAC;MAC9EZ,QAAQ,CAACc,KAAK,CAACE,MAAM,CAACJ,KAAK,CAAC;IAC9B,CAAC;IAAA,eACYjB,IAAI,CAACoB,EAAE;IACpBE,uBAAuB,EAAE;MACvB,aAAa,EAAEtB,IAAI,CAACoB;KACrB;IACDG,gBAAgB,EAAE3B,cAAc,CAACI;EAAI,EACrC,EACDQ,cAAc,IACbnB,KAAA,CAAAqB,aAAA,CAAChB,OAAO;IACN8B,QAAQ,EAAElB,YAAY;IACtBmB,QAAQ,EAAEzB,IAAI,CAACoB,EAAE;IACjBH,KAAK,EAAEjB,IAAI,CAACc,IAAI;IAChBH,SAAS,EAAEnB,IAAI,CAACI,cAAc,CAAC8B,OAAO,EAAE9B,cAAc,CAAC,sBAAsB,CAAC,CAAC;IAC/E+B,SAAS,EAAEzB;EAAgB,EAE9B,CACG;AAEV,CAAC,CACF;AAED,eAAeL,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}