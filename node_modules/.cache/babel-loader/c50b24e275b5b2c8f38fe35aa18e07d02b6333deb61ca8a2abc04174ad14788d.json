{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useEffect, useLayoutEffect, useRef, useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport clsx from 'clsx';\nimport { useMergeRefs, useResizeObserver, useUniqueId } from '@cloudscape-design/component-toolkit/internal';\nimport { getLogicalBoundingClientRect } from '@cloudscape-design/component-toolkit/internal';\nimport { fireNonCancelableEvent } from '../../events';\nimport customCssProps from '../../generated/custom-css-properties';\nimport { useMobile } from '../../hooks/use-mobile';\nimport { usePortalModeClasses } from '../../hooks/use-portal-mode-classes';\nimport { useVisualRefresh } from '../../hooks/use-visual-mode';\nimport { nodeBelongs } from '../../utils/node-belongs';\nimport { getFirstFocusable, getLastFocusable } from '../focus-lock/utils.js';\nimport TabTrap from '../tab-trap/index.js';\nimport { Transition } from '../transition';\nimport { DropdownContextProvider } from './context';\nimport { calculatePosition, defaultMaxDropdownWidth, hasEnoughSpaceToStretchBeyondTriggerWidth } from './dropdown-fit-handler';\nimport { applyDropdownPositionRelativeToViewport } from './dropdown-position';\nimport styles from './styles.css.js';\nconst DropdownContainer = _ref => {\n  let {\n    triggerRef,\n    children,\n    renderWithPortal,\n    id,\n    referrerId,\n    open\n  } = _ref;\n  var _a, _b;\n  if (!renderWithPortal) {\n    return React.createElement(React.Fragment, null, children);\n  }\n  if (!open) {\n    return null;\n  }\n  const currentDocument = (_b = (_a = triggerRef.current) === null || _a === void 0 ? void 0 : _a.ownerDocument) !== null && _b !== void 0 ? _b : document;\n  return createPortal(React.createElement(\"div\", {\n    id: id,\n    \"data-awsui-referrer-id\": referrerId\n  }, children), currentDocument.body);\n};\nconst TransitionContent = _ref2 => {\n  let {\n    state,\n    transitionRef,\n    dropdownClasses,\n    stretchWidth,\n    interior,\n    isRefresh,\n    dropdownRef,\n    verticalContainerRef,\n    expandToViewport,\n    stretchBeyondTriggerWidth,\n    header,\n    children,\n    footer,\n    position,\n    open,\n    onMouseDown,\n    id,\n    role,\n    ariaLabelledby,\n    ariaDescribedby\n  } = _ref2;\n  const contentRef = useMergeRefs(dropdownRef, transitionRef);\n  return React.createElement(\"div\", {\n    className: clsx(styles.dropdown, dropdownClasses, {\n      [styles.open]: open,\n      [styles['with-limited-width']]: !stretchWidth,\n      [styles['hide-block-border']]: stretchWidth,\n      [styles.interior]: interior,\n      [styles.refresh]: isRefresh,\n      [styles['use-portal']]: expandToViewport && !interior,\n      [styles['stretch-beyond-trigger-width']]: stretchBeyondTriggerWidth\n    }),\n    ref: contentRef,\n    id: id,\n    role: role,\n    \"aria-labelledby\": ariaLabelledby,\n    \"aria-describedby\": ariaDescribedby,\n    \"data-open\": open,\n    \"data-animating\": state !== 'exited',\n    \"aria-hidden\": !open,\n    style: stretchBeyondTriggerWidth ? {\n      [customCssProps.dropdownDefaultMaxWidth]: `${defaultMaxDropdownWidth}px`\n    } : {},\n    onMouseDown: onMouseDown\n  }, React.createElement(\"div\", {\n    className: clsx(styles['dropdown-content-wrapper'], !header && !children && styles['is-empty'], isRefresh && styles.refresh)\n  }, React.createElement(\"div\", {\n    ref: verticalContainerRef,\n    className: styles['dropdown-content']\n  }, React.createElement(DropdownContextProvider, {\n    position: position\n  }, header, children, footer))));\n};\nconst Dropdown = _ref3 => {\n  let {\n    children,\n    trigger,\n    open,\n    onDropdownClose,\n    onMouseDown,\n    header,\n    footer,\n    dropdownId,\n    stretchTriggerHeight = false,\n    stretchWidth = true,\n    stretchHeight = false,\n    stretchToTriggerWidth = true,\n    stretchBeyondTriggerWidth = false,\n    expandToViewport = false,\n    preferCenter = false,\n    interior = false,\n    minWidth,\n    scrollable = true,\n    loopFocus = expandToViewport,\n    onFocus,\n    onBlur,\n    contentKey,\n    dropdownContentId,\n    dropdownContentRole,\n    ariaLabelledby,\n    ariaDescribedby\n  } = _ref3;\n  const wrapperRef = useRef(null);\n  const triggerRef = useRef(null);\n  const dropdownRef = useRef(null);\n  const dropdownContainerRef = useRef(null);\n  const verticalContainerRef = useRef(null);\n  // To keep track of the initial position (drop up/down) which is kept the same during fixed repositioning\n  const fixedPosition = useRef(null);\n  const isRefresh = useVisualRefresh();\n  const dropdownClasses = usePortalModeClasses(triggerRef);\n  const [position, setPosition] = useState('bottom-right');\n  const isMobile = useMobile();\n  const setDropdownPosition = (position, triggerBox, target, verticalContainer) => {\n    const entireWidth = !interior && stretchWidth;\n    if (!stretchWidth) {\n      // 1px offset for dropdowns where the dropdown itself needs a border, rather than on the items\n      verticalContainer.style.maxBlockSize = `${parseInt(position.blockSize) + 1}px`;\n    } else {\n      verticalContainer.style.maxBlockSize = position.blockSize;\n    }\n    if (entireWidth && !expandToViewport) {\n      if (stretchToTriggerWidth) {\n        target.classList.add(styles['occupy-entire-width']);\n      }\n    } else {\n      target.style.inlineSize = position.inlineSize;\n    }\n    // Using styles for main dropdown to adjust its position as preferred alternative\n    if (position.dropBlockStart && !interior) {\n      target.classList.add(styles['dropdown-drop-up']);\n      if (!expandToViewport) {\n        target.style.insetBlockEnd = '100%';\n      }\n    } else {\n      target.classList.remove(styles['dropdown-drop-up']);\n    }\n    target.classList.add(position.dropInlineStart ? styles['dropdown-drop-left'] : styles['dropdown-drop-right']);\n    if (position.insetInlineStart && position.insetInlineStart !== 'auto') {\n      target.style.insetInlineStart = position.insetInlineStart;\n    }\n    // Position normal overflow dropdowns with fixed positioning relative to viewport\n    if (expandToViewport && !interior) {\n      applyDropdownPositionRelativeToViewport({\n        position,\n        dropdownElement: target,\n        triggerRect: triggerBox,\n        isMobile\n      });\n      // Keep track of the initial dropdown position and direction.\n      // Dropdown direction doesn't need to change as the user scrolls, just needs to stay attached to the trigger.\n      fixedPosition.current = position;\n      return;\n    }\n    // For an interior dropdown (the fly out) we need exact values for positioning\n    // and classes are not enough\n    // usage of relative position is impossible due to overwrite of overflow-x\n    if (interior && isInteriorPosition(position)) {\n      if (position.dropBlockStart) {\n        target.style.insetBlockEnd = position.insetBlockEnd;\n      } else {\n        target.style.insetBlockStart = position.insetBlockStart;\n      }\n      target.style.insetInlineStart = position.insetInlineStart;\n    }\n    if (position.dropBlockStart && position.dropInlineStart) {\n      setPosition('top-left');\n    } else if (position.dropBlockStart) {\n      setPosition('top-right');\n    } else if (position.dropInlineStart) {\n      setPosition('bottom-left');\n    } else {\n      setPosition('bottom-right');\n    }\n  };\n  const isOutsideDropdown = element => (!wrapperRef.current || !nodeBelongs(wrapperRef.current, element)) && (!dropdownContainerRef.current || !nodeBelongs(dropdownContainerRef.current, element));\n  const focusHandler = event => {\n    if (!event.relatedTarget || isOutsideDropdown(event.relatedTarget)) {\n      fireNonCancelableEvent(onFocus, event);\n    }\n  };\n  const blurHandler = event => {\n    if (!event.relatedTarget || isOutsideDropdown(event.relatedTarget)) {\n      fireNonCancelableEvent(onBlur, event);\n    }\n  };\n  // Prevent the dropdown width from stretching beyond the trigger width\n  // if that is going to cause the dropdown to be cropped because of overflow\n  const fixStretching = () => {\n    const classNameToRemove = styles['stretch-beyond-trigger-width'];\n    if (open && stretchBeyondTriggerWidth && dropdownRef.current && triggerRef.current && dropdownRef.current.classList.contains(classNameToRemove) && !hasEnoughSpaceToStretchBeyondTriggerWidth({\n      triggerElement: triggerRef.current,\n      dropdownElement: dropdownRef.current,\n      desiredMinWidth: minWidth,\n      expandToViewport,\n      stretchWidth,\n      stretchHeight,\n      isMobile\n    })) {\n      dropdownRef.current.classList.remove(classNameToRemove);\n    }\n  };\n  useResizeObserver(() => dropdownRef.current, fixStretching);\n  useLayoutEffect(() => {\n    const onDropdownOpen = () => {\n      if (open && dropdownRef.current && triggerRef.current && verticalContainerRef.current) {\n        // calculate scroll width only for dropdowns that has a scrollbar and ignore it for date picker components\n        if (scrollable) {\n          dropdownRef.current.classList.add(styles.nowrap);\n        }\n        setDropdownPosition(...calculatePosition(dropdownRef.current, triggerRef.current, verticalContainerRef.current, interior, expandToViewport, preferCenter, stretchWidth, stretchHeight, isMobile, minWidth, stretchBeyondTriggerWidth), dropdownRef.current, verticalContainerRef.current);\n        if (scrollable) {\n          dropdownRef.current.classList.remove(styles.nowrap);\n        }\n      }\n    };\n    onDropdownOpen();\n    if (open) {\n      // window may scroll when dropdown opens, for example when soft keyboard shows up\n      window.addEventListener('scroll', onDropdownOpen);\n      // only listen to window scroll within very short time after the dropdown opens\n      // do not want to interfere dropdown position on scroll afterwards\n      const timeoutId = setTimeout(() => {\n        window.removeEventListener('scroll', onDropdownOpen);\n      }, 500);\n      return () => {\n        clearTimeout(timeoutId);\n        window.removeEventListener('scroll', onDropdownOpen);\n      };\n    }\n    // See AWSUI-13040\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [open, dropdownRef, triggerRef, verticalContainerRef, interior, stretchWidth, isMobile, contentKey]);\n  // subscribe to outside click\n  useEffect(() => {\n    if (!open) {\n      return;\n    }\n    const clickListener = event => {\n      // Since the listener is registered on the window, `event.target` will incorrectly point at the\n      // shadow root if the component is rendered inside shadow DOM.\n      const target = event.composedPath ? event.composedPath()[0] : event.target;\n      if (!nodeBelongs(dropdownRef.current, target) && !nodeBelongs(triggerRef.current, target)) {\n        fireNonCancelableEvent(onDropdownClose);\n      }\n    };\n    window.addEventListener('click', clickListener, true);\n    return () => {\n      window.removeEventListener('click', clickListener, true);\n    };\n  }, [open, onDropdownClose]);\n  // sync dropdown position on scroll and resize\n  useLayoutEffect(() => {\n    if (!expandToViewport || !open) {\n      return;\n    }\n    const updateDropdownPosition = () => {\n      if (triggerRef.current && dropdownRef.current && verticalContainerRef.current && fixedPosition.current) {\n        applyDropdownPositionRelativeToViewport({\n          position: fixedPosition.current,\n          dropdownElement: dropdownRef.current,\n          triggerRect: getLogicalBoundingClientRect(triggerRef.current),\n          isMobile\n        });\n      }\n    };\n    updateDropdownPosition();\n    const controller = new AbortController();\n    window.addEventListener('scroll', updateDropdownPosition, {\n      capture: true,\n      signal: controller.signal\n    });\n    window.addEventListener('resize', updateDropdownPosition, {\n      capture: true,\n      signal: controller.signal\n    });\n    return () => {\n      controller.abort();\n    };\n  }, [open, expandToViewport, isMobile]);\n  const referrerId = useUniqueId();\n  return React.createElement(\"div\", {\n    className: clsx(styles.root, interior && styles.interior, stretchTriggerHeight && styles['stretch-trigger-height']),\n    ref: wrapperRef,\n    onFocus: focusHandler,\n    onBlur: blurHandler\n  }, React.createElement(\"div\", {\n    id: referrerId,\n    className: clsx(stretchTriggerHeight && styles['stretch-trigger-height']),\n    ref: triggerRef\n  }, trigger), React.createElement(TabTrap, {\n    focusNextCallback: () => {\n      var _a;\n      return dropdownRef.current && ((_a = getFirstFocusable(dropdownRef.current)) === null || _a === void 0 ? void 0 : _a.focus());\n    },\n    disabled: !open || !loopFocus\n  }), React.createElement(DropdownContainer, {\n    triggerRef: triggerRef,\n    renderWithPortal: expandToViewport && !interior,\n    id: dropdownId,\n    referrerId: referrerId,\n    open: open\n  }, React.createElement(Transition, {\n    in: open !== null && open !== void 0 ? open : false,\n    exit: false\n  }, (state, ref) => React.createElement(\"div\", {\n    ref: dropdownContainerRef\n  }, React.createElement(TabTrap, {\n    focusNextCallback: () => {\n      var _a;\n      return triggerRef.current && ((_a = getLastFocusable(triggerRef.current)) === null || _a === void 0 ? void 0 : _a.focus());\n    },\n    disabled: !open || !loopFocus\n  }), React.createElement(TransitionContent, {\n    state: state,\n    transitionRef: ref,\n    dropdownClasses: dropdownClasses,\n    open: open,\n    stretchWidth: stretchWidth,\n    interior: interior,\n    header: header,\n    expandToViewport: expandToViewport,\n    stretchBeyondTriggerWidth: stretchBeyondTriggerWidth,\n    footer: footer,\n    onMouseDown: onMouseDown,\n    isRefresh: isRefresh,\n    dropdownRef: dropdownRef,\n    verticalContainerRef: verticalContainerRef,\n    position: position,\n    id: dropdownContentId,\n    role: dropdownContentRole,\n    ariaLabelledby: ariaLabelledby,\n    ariaDescribedby: ariaDescribedby\n  }, children), React.createElement(TabTrap, {\n    focusNextCallback: () => {\n      var _a;\n      return triggerRef.current && ((_a = getFirstFocusable(triggerRef.current)) === null || _a === void 0 ? void 0 : _a.focus());\n    },\n    disabled: !open || !loopFocus\n  })))));\n};\nconst isInteriorPosition = position => position.insetBlockEnd !== undefined;\nexport default Dropdown;","map":{"version":3,"names":["React","useEffect","useLayoutEffect","useRef","useState","createPortal","clsx","useMergeRefs","useResizeObserver","useUniqueId","getLogicalBoundingClientRect","fireNonCancelableEvent","customCssProps","useMobile","usePortalModeClasses","useVisualRefresh","nodeBelongs","getFirstFocusable","getLastFocusable","TabTrap","Transition","DropdownContextProvider","calculatePosition","defaultMaxDropdownWidth","hasEnoughSpaceToStretchBeyondTriggerWidth","applyDropdownPositionRelativeToViewport","styles","DropdownContainer","_ref","triggerRef","children","renderWithPortal","id","referrerId","open","createElement","Fragment","currentDocument","_b","_a","current","ownerDocument","document","body","TransitionContent","_ref2","state","transitionRef","dropdownClasses","stretchWidth","interior","isRefresh","dropdownRef","verticalContainerRef","expandToViewport","stretchBeyondTriggerWidth","header","footer","position","onMouseDown","role","ariaLabelledby","ariaDescribedby","contentRef","className","dropdown","refresh","ref","style","dropdownDefaultMaxWidth","Dropdown","_ref3","trigger","onDropdownClose","dropdownId","stretchTriggerHeight","stretchHeight","stretchToTriggerWidth","preferCenter","minWidth","scrollable","loopFocus","onFocus","onBlur","contentKey","dropdownContentId","dropdownContentRole","wrapperRef","dropdownContainerRef","fixedPosition","setPosition","isMobile","setDropdownPosition","triggerBox","target","verticalContainer","entireWidth","maxBlockSize","parseInt","blockSize","classList","add","inlineSize","dropBlockStart","insetBlockEnd","remove","dropInlineStart","insetInlineStart","dropdownElement","triggerRect","isInteriorPosition","insetBlockStart","isOutsideDropdown","element","focusHandler","event","relatedTarget","blurHandler","fixStretching","classNameToRemove","contains","triggerElement","desiredMinWidth","onDropdownOpen","nowrap","window","addEventListener","timeoutId","setTimeout","removeEventListener","clearTimeout","clickListener","composedPath","updateDropdownPosition","controller","AbortController","capture","signal","abort","root","focusNextCallback","focus","disabled","in","exit","undefined"],"sources":["/Users/naman/Desktop/Portfolio/react-portfolio/node_modules/src/internal/components/dropdown/index.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useEffect, useLayoutEffect, useRef, useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport clsx from 'clsx';\n\nimport { useMergeRefs, useResizeObserver, useUniqueId } from '@cloudscape-design/component-toolkit/internal';\nimport { getLogicalBoundingClientRect } from '@cloudscape-design/component-toolkit/internal';\n\nimport { fireNonCancelableEvent } from '../../events';\nimport customCssProps from '../../generated/custom-css-properties';\nimport { useMobile } from '../../hooks/use-mobile';\nimport { usePortalModeClasses } from '../../hooks/use-portal-mode-classes';\nimport { useVisualRefresh } from '../../hooks/use-visual-mode';\nimport { nodeBelongs } from '../../utils/node-belongs';\nimport { getFirstFocusable, getLastFocusable } from '../focus-lock/utils.js';\nimport TabTrap from '../tab-trap/index.js';\nimport { Transition, TransitionStatus } from '../transition';\nimport { DropdownContextProvider, DropdownContextProviderProps } from './context';\nimport {\n  calculatePosition,\n  defaultMaxDropdownWidth,\n  DropdownPosition,\n  hasEnoughSpaceToStretchBeyondTriggerWidth,\n  InteriorDropdownPosition,\n} from './dropdown-fit-handler';\nimport { applyDropdownPositionRelativeToViewport, LogicalDOMRect } from './dropdown-position';\nimport { DropdownProps } from './interfaces';\n\nimport styles from './styles.css.js';\n\ninterface DropdownContainerProps {\n  triggerRef: React.RefObject<HTMLElement>;\n  children?: React.ReactNode;\n  renderWithPortal: boolean;\n  id?: string;\n  referrerId?: string;\n  open?: boolean;\n}\n\nconst DropdownContainer = ({\n  triggerRef,\n  children,\n  renderWithPortal,\n  id,\n  referrerId,\n  open,\n}: DropdownContainerProps) => {\n  if (!renderWithPortal) {\n    return <>{children}</>;\n  }\n  if (!open) {\n    return null;\n  }\n  const currentDocument = triggerRef.current?.ownerDocument ?? document;\n  return createPortal(\n    <div id={id} data-awsui-referrer-id={referrerId}>\n      {children}\n    </div>,\n    currentDocument.body\n  );\n};\n\ninterface TransitionContentProps {\n  state: TransitionStatus;\n  transitionRef: React.MutableRefObject<any>;\n  dropdownClasses: string;\n  stretchWidth: boolean;\n  interior: boolean;\n  isRefresh: boolean;\n  dropdownRef: React.RefObject<HTMLDivElement>;\n  verticalContainerRef: React.RefObject<HTMLDivElement>;\n  expandToViewport?: boolean;\n  stretchBeyondTriggerWidth?: boolean;\n  header?: React.ReactNode;\n  children?: React.ReactNode;\n  footer?: React.ReactNode;\n  position?: DropdownContextProviderProps['position'];\n  open?: boolean;\n  onMouseDown?: React.MouseEventHandler<Element>;\n  id?: string;\n  role?: string;\n  ariaLabelledby?: string;\n  ariaDescribedby?: string;\n}\n\nconst TransitionContent = ({\n  state,\n  transitionRef,\n  dropdownClasses,\n  stretchWidth,\n  interior,\n  isRefresh,\n  dropdownRef,\n  verticalContainerRef,\n  expandToViewport,\n  stretchBeyondTriggerWidth,\n  header,\n  children,\n  footer,\n  position,\n  open,\n  onMouseDown,\n  id,\n  role,\n  ariaLabelledby,\n  ariaDescribedby,\n}: TransitionContentProps) => {\n  const contentRef = useMergeRefs(dropdownRef, transitionRef);\n  return (\n    <div\n      className={clsx(styles.dropdown, dropdownClasses, {\n        [styles.open]: open,\n        [styles['with-limited-width']]: !stretchWidth,\n        [styles['hide-block-border']]: stretchWidth,\n        [styles.interior]: interior,\n        [styles.refresh]: isRefresh,\n        [styles['use-portal']]: expandToViewport && !interior,\n        [styles['stretch-beyond-trigger-width']]: stretchBeyondTriggerWidth,\n      })}\n      ref={contentRef}\n      id={id}\n      role={role}\n      aria-labelledby={ariaLabelledby}\n      aria-describedby={ariaDescribedby}\n      data-open={open}\n      data-animating={state !== 'exited'}\n      aria-hidden={!open}\n      style={\n        stretchBeyondTriggerWidth ? { [customCssProps.dropdownDefaultMaxWidth]: `${defaultMaxDropdownWidth}px` } : {}\n      }\n      onMouseDown={onMouseDown}\n    >\n      <div\n        className={clsx(\n          styles['dropdown-content-wrapper'],\n          !header && !children && styles['is-empty'],\n          isRefresh && styles.refresh\n        )}\n      >\n        <div ref={verticalContainerRef} className={styles['dropdown-content']}>\n          <DropdownContextProvider position={position}>\n            {header}\n            {children}\n            {footer}\n          </DropdownContextProvider>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst Dropdown = ({\n  children,\n  trigger,\n  open,\n  onDropdownClose,\n  onMouseDown,\n  header,\n  footer,\n  dropdownId,\n  stretchTriggerHeight = false,\n  stretchWidth = true,\n  stretchHeight = false,\n  stretchToTriggerWidth = true,\n  stretchBeyondTriggerWidth = false,\n  expandToViewport = false,\n  preferCenter = false,\n  interior = false,\n  minWidth,\n  scrollable = true,\n  loopFocus = expandToViewport,\n  onFocus,\n  onBlur,\n  contentKey,\n  dropdownContentId,\n  dropdownContentRole,\n  ariaLabelledby,\n  ariaDescribedby,\n}: DropdownProps) => {\n  const wrapperRef = useRef<HTMLDivElement | null>(null);\n  const triggerRef = useRef<HTMLDivElement | null>(null);\n  const dropdownRef = useRef<HTMLDivElement | null>(null);\n  const dropdownContainerRef = useRef<HTMLDivElement | null>(null);\n  const verticalContainerRef = useRef<HTMLDivElement>(null);\n  // To keep track of the initial position (drop up/down) which is kept the same during fixed repositioning\n  const fixedPosition = useRef<DropdownPosition | null>(null);\n\n  const isRefresh = useVisualRefresh();\n\n  const dropdownClasses = usePortalModeClasses(triggerRef);\n  const [position, setPosition] = useState<DropdownContextProviderProps['position']>('bottom-right');\n\n  const isMobile = useMobile();\n\n  const setDropdownPosition = (\n    position: DropdownPosition | InteriorDropdownPosition,\n    triggerBox: LogicalDOMRect,\n    target: HTMLDivElement,\n    verticalContainer: HTMLDivElement\n  ) => {\n    const entireWidth = !interior && stretchWidth;\n    if (!stretchWidth) {\n      // 1px offset for dropdowns where the dropdown itself needs a border, rather than on the items\n      verticalContainer.style.maxBlockSize = `${parseInt(position.blockSize) + 1}px`;\n    } else {\n      verticalContainer.style.maxBlockSize = position.blockSize;\n    }\n\n    if (entireWidth && !expandToViewport) {\n      if (stretchToTriggerWidth) {\n        target.classList.add(styles['occupy-entire-width']);\n      }\n    } else {\n      target.style.inlineSize = position.inlineSize;\n    }\n\n    // Using styles for main dropdown to adjust its position as preferred alternative\n    if (position.dropBlockStart && !interior) {\n      target.classList.add(styles['dropdown-drop-up']);\n      if (!expandToViewport) {\n        target.style.insetBlockEnd = '100%';\n      }\n    } else {\n      target.classList.remove(styles['dropdown-drop-up']);\n    }\n    target.classList.add(position.dropInlineStart ? styles['dropdown-drop-left'] : styles['dropdown-drop-right']);\n\n    if (position.insetInlineStart && position.insetInlineStart !== 'auto') {\n      target.style.insetInlineStart = position.insetInlineStart;\n    }\n\n    // Position normal overflow dropdowns with fixed positioning relative to viewport\n    if (expandToViewport && !interior) {\n      applyDropdownPositionRelativeToViewport({\n        position,\n        dropdownElement: target,\n        triggerRect: triggerBox,\n        isMobile,\n      });\n      // Keep track of the initial dropdown position and direction.\n      // Dropdown direction doesn't need to change as the user scrolls, just needs to stay attached to the trigger.\n      fixedPosition.current = position;\n      return;\n    }\n\n    // For an interior dropdown (the fly out) we need exact values for positioning\n    // and classes are not enough\n    // usage of relative position is impossible due to overwrite of overflow-x\n    if (interior && isInteriorPosition(position)) {\n      if (position.dropBlockStart) {\n        target.style.insetBlockEnd = position.insetBlockEnd;\n      } else {\n        target.style.insetBlockStart = position.insetBlockStart;\n      }\n      target.style.insetInlineStart = position.insetInlineStart;\n    }\n\n    if (position.dropBlockStart && position.dropInlineStart) {\n      setPosition('top-left');\n    } else if (position.dropBlockStart) {\n      setPosition('top-right');\n    } else if (position.dropInlineStart) {\n      setPosition('bottom-left');\n    } else {\n      setPosition('bottom-right');\n    }\n  };\n\n  const isOutsideDropdown = (element: Element) =>\n    (!wrapperRef.current || !nodeBelongs(wrapperRef.current, element)) &&\n    (!dropdownContainerRef.current || !nodeBelongs(dropdownContainerRef.current, element));\n\n  const focusHandler = (event: React.FocusEvent) => {\n    if (!event.relatedTarget || isOutsideDropdown(event.relatedTarget)) {\n      fireNonCancelableEvent(onFocus, event);\n    }\n  };\n\n  const blurHandler = (event: React.FocusEvent) => {\n    if (!event.relatedTarget || isOutsideDropdown(event.relatedTarget)) {\n      fireNonCancelableEvent(onBlur, event);\n    }\n  };\n\n  // Prevent the dropdown width from stretching beyond the trigger width\n  // if that is going to cause the dropdown to be cropped because of overflow\n  const fixStretching = () => {\n    const classNameToRemove = styles['stretch-beyond-trigger-width'];\n    if (\n      open &&\n      stretchBeyondTriggerWidth &&\n      dropdownRef.current &&\n      triggerRef.current &&\n      dropdownRef.current.classList.contains(classNameToRemove) &&\n      !hasEnoughSpaceToStretchBeyondTriggerWidth({\n        triggerElement: triggerRef.current,\n        dropdownElement: dropdownRef.current,\n        desiredMinWidth: minWidth,\n        expandToViewport,\n        stretchWidth,\n        stretchHeight,\n        isMobile,\n      })\n    ) {\n      dropdownRef.current.classList.remove(classNameToRemove);\n    }\n  };\n\n  useResizeObserver(() => dropdownRef.current, fixStretching);\n\n  useLayoutEffect(() => {\n    const onDropdownOpen = () => {\n      if (open && dropdownRef.current && triggerRef.current && verticalContainerRef.current) {\n        // calculate scroll width only for dropdowns that has a scrollbar and ignore it for date picker components\n        if (scrollable) {\n          dropdownRef.current.classList.add(styles.nowrap);\n        }\n        setDropdownPosition(\n          ...calculatePosition(\n            dropdownRef.current,\n            triggerRef.current,\n            verticalContainerRef.current,\n            interior,\n            expandToViewport,\n            preferCenter,\n            stretchWidth,\n            stretchHeight,\n            isMobile,\n            minWidth,\n            stretchBeyondTriggerWidth\n          ),\n          dropdownRef.current,\n          verticalContainerRef.current\n        );\n        if (scrollable) {\n          dropdownRef.current.classList.remove(styles.nowrap);\n        }\n      }\n    };\n    onDropdownOpen();\n\n    if (open) {\n      // window may scroll when dropdown opens, for example when soft keyboard shows up\n      window.addEventListener('scroll', onDropdownOpen);\n      // only listen to window scroll within very short time after the dropdown opens\n      // do not want to interfere dropdown position on scroll afterwards\n      const timeoutId = setTimeout(() => {\n        window.removeEventListener('scroll', onDropdownOpen);\n      }, 500);\n\n      return () => {\n        clearTimeout(timeoutId);\n        window.removeEventListener('scroll', onDropdownOpen);\n      };\n    }\n    // See AWSUI-13040\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [open, dropdownRef, triggerRef, verticalContainerRef, interior, stretchWidth, isMobile, contentKey]);\n\n  // subscribe to outside click\n  useEffect(() => {\n    if (!open) {\n      return;\n    }\n    const clickListener = (event: MouseEvent) => {\n      // Since the listener is registered on the window, `event.target` will incorrectly point at the\n      // shadow root if the component is rendered inside shadow DOM.\n      const target = event.composedPath ? event.composedPath()[0] : event.target;\n      if (!nodeBelongs(dropdownRef.current, target) && !nodeBelongs(triggerRef.current, target)) {\n        fireNonCancelableEvent(onDropdownClose);\n      }\n    };\n    window.addEventListener('click', clickListener, true);\n\n    return () => {\n      window.removeEventListener('click', clickListener, true);\n    };\n  }, [open, onDropdownClose]);\n\n  // sync dropdown position on scroll and resize\n  useLayoutEffect(() => {\n    if (!expandToViewport || !open) {\n      return;\n    }\n    const updateDropdownPosition = () => {\n      if (triggerRef.current && dropdownRef.current && verticalContainerRef.current && fixedPosition.current) {\n        applyDropdownPositionRelativeToViewport({\n          position: fixedPosition.current,\n          dropdownElement: dropdownRef.current,\n          triggerRect: getLogicalBoundingClientRect(triggerRef.current),\n          isMobile,\n        });\n      }\n    };\n\n    updateDropdownPosition();\n\n    const controller = new AbortController();\n    window.addEventListener('scroll', updateDropdownPosition, { capture: true, signal: controller.signal });\n    window.addEventListener('resize', updateDropdownPosition, { capture: true, signal: controller.signal });\n    return () => {\n      controller.abort();\n    };\n  }, [open, expandToViewport, isMobile]);\n\n  const referrerId = useUniqueId();\n\n  return (\n    <div\n      className={clsx(\n        styles.root,\n        interior && styles.interior,\n        stretchTriggerHeight && styles['stretch-trigger-height']\n      )}\n      ref={wrapperRef}\n      onFocus={focusHandler}\n      onBlur={blurHandler}\n    >\n      <div id={referrerId} className={clsx(stretchTriggerHeight && styles['stretch-trigger-height'])} ref={triggerRef}>\n        {trigger}\n      </div>\n\n      <TabTrap\n        focusNextCallback={() => dropdownRef.current && getFirstFocusable(dropdownRef.current)?.focus()}\n        disabled={!open || !loopFocus}\n      />\n\n      <DropdownContainer\n        triggerRef={triggerRef}\n        renderWithPortal={expandToViewport && !interior}\n        id={dropdownId}\n        referrerId={referrerId}\n        open={open}\n      >\n        <Transition in={open ?? false} exit={false}>\n          {(state, ref) => (\n            <div ref={dropdownContainerRef}>\n              <TabTrap\n                focusNextCallback={() => triggerRef.current && getLastFocusable(triggerRef.current)?.focus()}\n                disabled={!open || !loopFocus}\n              />\n\n              <TransitionContent\n                state={state}\n                transitionRef={ref}\n                dropdownClasses={dropdownClasses}\n                open={open}\n                stretchWidth={stretchWidth}\n                interior={interior}\n                header={header}\n                expandToViewport={expandToViewport}\n                stretchBeyondTriggerWidth={stretchBeyondTriggerWidth}\n                footer={footer}\n                onMouseDown={onMouseDown}\n                isRefresh={isRefresh}\n                dropdownRef={dropdownRef}\n                verticalContainerRef={verticalContainerRef}\n                position={position}\n                id={dropdownContentId}\n                role={dropdownContentRole}\n                ariaLabelledby={ariaLabelledby}\n                ariaDescribedby={ariaDescribedby}\n              >\n                {children}\n              </TransitionContent>\n\n              <TabTrap\n                focusNextCallback={() => triggerRef.current && getFirstFocusable(triggerRef.current)?.focus()}\n                disabled={!open || !loopFocus}\n              />\n            </div>\n          )}\n        </Transition>\n      </DropdownContainer>\n    </div>\n  );\n};\n\nconst isInteriorPosition = (\n  position: DropdownPosition | InteriorDropdownPosition\n): position is InteriorDropdownPosition => (position as InteriorDropdownPosition).insetBlockEnd !== undefined;\n\nexport default Dropdown;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}