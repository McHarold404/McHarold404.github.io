{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n'use client';\n\nimport { __rest } from \"tslib\";\nimport React from 'react';\nimport { getAnalyticsMetadataAttribute } from '@cloudscape-design/component-toolkit/internal/analytics-metadata';\nimport useBaseComponent from '../internal/hooks/use-base-component';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport { getExternalProps } from '../internal/utils/external-props';\nimport InternalAutosuggest from './internal';\nconst Autosuggest = React.forwardRef((_a, ref) => {\n  var {\n      filteringType = 'auto',\n      statusType = 'finished',\n      disableBrowserAutocorrect = false\n    } = _a,\n    props = __rest(_a, [\"filteringType\", \"statusType\", \"disableBrowserAutocorrect\"]);\n  const baseComponentProps = useBaseComponent('Autosuggest', {\n    props: {\n      autoFocus: props.autoFocus,\n      disableBrowserAutocorrect,\n      expandToViewport: props.expandToViewport,\n      filteringType,\n      readOnly: props.readOnly,\n      virtualScroll: props.virtualScroll\n    }\n  });\n  const componentAnalyticsMetadata = {\n    name: 'awsui.Autosuggest',\n    label: 'input',\n    properties: {\n      disabled: `${!!props.disabled}`,\n      value: props.value || ''\n    }\n  };\n  const externalProps = getExternalProps(props);\n  return React.createElement(InternalAutosuggest, Object.assign({\n    filteringType: filteringType,\n    statusType: statusType,\n    disableBrowserAutocorrect: disableBrowserAutocorrect\n  }, externalProps, baseComponentProps, {\n    ref: ref\n  }, getAnalyticsMetadataAttribute({\n    component: componentAnalyticsMetadata\n  })));\n});\napplyDisplayName(Autosuggest, 'Autosuggest');\nexport default Autosuggest;","map":{"version":3,"names":["React","getAnalyticsMetadataAttribute","useBaseComponent","applyDisplayName","getExternalProps","InternalAutosuggest","Autosuggest","forwardRef","_a","ref","filteringType","statusType","disableBrowserAutocorrect","props","__rest","baseComponentProps","autoFocus","expandToViewport","readOnly","virtualScroll","componentAnalyticsMetadata","name","label","properties","disabled","value","externalProps","createElement","Object","assign","component"],"sources":["/Users/naman/Desktop/Portfolio/react-portfolio/node_modules/src/autosuggest/index.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n'use client';\nimport React from 'react';\n\nimport { getAnalyticsMetadataAttribute } from '@cloudscape-design/component-toolkit/internal/analytics-metadata';\n\nimport useBaseComponent from '../internal/hooks/use-base-component';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport { getExternalProps } from '../internal/utils/external-props';\nimport { GeneratedAnalyticsMetadataAutosuggestComponent } from './analytics-metadata/interfaces';\nimport { AutosuggestProps } from './interfaces';\nimport InternalAutosuggest from './internal';\n\nexport { AutosuggestProps };\n\nconst Autosuggest = React.forwardRef(\n  (\n    { filteringType = 'auto', statusType = 'finished', disableBrowserAutocorrect = false, ...props }: AutosuggestProps,\n    ref: React.Ref<AutosuggestProps.Ref>\n  ) => {\n    const baseComponentProps = useBaseComponent('Autosuggest', {\n      props: {\n        autoFocus: props.autoFocus,\n        disableBrowserAutocorrect,\n        expandToViewport: props.expandToViewport,\n        filteringType,\n        readOnly: props.readOnly,\n        virtualScroll: props.virtualScroll,\n      },\n    });\n\n    const componentAnalyticsMetadata: GeneratedAnalyticsMetadataAutosuggestComponent = {\n      name: 'awsui.Autosuggest',\n      label: 'input',\n      properties: {\n        disabled: `${!!props.disabled}`,\n        value: props.value || '',\n      },\n    };\n\n    const externalProps = getExternalProps(props);\n    return (\n      <InternalAutosuggest\n        filteringType={filteringType}\n        statusType={statusType}\n        disableBrowserAutocorrect={disableBrowserAutocorrect}\n        {...externalProps}\n        {...baseComponentProps}\n        ref={ref}\n        {...getAnalyticsMetadataAttribute({ component: componentAnalyticsMetadata })}\n      />\n    );\n  }\n);\n\napplyDisplayName(Autosuggest, 'Autosuggest');\nexport default Autosuggest;\n"],"mappings":"AAAA;AACA;AACA,YAAY;;;AACZ,OAAOA,KAAK,MAAM,OAAO;AAEzB,SAASC,6BAA6B,QAAQ,kEAAkE;AAEhH,OAAOC,gBAAgB,MAAM,sCAAsC;AACnE,SAASC,gBAAgB,QAAQ,sCAAsC;AACvE,SAASC,gBAAgB,QAAQ,kCAAkC;AAGnE,OAAOC,mBAAmB,MAAM,YAAY;AAI5C,MAAMC,WAAW,GAAGN,KAAK,CAACO,UAAU,CAClC,CACEC,EAAkH,EAClHC,GAAoC,KAClC;MAFF;MAAEC,aAAa,GAAG,MAAM;MAAEC,UAAU,GAAG,UAAU;MAAEC,yBAAyB,GAAG;IAAK,IAAAJ,EAA8B;IAAzBK,KAAK,GAAAC,MAAA,CAAAN,EAAA,EAA9F,4DAAgG,CAAF;EAG9F,MAAMO,kBAAkB,GAAGb,gBAAgB,CAAC,aAAa,EAAE;IACzDW,KAAK,EAAE;MACLG,SAAS,EAAEH,KAAK,CAACG,SAAS;MAC1BJ,yBAAyB;MACzBK,gBAAgB,EAAEJ,KAAK,CAACI,gBAAgB;MACxCP,aAAa;MACbQ,QAAQ,EAAEL,KAAK,CAACK,QAAQ;MACxBC,aAAa,EAAEN,KAAK,CAACM;;GAExB,CAAC;EAEF,MAAMC,0BAA0B,GAAmD;IACjFC,IAAI,EAAE,mBAAmB;IACzBC,KAAK,EAAE,OAAO;IACdC,UAAU,EAAE;MACVC,QAAQ,EAAE,GAAG,CAAC,CAACX,KAAK,CAACW,QAAQ,EAAE;MAC/BC,KAAK,EAAEZ,KAAK,CAACY,KAAK,IAAI;;GAEzB;EAED,MAAMC,aAAa,GAAGtB,gBAAgB,CAACS,KAAK,CAAC;EAC7C,OACEb,KAAA,CAAA2B,aAAA,CAACtB,mBAAmB,EAAAuB,MAAA,CAAAC,MAAA;IAClBnB,aAAa,EAAEA,aAAa;IAC5BC,UAAU,EAAEA,UAAU;IACtBC,yBAAyB,EAAEA;EAAyB,GAChDc,aAAa,EACbX,kBAAkB;IACtBN,GAAG,EAAEA;EAAG,GACJR,6BAA6B,CAAC;IAAE6B,SAAS,EAAEV;EAA0B,CAAE,CAAC,EAC5E;AAEN,CAAC,CACF;AAEDjB,gBAAgB,CAACG,WAAW,EAAE,aAAa,CAAC;AAC5C,eAAeA,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}