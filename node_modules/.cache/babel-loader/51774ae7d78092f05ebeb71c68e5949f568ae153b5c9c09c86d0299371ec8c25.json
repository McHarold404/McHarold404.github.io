{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nexport class ItemsTree {\n  constructor(items, treeProps) {\n    var _this = this;\n    var _a;\n    this.size = 0;\n    this.hasNesting = false;\n    this.roots = new Array();\n    this.idToChildren = new Map();\n    this.filter = predicate => {\n      if (!this.hasNesting) {\n        this.items = this.items.filter(predicate);\n        this.size = this.items.length;\n      } else {\n        this.filterTree(predicate);\n      }\n      return this;\n    };\n    this.sort = comparator => {\n      if (!this.hasNesting) {\n        this.items = this.items.slice().sort(comparator);\n      } else {\n        this.sortTree(comparator);\n      }\n      return this;\n    };\n    this.getChildren = item => {\n      var _a;\n      return (_a = this.treeProps && this.idToChildren.get(this.treeProps.getId(item))) !== null && _a !== void 0 ? _a : [];\n    };\n    this.getItems = () => {\n      if (this.hasNesting) {\n        return this.roots;\n      }\n      return this.items;\n    };\n    this.getSize = () => {\n      return this.size;\n    };\n    this.filterTree = predicate => {\n      const filterNode = item => {\n        const children = this.getChildren(item);\n        const filteredChildren = children.filter(filterNode);\n        this.size -= children.length - filteredChildren.length;\n        this.setChildren(item, filteredChildren);\n        return predicate(item) || filteredChildren.length > 0;\n      };\n      const roots = this.roots;\n      this.roots = this.roots.filter(filterNode);\n      this.size -= roots.length - this.roots.length;\n    };\n    this.sortTree = comparator => {\n      const sortLevel = items => {\n        items.sort(comparator);\n        for (const item of items) {\n          sortLevel(this.getChildren(item));\n        }\n      };\n      sortLevel(this.roots);\n    };\n    this.size = items.length;\n    this.items = items;\n    this.treeProps = treeProps;\n    if (!treeProps) {\n      return;\n    }\n    // Assign item children.\n    for (const item of items) {\n      const parentId = treeProps.getParentId(item);\n      if (parentId === null) {\n        this.roots.push(item);\n      } else {\n        const children = (_a = this.idToChildren.get(parentId)) !== null && _a !== void 0 ? _a : [];\n        children.push(item);\n        this.idToChildren.set(parentId, children);\n        this.hasNesting = true;\n      }\n    }\n    // Assign item levels.\n    const traverse = function (item) {\n      let level = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n      var _a;\n      for (const child of (_a = _this.idToChildren.get(treeProps.getId(item))) !== null && _a !== void 0 ? _a : []) {\n        traverse(child, level + 1);\n      }\n    };\n    this.roots.forEach(root => traverse(root));\n  }\n  setChildren(item, children) {\n    if (this.treeProps) {\n      this.idToChildren.set(this.treeProps.getId(item), children);\n    }\n  }\n}","map":{"version":3,"names":["ItemsTree","constructor","items","treeProps","_this","_a","size","hasNesting","roots","Array","idToChildren","Map","filter","predicate","length","filterTree","sort","comparator","slice","sortTree","getChildren","item","get","getId","getItems","getSize","filterNode","children","filteredChildren","setChildren","sortLevel","parentId","getParentId","push","set","traverse","level","arguments","undefined","child","forEach","root"],"sources":["/Users/naman/Desktop/Portfolio/react-portfolio/node_modules/@cloudscape-design/collection-hooks/mjs/operations/items-tree.js"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nexport class ItemsTree {\n    constructor(items, treeProps) {\n        var _a;\n        this.size = 0;\n        this.hasNesting = false;\n        this.roots = new Array();\n        this.idToChildren = new Map();\n        this.filter = (predicate) => {\n            if (!this.hasNesting) {\n                this.items = this.items.filter(predicate);\n                this.size = this.items.length;\n            }\n            else {\n                this.filterTree(predicate);\n            }\n            return this;\n        };\n        this.sort = (comparator) => {\n            if (!this.hasNesting) {\n                this.items = this.items.slice().sort(comparator);\n            }\n            else {\n                this.sortTree(comparator);\n            }\n            return this;\n        };\n        this.getChildren = (item) => {\n            var _a;\n            return (_a = (this.treeProps && this.idToChildren.get(this.treeProps.getId(item)))) !== null && _a !== void 0 ? _a : [];\n        };\n        this.getItems = () => {\n            if (this.hasNesting) {\n                return this.roots;\n            }\n            return this.items;\n        };\n        this.getSize = () => {\n            return this.size;\n        };\n        this.filterTree = (predicate) => {\n            const filterNode = (item) => {\n                const children = this.getChildren(item);\n                const filteredChildren = children.filter(filterNode);\n                this.size -= children.length - filteredChildren.length;\n                this.setChildren(item, filteredChildren);\n                return predicate(item) || filteredChildren.length > 0;\n            };\n            const roots = this.roots;\n            this.roots = this.roots.filter(filterNode);\n            this.size -= roots.length - this.roots.length;\n        };\n        this.sortTree = (comparator) => {\n            const sortLevel = (items) => {\n                items.sort(comparator);\n                for (const item of items) {\n                    sortLevel(this.getChildren(item));\n                }\n            };\n            sortLevel(this.roots);\n        };\n        this.size = items.length;\n        this.items = items;\n        this.treeProps = treeProps;\n        if (!treeProps) {\n            return;\n        }\n        // Assign item children.\n        for (const item of items) {\n            const parentId = treeProps.getParentId(item);\n            if (parentId === null) {\n                this.roots.push(item);\n            }\n            else {\n                const children = (_a = this.idToChildren.get(parentId)) !== null && _a !== void 0 ? _a : [];\n                children.push(item);\n                this.idToChildren.set(parentId, children);\n                this.hasNesting = true;\n            }\n        }\n        // Assign item levels.\n        const traverse = (item, level = 1) => {\n            var _a;\n            for (const child of (_a = this.idToChildren.get(treeProps.getId(item))) !== null && _a !== void 0 ? _a : []) {\n                traverse(child, level + 1);\n            }\n        };\n        this.roots.forEach(root => traverse(root));\n    }\n    setChildren(item, children) {\n        if (this.treeProps) {\n            this.idToChildren.set(this.treeProps.getId(item), children);\n        }\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}