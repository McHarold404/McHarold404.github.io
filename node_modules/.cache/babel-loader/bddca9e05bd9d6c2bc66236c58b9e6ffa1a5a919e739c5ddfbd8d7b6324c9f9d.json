{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport formatDateIso from './format-date-iso';\nimport formatDateLocalized from './format-date-localized';\nimport { isIsoDateOnly, isIsoMonthOnly } from './is-iso-only';\nexport function formatDateTimeWithOffset(_ref) {\n  let {\n    date,\n    format,\n    hideTimeOffset,\n    timeOffset,\n    locale\n  } = _ref;\n  const isDateOnly = isIsoDateOnly(date);\n  const isMonthOnly = isIsoMonthOnly(date);\n  switch (format) {\n    case 'long-localized':\n      {\n        return formatDateLocalized({\n          date,\n          hideTimeOffset,\n          isDateOnly,\n          isMonthOnly,\n          locale,\n          timeOffset\n        });\n      }\n    default:\n      {\n        return formatDateIso({\n          date,\n          hideTimeOffset,\n          isDateOnly,\n          isMonthOnly,\n          timeOffset\n        });\n      }\n  }\n}","map":{"version":3,"names":["formatDateIso","formatDateLocalized","isIsoDateOnly","isIsoMonthOnly","formatDateTimeWithOffset","_ref","date","format","hideTimeOffset","timeOffset","locale","isDateOnly","isMonthOnly"],"sources":["/Users/naman/Desktop/Portfolio/react-portfolio/node_modules/src/internal/utils/date-time/format-date-time-with-offset.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { DateRangePickerProps } from '../../../date-range-picker/interfaces';\nimport formatDateIso from './format-date-iso';\nimport formatDateLocalized from './format-date-localized';\nimport { isIsoDateOnly, isIsoMonthOnly } from './is-iso-only';\n\nexport function formatDateTimeWithOffset({\n  date,\n  format,\n  hideTimeOffset,\n  timeOffset,\n  locale,\n}: {\n  date: string;\n  format: DateRangePickerProps.AbsoluteFormat;\n  hideTimeOffset?: boolean;\n  timeOffset?: number;\n  locale?: string;\n}) {\n  const isDateOnly = isIsoDateOnly(date);\n  const isMonthOnly = isIsoMonthOnly(date);\n  switch (format) {\n    case 'long-localized': {\n      return formatDateLocalized({ date, hideTimeOffset, isDateOnly, isMonthOnly, locale, timeOffset });\n    }\n    default: {\n      return formatDateIso({ date, hideTimeOffset, isDateOnly, isMonthOnly, timeOffset });\n    }\n  }\n}\n"],"mappings":"AAAA;AACA;AAGA,OAAOA,aAAa,MAAM,mBAAmB;AAC7C,OAAOC,mBAAmB,MAAM,yBAAyB;AACzD,SAASC,aAAa,EAAEC,cAAc,QAAQ,eAAe;AAE7D,OAAM,SAAUC,wBAAwBA,CAAAC,IAAA,EAYvC;EAAA,IAZwC;IACvCC,IAAI;IACJC,MAAM;IACNC,cAAc;IACdC,UAAU;IACVC;EAAM,CAOP,GAAAL,IAAA;EACC,MAAMM,UAAU,GAAGT,aAAa,CAACI,IAAI,CAAC;EACtC,MAAMM,WAAW,GAAGT,cAAc,CAACG,IAAI,CAAC;EACxC,QAAQC,MAAM;IACZ,KAAK,gBAAgB;MAAE;QACrB,OAAON,mBAAmB,CAAC;UAAEK,IAAI;UAAEE,cAAc;UAAEG,UAAU;UAAEC,WAAW;UAAEF,MAAM;UAAED;QAAU,CAAE,CAAC;;IAEnG;MAAS;QACP,OAAOT,aAAa,CAAC;UAAEM,IAAI;UAAEE,cAAc;UAAEG,UAAU;UAAEC,WAAW;UAAEH;QAAU,CAAE,CAAC;;;AAGzF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}