{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { forwardRef, useRef } from 'react';\nimport clsx from 'clsx';\nimport { useMergeRefs } from '@cloudscape-design/component-toolkit/internal';\nimport InternalIcon from '../../../icon/internal';\nimport { ResizeIcon } from './resize-icon';\nimport styles from './styles.css.js';\nimport testUtilsStyles from './test-classes/styles.css.js';\nconst DragHandleButton = forwardRef((_ref, ref) => {\n  let {\n    variant = 'drag-indicator',\n    size = 'normal',\n    active = false,\n    className,\n    ariaLabel,\n    ariaLabelledBy,\n    ariaDescribedby,\n    ariaValue,\n    disabled,\n    onPointerDown,\n    onKeyDown\n  } = _ref;\n  const dragHandleRefObject = useRef(null);\n  const iconProps = (() => {\n    const shared = {\n      variant: disabled ? 'disabled' : undefined,\n      size\n    };\n    switch (variant) {\n      case 'drag-indicator':\n        return Object.assign(Object.assign({}, shared), {\n          name: 'drag-indicator'\n        });\n      case 'resize-area':\n        return Object.assign(Object.assign({}, shared), {\n          name: 'resize-area'\n        });\n      case 'resize-horizontal':\n        return Object.assign(Object.assign({}, shared), {\n          svg: React.createElement(ResizeIcon, {\n            variant: \"horizontal\"\n          })\n        });\n      case 'resize-vertical':\n        return Object.assign(Object.assign({}, shared), {\n          svg: React.createElement(ResizeIcon, {\n            variant: \"vertical\"\n          })\n        });\n    }\n  })();\n  return (\n    // We need to use a div with button role instead of a button\n    // so that Safari will focus on it when clicking it.\n    // (See https://bugs.webkit.org/show_bug.cgi?id=22261)\n    // Otherwise, we can't reliably catch keyboard events coming from the handle\n    // when it is being dragged.\n    React.createElement(\"div\", {\n      ref: useMergeRefs(ref, dragHandleRefObject),\n      role: ariaValue ? 'slider' : 'application',\n      tabIndex: 0,\n      className: clsx(className, styles.handle, testUtilsStyles.root, styles[`handle-${variant}`], styles[`handle-size-${size}`], disabled && styles['handle-disabled'], active && styles.active),\n      \"aria-label\": ariaLabel,\n      \"aria-labelledby\": ariaLabelledBy,\n      \"aria-describedby\": ariaDescribedby,\n      \"aria-disabled\": disabled,\n      \"aria-valuemax\": ariaValue === null || ariaValue === void 0 ? void 0 : ariaValue.valueMax,\n      \"aria-valuemin\": ariaValue === null || ariaValue === void 0 ? void 0 : ariaValue.valueMin,\n      \"aria-valuenow\": ariaValue === null || ariaValue === void 0 ? void 0 : ariaValue.valueNow,\n      onPointerDown: onPointerDown,\n      onKeyDown: onKeyDown\n    }, React.createElement(InternalIcon, Object.assign({}, iconProps)))\n  );\n});\nexport default DragHandleButton;","map":{"version":3,"names":["React","forwardRef","useRef","clsx","useMergeRefs","InternalIcon","ResizeIcon","styles","testUtilsStyles","DragHandleButton","_ref","ref","variant","size","active","className","ariaLabel","ariaLabelledBy","ariaDescribedby","ariaValue","disabled","onPointerDown","onKeyDown","dragHandleRefObject","iconProps","shared","undefined","Object","assign","name","svg","createElement","role","tabIndex","handle","root","valueMax","valueMin","valueNow"],"sources":["/Users/naman/Desktop/Portfolio/react-portfolio/node_modules/src/internal/components/drag-handle/button.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { forwardRef, useRef } from 'react';\nimport clsx from 'clsx';\n\nimport { useMergeRefs } from '@cloudscape-design/component-toolkit/internal';\n\nimport { IconProps } from '../../../icon/interfaces';\nimport InternalIcon from '../../../icon/internal';\nimport { DragHandleProps } from './interfaces';\nimport { ResizeIcon } from './resize-icon';\n\nimport styles from './styles.css.js';\nimport testUtilsStyles from './test-classes/styles.css.js';\n\nconst DragHandleButton = forwardRef(\n  (\n    {\n      variant = 'drag-indicator',\n      size = 'normal',\n      active = false,\n      className,\n      ariaLabel,\n      ariaLabelledBy,\n      ariaDescribedby,\n      ariaValue,\n      disabled,\n      onPointerDown,\n      onKeyDown,\n    }: DragHandleProps,\n    ref: React.Ref<Element>\n  ) => {\n    const dragHandleRefObject = useRef<HTMLDivElement>(null);\n\n    const iconProps: IconProps = (() => {\n      const shared = { variant: disabled ? ('disabled' as const) : undefined, size };\n      switch (variant) {\n        case 'drag-indicator':\n          return { ...shared, name: 'drag-indicator' };\n        case 'resize-area':\n          return { ...shared, name: 'resize-area' };\n        case 'resize-horizontal':\n          return { ...shared, svg: <ResizeIcon variant=\"horizontal\" /> };\n        case 'resize-vertical':\n          return { ...shared, svg: <ResizeIcon variant=\"vertical\" /> };\n      }\n    })();\n\n    return (\n      // We need to use a div with button role instead of a button\n      // so that Safari will focus on it when clicking it.\n      // (See https://bugs.webkit.org/show_bug.cgi?id=22261)\n      // Otherwise, we can't reliably catch keyboard events coming from the handle\n      // when it is being dragged.\n      <div\n        ref={useMergeRefs(ref, dragHandleRefObject)}\n        role={ariaValue ? 'slider' : 'application'}\n        tabIndex={0}\n        className={clsx(\n          className,\n          styles.handle,\n          testUtilsStyles.root,\n          styles[`handle-${variant}`],\n          styles[`handle-size-${size}`],\n          disabled && styles['handle-disabled'],\n          active && styles.active\n        )}\n        aria-label={ariaLabel}\n        aria-labelledby={ariaLabelledBy}\n        aria-describedby={ariaDescribedby}\n        aria-disabled={disabled}\n        aria-valuemax={ariaValue?.valueMax}\n        aria-valuemin={ariaValue?.valueMin}\n        aria-valuenow={ariaValue?.valueNow}\n        onPointerDown={onPointerDown}\n        onKeyDown={onKeyDown}\n      >\n        <InternalIcon {...iconProps} />\n      </div>\n    );\n  }\n);\n\nexport default DragHandleButton;\n"],"mappings":"AAAA;AACA;AACA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,MAAM,QAAQ,OAAO;AACjD,OAAOC,IAAI,MAAM,MAAM;AAEvB,SAASC,YAAY,QAAQ,+CAA+C;AAG5E,OAAOC,YAAY,MAAM,wBAAwB;AAEjD,SAASC,UAAU,QAAQ,eAAe;AAE1C,OAAOC,MAAM,MAAM,iBAAiB;AACpC,OAAOC,eAAe,MAAM,8BAA8B;AAE1D,MAAMC,gBAAgB,GAAGR,UAAU,CACjC,CAAAS,IAAA,EAcEC,GAAuB,KACrB;EAAA,IAdF;IACEC,OAAO,GAAG,gBAAgB;IAC1BC,IAAI,GAAG,QAAQ;IACfC,MAAM,GAAG,KAAK;IACdC,SAAS;IACTC,SAAS;IACTC,cAAc;IACdC,eAAe;IACfC,SAAS;IACTC,QAAQ;IACRC,aAAa;IACbC;EAAS,CACO,GAAAZ,IAAA;EAGlB,MAAMa,mBAAmB,GAAGrB,MAAM,CAAiB,IAAI,CAAC;EAExD,MAAMsB,SAAS,GAAc,CAAC,MAAK;IACjC,MAAMC,MAAM,GAAG;MAAEb,OAAO,EAAEQ,QAAQ,GAAI,UAAoB,GAAGM,SAAS;MAAEb;IAAI,CAAE;IAC9E,QAAQD,OAAO;MACb,KAAK,gBAAgB;QACnB,OAAAe,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KAAYH,MAAM;UAAEI,IAAI,EAAE;QAAgB;MAC5C,KAAK,aAAa;QAChB,OAAAF,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KAAYH,MAAM;UAAEI,IAAI,EAAE;QAAa;MACzC,KAAK,mBAAmB;QACtB,OAAAF,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KAAYH,MAAM;UAAEK,GAAG,EAAE9B,KAAA,CAAA+B,aAAA,CAACzB,UAAU;YAACM,OAAO,EAAC;UAAY;QAAG;MAC9D,KAAK,iBAAiB;QACpB,OAAAe,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KAAYH,MAAM;UAAEK,GAAG,EAAE9B,KAAA,CAAA+B,aAAA,CAACzB,UAAU;YAACM,OAAO,EAAC;UAAU;QAAG;;EAEhE,CAAC,EAAC,CAAE;EAEJ;IACE;IACA;IACA;IACA;IACA;IACAZ,KAAA,CAAA+B,aAAA;MACEpB,GAAG,EAAEP,YAAY,CAACO,GAAG,EAAEY,mBAAmB,CAAC;MAC3CS,IAAI,EAAEb,SAAS,GAAG,QAAQ,GAAG,aAAa;MAC1Cc,QAAQ,EAAE,CAAC;MACXlB,SAAS,EAAEZ,IAAI,CACbY,SAAS,EACTR,MAAM,CAAC2B,MAAM,EACb1B,eAAe,CAAC2B,IAAI,EACpB5B,MAAM,CAAC,UAAUK,OAAO,EAAE,CAAC,EAC3BL,MAAM,CAAC,eAAeM,IAAI,EAAE,CAAC,EAC7BO,QAAQ,IAAIb,MAAM,CAAC,iBAAiB,CAAC,EACrCO,MAAM,IAAIP,MAAM,CAACO,MAAM,CACxB;MAAA,cACWE,SAAS;MAAA,mBACJC,cAAc;MAAA,oBACbC,eAAe;MAAA,iBAClBE,QAAQ;MAAA,iBACRD,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEiB,QAAQ;MAAA,iBACnBjB,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEkB,QAAQ;MAAA,iBACnBlB,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEmB,QAAQ;MAClCjB,aAAa,EAAEA,aAAa;MAC5BC,SAAS,EAAEA;IAAS,GAEpBtB,KAAA,CAAA+B,aAAA,CAAC1B,YAAY,EAAAsB,MAAA,CAAAC,MAAA,KAAKJ,SAAS,EAAI;EAC3B;AAEV,CAAC,CACF;AAED,eAAef,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}