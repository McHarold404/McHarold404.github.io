{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { useEffect } from 'react';\nimport { GIT_SHA, PACKAGE_VERSION, THEME } from '../../environment';\nimport { metrics } from '../../metrics';\nexport function checkMissingStyles() {\n  const result = getComputedStyle(document.body).getPropertyValue(`--awsui-version-info-${GIT_SHA}`);\n  if (!result) {\n    console.error(`Missing AWS-UI CSS for theme \"${THEME}\", version \"${PACKAGE_VERSION}\", and git sha \"${GIT_SHA}\".`);\n    metrics.sendOpsMetricObject('awsui-missing-css-asset', {});\n  }\n}\nexport function idleWithDelay(cb) {\n  // if idle callbacks not supported, we simply do not collect the metric\n  if (typeof requestIdleCallback !== 'function') {\n    return;\n  }\n  let aborted = false;\n  setTimeout(() => {\n    if (aborted) {\n      return;\n    }\n    requestIdleCallback(() => {\n      if (aborted) {\n        return;\n      }\n      cb();\n    });\n  }, 1000);\n  return () => {\n    aborted = true;\n  };\n}\nlet checked = false;\nconst checkMissingStylesOnce = () => {\n  if (!checked) {\n    checkMissingStyles();\n    checked = true;\n  }\n};\nexport function useMissingStylesCheck() {\n  useEffect(() => {\n    return idleWithDelay(() => checkMissingStylesOnce());\n  }, []);\n}","map":{"version":3,"names":["useEffect","GIT_SHA","PACKAGE_VERSION","THEME","metrics","checkMissingStyles","result","getComputedStyle","document","body","getPropertyValue","console","error","sendOpsMetricObject","idleWithDelay","cb","requestIdleCallback","aborted","setTimeout","checked","checkMissingStylesOnce","useMissingStylesCheck"],"sources":["/Users/naman/Desktop/Portfolio/react-portfolio/node_modules/src/internal/hooks/use-base-component/styles-check.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { useEffect } from 'react';\n\nimport { GIT_SHA, PACKAGE_VERSION, THEME } from '../../environment';\nimport { metrics } from '../../metrics';\n\nexport function checkMissingStyles() {\n  const result = getComputedStyle(document.body).getPropertyValue(`--awsui-version-info-${GIT_SHA}`);\n  if (!result) {\n    console.error(`Missing AWS-UI CSS for theme \"${THEME}\", version \"${PACKAGE_VERSION}\", and git sha \"${GIT_SHA}\".`);\n    metrics.sendOpsMetricObject('awsui-missing-css-asset', {});\n  }\n}\n\nexport function idleWithDelay(cb: () => void) {\n  // if idle callbacks not supported, we simply do not collect the metric\n  if (typeof requestIdleCallback !== 'function') {\n    return;\n  }\n  let aborted = false;\n\n  setTimeout(() => {\n    if (aborted) {\n      return;\n    }\n    requestIdleCallback(() => {\n      if (aborted) {\n        return;\n      }\n      cb();\n    });\n  }, 1000);\n\n  return () => {\n    aborted = true;\n  };\n}\n\nlet checked = false;\nconst checkMissingStylesOnce = () => {\n  if (!checked) {\n    checkMissingStyles();\n    checked = true;\n  }\n};\n\nexport function useMissingStylesCheck() {\n  useEffect(() => {\n    return idleWithDelay(() => checkMissingStylesOnce());\n  }, []);\n}\n"],"mappings":"AAAA;AACA;AACA,SAASA,SAAS,QAAQ,OAAO;AAEjC,SAASC,OAAO,EAAEC,eAAe,EAAEC,KAAK,QAAQ,mBAAmB;AACnE,SAASC,OAAO,QAAQ,eAAe;AAEvC,OAAM,SAAUC,kBAAkBA,CAAA;EAChC,MAAMC,MAAM,GAAGC,gBAAgB,CAACC,QAAQ,CAACC,IAAI,CAAC,CAACC,gBAAgB,CAAC,wBAAwBT,OAAO,EAAE,CAAC;EAClG,IAAI,CAACK,MAAM,EAAE;IACXK,OAAO,CAACC,KAAK,CAAC,iCAAiCT,KAAK,eAAeD,eAAe,mBAAmBD,OAAO,IAAI,CAAC;IACjHG,OAAO,CAACS,mBAAmB,CAAC,yBAAyB,EAAE,EAAE,CAAC;;AAE9D;AAEA,OAAM,SAAUC,aAAaA,CAACC,EAAc;EAC1C;EACA,IAAI,OAAOC,mBAAmB,KAAK,UAAU,EAAE;IAC7C;;EAEF,IAAIC,OAAO,GAAG,KAAK;EAEnBC,UAAU,CAAC,MAAK;IACd,IAAID,OAAO,EAAE;MACX;;IAEFD,mBAAmB,CAAC,MAAK;MACvB,IAAIC,OAAO,EAAE;QACX;;MAEFF,EAAE,EAAE;IACN,CAAC,CAAC;EACJ,CAAC,EAAE,IAAI,CAAC;EAER,OAAO,MAAK;IACVE,OAAO,GAAG,IAAI;EAChB,CAAC;AACH;AAEA,IAAIE,OAAO,GAAG,KAAK;AACnB,MAAMC,sBAAsB,GAAGA,CAAA,KAAK;EAClC,IAAI,CAACD,OAAO,EAAE;IACZd,kBAAkB,EAAE;IACpBc,OAAO,GAAG,IAAI;;AAElB,CAAC;AAED,OAAM,SAAUE,qBAAqBA,CAAA;EACnCrB,SAAS,CAAC,MAAK;IACb,OAAOc,aAAa,CAAC,MAAMM,sBAAsB,EAAE,CAAC;EACtD,CAAC,EAAE,EAAE,CAAC;AACR","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}