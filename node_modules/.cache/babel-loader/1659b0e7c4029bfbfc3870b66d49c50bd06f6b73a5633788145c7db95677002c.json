{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n'use client';\n\nimport { __rest } from \"tslib\";\nimport React from 'react';\nimport { warnOnce } from '@cloudscape-design/component-toolkit/internal';\nimport useBaseComponent from '../internal/hooks/use-base-component';\nimport { isDevelopment } from '../internal/is-development';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport { getExternalProps } from '../internal/utils/external-props';\nimport InternalPopover from './internal';\nconst Popover = React.forwardRef((_a, ref) => {\n  var {\n      position = 'right',\n      size = 'medium',\n      fixedWidth = false,\n      triggerType = 'text',\n      dismissButton = true,\n      renderWithPortal = false,\n      wrapTriggerText = true,\n      header\n    } = _a,\n    rest = __rest(_a, [\"position\", \"size\", \"fixedWidth\", \"triggerType\", \"dismissButton\", \"renderWithPortal\", \"wrapTriggerText\", \"header\"]);\n  if (isDevelopment) {\n    if (dismissButton && !header) {\n      warnOnce('Popover', `You should provide a \\`header\\` when \\`dismissButton\\` is true.`);\n    }\n  }\n  const baseComponentProps = useBaseComponent('Popover', {\n    props: {\n      dismissButton,\n      fixedWidth,\n      position,\n      renderWithPortal,\n      size,\n      triggerType\n    }\n  });\n  const externalProps = getExternalProps(rest);\n  return React.createElement(InternalPopover, Object.assign({\n    ref: ref,\n    header: header,\n    position: position,\n    size: size,\n    fixedWidth: fixedWidth,\n    triggerType: triggerType,\n    dismissButton: dismissButton,\n    renderWithPortal: renderWithPortal,\n    wrapTriggerText: wrapTriggerText\n  }, externalProps, baseComponentProps));\n});\napplyDisplayName(Popover, 'Popover');\nexport default Popover;","map":{"version":3,"names":["React","warnOnce","useBaseComponent","isDevelopment","applyDisplayName","getExternalProps","InternalPopover","Popover","forwardRef","_a","ref","position","size","fixedWidth","triggerType","dismissButton","renderWithPortal","wrapTriggerText","header","rest","__rest","baseComponentProps","props","externalProps","createElement","Object","assign"],"sources":["/Users/naman/Desktop/Portfolio/react-portfolio/node_modules/src/popover/index.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n'use client';\nimport React from 'react';\n\nimport { warnOnce } from '@cloudscape-design/component-toolkit/internal';\n\nimport useBaseComponent from '../internal/hooks/use-base-component';\nimport { isDevelopment } from '../internal/is-development';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport { getExternalProps } from '../internal/utils/external-props';\nimport { PopoverProps } from './interfaces';\nimport InternalPopover from './internal';\n\nexport { PopoverProps };\n\nconst Popover = React.forwardRef(\n  (\n    {\n      position = 'right',\n      size = 'medium',\n      fixedWidth = false,\n      triggerType = 'text',\n      dismissButton = true,\n      renderWithPortal = false,\n      wrapTriggerText = true,\n      header,\n      ...rest\n    }: PopoverProps,\n    ref: React.Ref<PopoverProps.Ref>\n  ) => {\n    if (isDevelopment) {\n      if (dismissButton && !header) {\n        warnOnce('Popover', `You should provide a \\`header\\` when \\`dismissButton\\` is true.`);\n      }\n    }\n\n    const baseComponentProps = useBaseComponent('Popover', {\n      props: { dismissButton, fixedWidth, position, renderWithPortal, size, triggerType },\n    });\n    const externalProps = getExternalProps(rest);\n\n    return (\n      <InternalPopover\n        ref={ref}\n        header={header}\n        position={position}\n        size={size}\n        fixedWidth={fixedWidth}\n        triggerType={triggerType}\n        dismissButton={dismissButton}\n        renderWithPortal={renderWithPortal}\n        wrapTriggerText={wrapTriggerText}\n        {...externalProps}\n        {...baseComponentProps}\n      />\n    );\n  }\n);\n\napplyDisplayName(Popover, 'Popover');\nexport default Popover;\n"],"mappings":"AAAA;AACA;AACA,YAAY;;;AACZ,OAAOA,KAAK,MAAM,OAAO;AAEzB,SAASC,QAAQ,QAAQ,+CAA+C;AAExE,OAAOC,gBAAgB,MAAM,sCAAsC;AACnE,SAASC,aAAa,QAAQ,4BAA4B;AAC1D,SAASC,gBAAgB,QAAQ,sCAAsC;AACvE,SAASC,gBAAgB,QAAQ,kCAAkC;AAEnE,OAAOC,eAAe,MAAM,YAAY;AAIxC,MAAMC,OAAO,GAAGP,KAAK,CAACQ,UAAU,CAC9B,CACEC,EAUe,EACfC,GAAgC,KAC9B;MAZF;MACEC,QAAQ,GAAG,OAAO;MAClBC,IAAI,GAAG,QAAQ;MACfC,UAAU,GAAG,KAAK;MAClBC,WAAW,GAAG,MAAM;MACpBC,aAAa,GAAG,IAAI;MACpBC,gBAAgB,GAAG,KAAK;MACxBC,eAAe,GAAG,IAAI;MACtBC;IAAM,IAAAT,EAEO;IADVU,IAAI,GAAAC,MAAA,CAAAX,EAAA,EATT,mHAUC,CADQ;EAIT,IAAIN,aAAa,EAAE;IACjB,IAAIY,aAAa,IAAI,CAACG,MAAM,EAAE;MAC5BjB,QAAQ,CAAC,SAAS,EAAE,iEAAiE,CAAC;;;EAI1F,MAAMoB,kBAAkB,GAAGnB,gBAAgB,CAAC,SAAS,EAAE;IACrDoB,KAAK,EAAE;MAAEP,aAAa;MAAEF,UAAU;MAAEF,QAAQ;MAAEK,gBAAgB;MAAEJ,IAAI;MAAEE;IAAW;GAClF,CAAC;EACF,MAAMS,aAAa,GAAGlB,gBAAgB,CAACc,IAAI,CAAC;EAE5C,OACEnB,KAAA,CAAAwB,aAAA,CAAClB,eAAe,EAAAmB,MAAA,CAAAC,MAAA;IACdhB,GAAG,EAAEA,GAAG;IACRQ,MAAM,EAAEA,MAAM;IACdP,QAAQ,EAAEA,QAAQ;IAClBC,IAAI,EAAEA,IAAI;IACVC,UAAU,EAAEA,UAAU;IACtBC,WAAW,EAAEA,WAAW;IACxBC,aAAa,EAAEA,aAAa;IAC5BC,gBAAgB,EAAEA,gBAAgB;IAClCC,eAAe,EAAEA;EAAe,GAC5BM,aAAa,EACbF,kBAAkB,EACtB;AAEN,CAAC,CACF;AAEDjB,gBAAgB,CAACG,OAAO,EAAE,SAAS,CAAC;AACpC,eAAeA,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}